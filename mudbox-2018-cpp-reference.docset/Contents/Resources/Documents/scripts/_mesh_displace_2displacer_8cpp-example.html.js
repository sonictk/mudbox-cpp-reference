var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>MeshDisplace/displacer.cpp</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_mesh_displace_2displacer_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>MeshDisplace/displacer.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MeshDisplace/displacer.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2008 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CREATED: October 2008</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable : 4311 4312 )</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;displacer.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;<a class=\"code\" href=\"#!/url=./cpp_ref/math_8h.html\">math.h</a>&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;QtCore/QFileInfo&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;QtCore/QDir&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;QtGui/QDialog&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;QtGui/QDialogButtonBox&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined (JAMBUILD)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/_map_extractor_a_p_i_8h.html\">MapExtractorAPI/MapExtractorAPI.h</a>&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/MapExtractorAPI/MapExtractorAPI.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html\">mapextraction</a>;</div>\n\
<div class=\"line\"><a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#ad54524b181b971ce9b577312ba2c5e65\">IMPLEMENT_SCLASS</a>( DisplaceOperation, TreeNode, <span class=\"stringliteral\">&quot;Displace&quot;</span>, 1 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Register this plugin, use the DisplaceOperation::Initializer function as the initialized, this will be called when the plugin got loaded.</span></div>\n\
<div class=\"line\"><a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#afa2df46a730e8fc8bceb9410c0ff6838\">MB_PLUGIN</a>( <span class=\"stringliteral\">&quot;MeshDisplacer&quot;</span>, <span class=\"stringliteral\">&quot;Displacement operation for meshes&quot;</span>, <span class=\"stringliteral\">&quot;Autodesk&quot;</span>, <span class=\"stringliteral\">&quot;http://www.mudbox3d.com&quot;</span>, DisplaceOperation::Initializer );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">DisplaceOperation::DisplaceOperation( <span class=\"keywordtype\">void</span> ) : </div>\n\
<div class=\"line\">    Node( <span class=\"stringliteral\">&quot;Displacement&quot;</span> ), </div>\n\
<div class=\"line\">    m_aTiles( <span class=\"stringliteral\">&quot;displaceoperation tilelist&quot;</span> ),</div>\n\
<div class=\"line\"><span class=\"comment\">//  m_aTiles( &quot;displaceoperation tilelist&quot; ), </span></div>\n\
<div class=\"line\">    m_pObject( this, <span class=\"stringliteral\">&quot;Target Mesh&quot;</span> ),</div>\n\
<div class=\"line\">    m_iSubdivisionLevel( this, <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Displace To Level&quot;</span>) ),</div>\n\
<div class=\"line\">    m_iMaskChannel( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Use Mask Channel&quot;</span>) ),</div>\n\
<div class=\"line\">    m_iUDim( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;URange&quot;</span>) ),</div>\n\
<div class=\"line\">    m_iFirstTileIndex( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Initial Tile Number&quot;</span>) ),</div>\n\
<div class=\"line\">    m_sTileRange( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Use Tile Range&quot;</span>) ),</div>\n\
<div class=\"line\">    m_sDisplacementFileMask( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Map&quot;</span>) ),</div>\n\
<div class=\"line\">    m_sMaskFileMask( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Mask Map&quot;</span>) ),</div>\n\
<div class=\"line\">    m_iFinalFaceCount( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Final Face Count&quot;</span>) ),</div>\n\
<div class=\"line\">    m_eExecute( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Go&quot;</span>) ),</div>\n\
<div class=\"line\">    m_eDelete( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Delete this operation&quot;</span>) ),</div>\n\
<div class=\"line\"><span class=\"comment\">//  m_sName( &quot;Node Name&quot; ),</span></div>\n\
<div class=\"line\">    m_iDisplacementChannel( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Use Displacement Channel&quot;</span>) ),</div>\n\
<div class=\"line\">    m_bSmoothTC( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Smooth Texture Coors&quot;</span>) ),</div>\n\
<div class=\"line\">    m_sNextCommand( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Next Command&quot;</span>) ),</div>\n\
<div class=\"line\">    m_eMapSpace( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Map Space&quot;</span>) ),</div>\n\
<div class=\"line\">    m_fMidvalue( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Mid value&quot;</span>) ),</div>\n\
<div class=\"line\">    m_fMultiplier( this, <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Multiplier&quot;</span>) )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    m_eMapSpace.AddItem( tr(<span class=\"stringliteral\">&quot;Normal (regular displacement map)&quot;</span>) );</div>\n\
<div class=\"line\">    m_eMapSpace.AddItem( tr(<span class=\"stringliteral\">&quot;Relative Tangent&quot;</span>) );</div>\n\
<div class=\"line\">    m_eMapSpace.AddItem( tr(<span class=\"stringliteral\">&quot;Absolute Tangent&quot;</span>) );</div>\n\
<div class=\"line\">    m_eMapSpace.AddItem( tr(<span class=\"stringliteral\">&quot;Object&quot;</span>) );</div>\n\
<div class=\"line\">    m_eMapSpace.AddItem( tr(<span class=\"stringliteral\">&quot;World&quot;</span>) );</div>\n\
<div class=\"line\">    m_eMapSpace.SetCategory( <span class=\"stringliteral\">&quot;#top&quot;</span> );</div>\n\
<div class=\"line\">    m_eMapSpace = 0;</div>\n\
<div class=\"line\">    m_eMapSpace.SetVisible( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Assign a unique name to this node.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 1;</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sName;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">do</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        b = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        sName = <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(tr(<span class=\"stringliteral\">&quot;Operation #%1&quot;</span>)).<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a5feeac90490ef91a9faf3021dab55c80\">arg</a>(i); </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( Node *<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> = First(); <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a>-&gt;Next() )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a>-&gt;IsKindOf( StaticClass() ) )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( sName == dynamic_cast&lt;DisplaceOperation *&gt;( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> )-&gt;Name() )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    i++;</div>\n\
<div class=\"line\">                    b = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">while</span> ( b );</div>\n\
<div class=\"line\">    SetName( sName );</div>\n\
<div class=\"line\">    m_bFloatMap = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    m_iBaseU = 0;</div>\n\
<div class=\"line\">    m_iBaseV = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_pObject.m_sNullString = tr(<span class=\"stringliteral\">&quot;- Select a Mesh -&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    LoadTemplate();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_fMidvalue.SetVisible( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    m_fMultiplier.SetVisible( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    m_sMaskFileMask.SetVisible( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_sNextCommand.SetVisible( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    m_sNextCommand.Connect( <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;NextCommand );</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html\">QWidget</a>* DisplaceOperation::CreatePropertiesWindow( <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html\">QWidget</a> *pParent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sName = Name();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html\">QWidget</a>* pW = TreeNode::CreatePropertiesWindow(pParent);</div>\n\
<div class=\"line\">    SetName(sName);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_h_box_layout.html\">QHBoxLayout</a>* pButtonsLayout = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_h_box_layout.html\">QHBoxLayout</a>;</div>\n\
<div class=\"line\">    pButtonsLayout-&gt;<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_layout.html#aafd70b2f0fc9bc4494c58d92e071afe4\">setContentsMargins</a>(10, 0, 10, 10);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    HelpButton* pHelpButton = <span class=\"keyword\">new</span> HelpButton( pW, <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;SculptUsingDisplacementHelp&quot;</span>) );</div>\n\
<div class=\"line\">    pHelpButton-&gt;setFixedWidth( 120 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_push_button.html\">QPushButton</a> *pDoneButton = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_push_button.html\">QPushButton</a>( tr(<span class=\"stringliteral\">&quot;Done&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    pButtonsLayout-&gt;<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_box_layout.html#ac719e214c34334243497a0f5e7497ada\">addWidget</a>(pHelpButton, <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_qt.html#a8f9fe098f54e42143359f7ad61f61b4fa291bdf1a2284d5648efc75ee78fbeb4c\">Qt::AlignLeft</a>);</div>\n\
<div class=\"line\">    pButtonsLayout-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_box_layout.html#ac719e214c34334243497a0f5e7497ada\">addWidget</a>(pDoneButton);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html\">QWidget</a> *pTmpW = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html\">QWidget</a>;</div>\n\
<div class=\"line\">    pTmpW-&gt;<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#a76c1daa0d8f044bafb56b5c669feecc9\">setLayout</a>(pButtonsLayout);</div>\n\
<div class=\"line\">    pW-&gt;<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#af399c2bec6dfb45bae65276136bef2b4\">layout</a>()-&gt;<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_layout.html#aa93d3596c4e64dae54fd2c5a29a34982\">addWidget</a>(pTmpW);</div>\n\
<div class=\"line\">    pW-&gt;<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#a4b148f40a95444d5669406b918ad2f52\">show</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a02ab4ce6f3e14b3962269f2dfa52ca75\">MB_VERIFY</a>( pW-&gt;<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_object.html#a36adcf1b3cc7e17b84d884d99b5ad748\">connect</a>( pDoneButton, <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qobjectdefs_8h.html#a655037e5154bbbf5c75d419b9d90a156\">SIGNAL</a>(released()), pW, <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qobjectdefs_8h.html#a303571255f7e9913707f640a4e6f9f1f\">SLOT</a>(reject()) ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    pW-&gt;<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#a84535694a566d1a20b13184c787d2515\">setWindowTitle</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(tr(<span class=\"stringliteral\">&quot;Sculpt using Map - %1&quot;</span>).arg(sName)) );</div>\n\
<div class=\"line\">    pW-&gt;<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#a72868655f1024742a57e494c6ee6a0e0\">resize</a>( pW-&gt;<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#a3d35d44d9c21b79d565669248204c412\">size</a>().<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_size.html#a369399896761e31ae71db57fdd0ba431\">width</a>(), pW-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_widget.html#a3d35d44d9c21b79d565669248204c412\">size</a>().<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_size.html#ae26bcfe2f33f5873dbdfb6948cf1f59f\">height</a>() + 40 );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> pW;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> DisplaceOperation::Serialize( Stream &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    s == m_pObject == m_iSubdivisionLevel == m_iFinalFaceCount == m_iUDim == m_iFirstTileIndex == m_sTileRange == m_sDisplacementFileMask == m_sMaskFileMask == m_iMaskChannel;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( s.IsOlderThan( 300 ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> s1;</div>\n\
<div class=\"line\">        s == s1;</div>\n\
<div class=\"line\">        SetName( s1 );</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !s.IsOlderThan( 155+1 ) )</div>\n\
<div class=\"line\">        s == m_bSmoothTC;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// TODO after merge</span></div>\n\
<div class=\"line\"><span class=\"comment\">/*  QString sFN = m_sDisplacementFileMask;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    {</span></div>\n\
<div class=\"line\"><span class=\"comment\">        m_bFloatMap = false;</span></div>\n\
<div class=\"line\"><span class=\"comment\">        QFileInfo f( sFN );</span></div>\n\
<div class=\"line\"><span class=\"comment\">        if ( f.suffix() == &quot;tif&quot; )</span></div>\n\
<div class=\"line\"><span class=\"comment\">        {</span></div>\n\
<div class=\"line\"><span class=\"comment\">            TIFF *t = TIFFOpen( sFN, &quot;r&quot; );</span></div>\n\
<div class=\"line\"><span class=\"comment\">            if ( t )</span></div>\n\
<div class=\"line\"><span class=\"comment\">            {</span></div>\n\
<div class=\"line\"><span class=\"comment\">                unsigned short int iBitsPerSample;</span></div>\n\
<div class=\"line\"><span class=\"comment\">                VERIFY( TIFFGetField( t, TIFFTAG_BITSPERSAMPLE, &amp;iBitsPerSample ) );</span></div>\n\
<div class=\"line\"><span class=\"comment\">                if ( iBitsPerSample == 32 )</span></div>\n\
<div class=\"line\"><span class=\"comment\">                    m_bFloatMap = true;</span></div>\n\
<div class=\"line\"><span class=\"comment\">                TIFFClose( t );</span></div>\n\
<div class=\"line\"><span class=\"comment\">            };</span></div>\n\
<div class=\"line\"><span class=\"comment\">        };</span></div>\n\
<div class=\"line\"><span class=\"comment\">        if ( m_bFloatMap )</span></div>\n\
<div class=\"line\"><span class=\"comment\">        {</span></div>\n\
<div class=\"line\"><span class=\"comment\">            m_fDisplacementMax.SetConst( true );</span></div>\n\
<div class=\"line\"><span class=\"comment\">            m_fDisplacementMin.SetConst( true );</span></div>\n\
<div class=\"line\"><span class=\"comment\">        }</span></div>\n\
<div class=\"line\"><span class=\"comment\">        else</span></div>\n\
<div class=\"line\"><span class=\"comment\">        {</span></div>\n\
<div class=\"line\"><span class=\"comment\">            m_fDisplacementMax.SetConst( false );</span></div>\n\
<div class=\"line\"><span class=\"comment\">            m_fDisplacementMin.SetConst( false );</span></div>\n\
<div class=\"line\"><span class=\"comment\">        };</span></div>\n\
<div class=\"line\"><span class=\"comment\">    };*/</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( s.IsNewerThan( 340 ) )</div>\n\
<div class=\"line\">        TreeNode::Serialize( s );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( s.IsNewerThan( 0, <span class=\"keyword\">this</span> ) )</div>\n\
<div class=\"line\">        s == m_eMapSpace;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> DisplaceOperation::OnNodeEvent( <span class=\"keyword\">const</span> Attribute &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>, <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06da\">NodeEventType</a> eType )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( a == m_pObject &amp;&amp; eType == <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa274758890f9a27906be7336f4b8e4780\">etValueChanged</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Disable subdivision if the object already has more than one subdivision levels.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//if ( m_pObject != 0 &amp;&amp; m_pObject-&gt;LevelCount() &gt; 1 )</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//{</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  m_iSubdivisionLevel.SetConst( true );</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  m_bSmoothTC.SetConst( true );</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  m_iSubdivisionLevel = m_pObject-&gt;ActiveLevel()-&gt;Index();</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//}</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//else</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//{</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  m_iSubdivisionLevel.SetConst( m_pObject == 0 );</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  m_bSmoothTC.SetConst( m_pObject == 0 );</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//};</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_pObject )</div>\n\
<div class=\"line\">            m_iSubdivisionLevel = m_pObject-&gt;LevelCount()-1;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"comment\">// Recalculate the face count if the object or level is changed.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( (a == m_iSubdivisionLevel || a == m_pObject) &amp;&amp; eType == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa274758890f9a27906be7336f4b8e4780\">etValueChanged</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_pObject.Value() &amp;&amp; m_iSubdivisionLevel &lt; <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(m_pObject-&gt;LevelCount()-1) )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;MessageBox( <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#ad249d76933bdf54c35f4eaf51a5b7965ae0d7cc9fcdab6e6ea54e11679172416b\">mudbox::Interface::msgError</a>, tr(<span class=\"stringliteral\">&quot;Error&quot;</span>), tr(<span class=\"stringliteral\">&quot;Subdivision level cannot be less than %1&quot;</span>).arg( m_pObject-&gt;LevelCount()-1 ) );</div>\n\
<div class=\"line\">            m_iSubdivisionLevel = m_pObject-&gt;LevelCount()-1;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_pObject != 0 &amp;&amp; m_iSubdivisionLevel != -1)</div>\n\
<div class=\"line\">            m_iFinalFaceCount = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(m_pObject-&gt;LowestLevel()-&gt;TotalFaceCount()*pow(<span class=\"keywordtype\">float</span>(4),m_iSubdivisionLevel));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            m_iFinalFaceCount = 0;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( eType == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa274758890f9a27906be7336f4b8e4780\">etValueChanged</a> &amp;&amp; a == m_sNextCommand )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sOp = m_sNextCommand.Value().<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a533122c15261965c9fdf6c92e1874eab\">section</a>( <span class=\"charliteral\">&#39; &#39;</span>, 0, 0 );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( sOp == <span class=\"stringliteral\">&quot;meshdisplacement&quot;</span> )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sName = m_sNextCommand.Value().<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a533122c15261965c9fdf6c92e1874eab\">section</a>( <span class=\"charliteral\">&#39;&quot;&#39;</span>, 1, 1 );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( sName == Name() )</div>\n\
<div class=\"line\">                Do();</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Displacement filename is changed</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( a == m_sDisplacementFileMask &amp;&amp; eType == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa274758890f9a27906be7336f4b8e4780\">etValueChanged</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sFN = m_sDisplacementFileMask.Value();</div>\n\
<div class=\"line\">        m_sDisplacementFileMask = FilterFileName( sFN );</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"comment\">// Mask filename is changed, replace 0001 with %i since it is possibly the tile index.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( a == m_sMaskFileMask &amp;&amp; eType == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa274758890f9a27906be7336f4b8e4780\">etValueChanged</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sFN = m_sMaskFileMask.Value();</div>\n\
<div class=\"line\">        m_sMaskFileMask = FilterFileName( sFN );</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"comment\">// Start operation was pressed</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( a == m_eExecute &amp;&amp; eType == <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa368d47c248c8014e637874410c721c86\">etEventTriggered</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;RecordCommand( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;meshdisplacement \\&quot;%1\\&quot;&quot;</span>).arg(Name()) );</div>\n\
<div class=\"line\">        Do();</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"comment\">// Delete pressed, delete the operation.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( a == m_eDelete &amp;&amp; eType == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06daa368d47c248c8014e637874410c721c86\">etEventTriggered</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Seems unsafe to delete this here.  I have no idea who may have</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// references to &#39;this&#39;.  Adding the RemoveChild to at least remove</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the node from the graph.  Otherwise children will have invalid</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// sibling ptrs.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Scene()-&gt;RemoveChild(<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;RefreshUI();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> <span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> DisplaceOperation::Do( <span class=\"keywordtype\">void</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( m_pObject == 0 )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">throw</span> <span class=\"keyword\">new</span> Error( tr(<span class=\"stringliteral\">&quot;You must select a mesh in the scene first&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file_info.html\">QFileInfo</a> i( m_sDisplacementFileMask );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( i.suffix() == <span class=\"stringliteral\">&quot;ptx&quot;</span> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_eMapSpace == spaceAbsoluteTangent || m_eMapSpace == <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8af535c9551ac166cd21c73af209338612\">spaceTangent</a> )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            m_pObject-&gt;ActiveLevel()-&gt;RecreateUVs();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !m_pObject-&gt;ActiveLevel()-&gt;HasTC() || m_pObject-&gt;LowestLevel()-&gt;UVlessPaintingStatus() )</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">throw</span> <span class=\"keyword\">new</span> Error( tr(<span class=\"stringliteral\">&quot;Tangent space can only be selected if the target mesh has valid texture coordinates&quot;</span>) );</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Start a single progress bar for the whole process, embed the subprocesses. More than half will be the edge bleeding.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Once that is fixed, the total weight must be reduced.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;ProgressStartGroup( tr(<span class=\"stringliteral\">&quot;Sculpting mesh...&quot;</span>), 51 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// First step: clone the mesh with a new material</span></div>\n\
<div class=\"line\">        Geometry *pG = <span class=\"keyword\">dynamic_cast&lt;</span>Geometry *<span class=\"keyword\">&gt;</span>( Geometry::CreateInstances() );</div>\n\
<div class=\"line\">        m_pObject-&gt;LowestLevel()-&gt;CopyTo( pG-&gt;Level( 0 ) );</div>\n\
<div class=\"line\">        pG-&gt;SetMaterial( CreateInstance&lt;Material&gt;() );</div>\n\
<div class=\"line\">        Transformation *pT = CreateInstance&lt;Transformation&gt;();</div>\n\
<div class=\"line\">        pT-&gt;AddChild( pG );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Second step: import the file(s) as a paint layer to the cloned mesh</span></div>\n\
<div class=\"line\">        aptr&lt;Material&gt; pM; pM = pG-&gt;Material();</div>\n\
<div class=\"line\">        Layer *pL = pM-&gt;ImportPaintLayer( m_sDisplacementFileMask, <span class=\"stringliteral\">&quot;Diffuse&quot;</span>, pG-&gt;Level( 0 ) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !pL )</div>\n\
<div class=\"line\">            <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>( tr( <span class=\"stringliteral\">&quot;Cannot apply the selected file as a displacement map. Topology in the Ptex file does not match the target model.&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Third step: do a map extraction between the meshes</span></div>\n\
<div class=\"line\">        <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html\">Extractor</a> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a> = <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a4573ea5e7797ed296a9d20eea4c8ed27\">CreateNewOperation</a>();</div>\n\
<div class=\"line\">        x.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a1bd028d0d26c5878eab66234c90232e6\">SetSourceCount</a>( 1 );</div>\n\
<div class=\"line\">        x.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a41c642288aedcee5bc010c1c9a3b7c06\">SetSource</a>( 0, pG-&gt;Level( 0 ) );</div>\n\
<div class=\"line\">        x.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a7dfefbd8d23c8d74152296975025a561\">SetTargetCount</a>( 1 );</div>\n\
<div class=\"line\">        x.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a0932b52a706e6abb08f20a9cb909f468\">SetTarget</a>( 0, m_pObject-&gt;ActiveLevel() );</div>\n\
<div class=\"line\">        x.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a4559fd7b43abf6e8f6aff61e31cd065e\">SetTargetSmoothing</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        x.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a8213593af2a2c2ca3450fde3d5cee240\">SetUtilizerType</a>( <a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a0c153b94a6bca7c217001833ee7ea209a66fe04b008187d848e39ac195e44fe94\">utilVertex</a> );</div>\n\
<div class=\"line\">        x.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a6809b54488c3d87df3bb3e94b1dc89df\">SetLocateMethod</a>( <a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a434f56cff1b621d17b787d6b80719bafa5c861e785551a504502d4faef4e7703b\">locSubdivision</a> );</div>\n\
<div class=\"line\">        <a name=\"_a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_paint_layer_sampler.html\">PaintLayerSampler</a> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a1f2d7f8147412c43ba2303a56f97ee73\">c</a> = x.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a00d70c534303b47af0fbafba8d1db2e8\">PaintLayerSampler</a>();</div>\n\
<div class=\"line\">        c.<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#aa53921f9a0d7cdeca641adab213e7dff\">SetEnabled</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">        c.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_paint_layer_sampler.html#a902d72936ea6a0e48f578718f4f97690\">SetChannelName</a>( <span class=\"stringliteral\">&quot;Diffuse&quot;</span> );</div>\n\
<div class=\"line\">        c.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_paint_layer_sampler.html#a1340cb5d1a898ea308b4f9bd91a2ce9e\">SetLayerIndex</a>( pL-&gt;Container()-&gt;LayerIndex( pL ) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8ad0ffb215991a6f69f68c85369926574b\">spaceNormal</a> )</div>\n\
<div class=\"line\">            c.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a72d20c290674b5611fa0febc8ff4c92f\">SetVertexAction</a>( <a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a33fabe593b6eae978548e946995f9111abb156824b08beaca4b95de0bda645043\">vaDisplace</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a72d20c290674b5611fa0febc8ff4c92f\">SetVertexAction</a>( <a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a33fabe593b6eae978548e946995f9111aee5a9e95cf93bfdeab81c71ac6fd8ada\">vaMove</a> );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8a7d5df272701485f6bb8e16b1ddd81a24\">spaceWorld</a> )</div>\n\
<div class=\"line\">                c.<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a19f0e9c14b5f972ca9b10905696bb1b0\">SetVertexMoveSpace</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8a7d5df272701485f6bb8e16b1ddd81a24\">mapextraction::spaceWorld</a> );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8a55cd21c6940ec10b2c5b366532016d6b\">spaceObject</a> )</div>\n\
<div class=\"line\">                c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a19f0e9c14b5f972ca9b10905696bb1b0\">SetVertexMoveSpace</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8a55cd21c6940ec10b2c5b366532016d6b\">mapextraction::spaceObject</a> );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_eMapSpace == spaceAbsoluteTangent )</div>\n\
<div class=\"line\">                c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a19f0e9c14b5f972ca9b10905696bb1b0\">SetVertexMoveSpace</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8af535c9551ac166cd21c73af209338612\">mapextraction::spaceTangent</a> );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8af535c9551ac166cd21c73af209338612\">spaceTangent</a> )</div>\n\
<div class=\"line\">                c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a19f0e9c14b5f972ca9b10905696bb1b0\">SetVertexMoveSpace</a>( <a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8a301c53dbfef31914bdea4ffc6840b377\">mapextraction::spaceRawTangent</a> );</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        c.<a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#abccd43b22def4d5f3d91439399d49992\">SetVertexFactor</a>( Vector( m_fMultiplier, m_fMultiplier, m_fMultiplier ) );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> o = -m_fMidvalue*m_fMultiplier;</div>\n\
<div class=\"line\">        c.<a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a0b1af2f34688347f7838724de5022466\">SetVertexOffset</a>( Vector( o, o, o ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        x.<a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a3a0fb062d1f2d8e06c1bca486b67ca2e\">Execute</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( c.<a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a08dbb4c9385eeb5bb56ca2990f01a189\">ResultLayer</a>() )</div>\n\
<div class=\"line\">            c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a08dbb4c9385eeb5bb56ca2990f01a189\">ResultLayer</a>()-&gt;<a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html#abbcb71bef5b8aa8a2a9fe8997eb04711\">SetName</a>( i.fileName() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Fourth step: delete the temporary mesh and material</span></div>\n\
<div class=\"line\">        aptr&lt;Material&gt; pLM = pG-&gt;Material();</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> pT;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( pM )</div>\n\
<div class=\"line\">            pM.DeleteTarget();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( pLM )</div>\n\
<div class=\"line\">            pLM.DeleteTarget();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// If a mask file is specified, repeat steps 1-4 for the mask</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_sMaskFileMask != <span class=\"stringliteral\">&quot;&quot;</span> )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// First step: clone the mesh with a new material</span></div>\n\
<div class=\"line\">            Geometry *pG = <span class=\"keyword\">dynamic_cast&lt;</span>Geometry *<span class=\"keyword\">&gt;</span>( Geometry::CreateInstances() );</div>\n\
<div class=\"line\">            m_pObject-&gt;LowestLevel()-&gt;CopyTo( pG-&gt;Level( 0 ) );</div>\n\
<div class=\"line\">            pG-&gt;SetMaterial( CreateInstance&lt;Material&gt;() );</div>\n\
<div class=\"line\">            Transformation *pT = CreateInstance&lt;Transformation&gt;();</div>\n\
<div class=\"line\">            pT-&gt;AddChild( pG );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Second step: import the file(s) as a paint layer to the cloned mesh</span></div>\n\
<div class=\"line\">            aptr&lt;Material&gt; pM; pM = pG-&gt;Material();</div>\n\
<div class=\"line\">            Layer *pL = pM-&gt;ImportPaintLayer( m_sMaskFileMask, <span class=\"stringliteral\">&quot;Diffuse&quot;</span>, pG-&gt;Level( 0 ) );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !pL )</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>( tr( <span class=\"stringliteral\">&quot;Cannot apply the selected file as a displacement map. Topology in the Ptex file does not match the target model.&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Third step: do a map extraction between the meshes</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html\">Extractor</a> x = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a4573ea5e7797ed296a9d20eea4c8ed27\">CreateNewOperation</a>();</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a1bd028d0d26c5878eab66234c90232e6\">SetSourceCount</a>( 1 );</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a41c642288aedcee5bc010c1c9a3b7c06\">SetSource</a>( 0, pG-&gt;Level( 0 ) );</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a7dfefbd8d23c8d74152296975025a561\">SetTargetCount</a>( 1 );</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a0932b52a706e6abb08f20a9cb909f468\">SetTarget</a>( 0, m_pObject-&gt;ActiveLevel() );</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a4559fd7b43abf6e8f6aff61e31cd065e\">SetTargetSmoothing</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a8213593af2a2c2ca3450fde3d5cee240\">SetUtilizerType</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a0c153b94a6bca7c217001833ee7ea209a66fe04b008187d848e39ac195e44fe94\">utilVertex</a> );</div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a6809b54488c3d87df3bb3e94b1dc89df\">SetLocateMethod</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a434f56cff1b621d17b787d6b80719bafa5c861e785551a504502d4faef4e7703b\">locSubdivision</a> );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_paint_layer_sampler.html\">PaintLayerSampler</a> c = x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a00d70c534303b47af0fbafba8d1db2e8\">PaintLayerSampler</a>();</div>\n\
<div class=\"line\">            c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#aa53921f9a0d7cdeca641adab213e7dff\">SetEnabled</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">            c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_paint_layer_sampler.html#a902d72936ea6a0e48f578718f4f97690\">SetChannelName</a>( <span class=\"stringliteral\">&quot;Diffuse&quot;</span> );</div>\n\
<div class=\"line\">            c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_paint_layer_sampler.html#a1340cb5d1a898ea308b4f9bd91a2ce9e\">SetLayerIndex</a>( pL-&gt;Container()-&gt;LayerIndex( pL ) );</div>\n\
<div class=\"line\">            c.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a72d20c290674b5611fa0febc8ff4c92f\">SetVertexAction</a>( <a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#a33fabe593b6eae978548e946995f9111a68b3db00e1f667a8625aab83a31f8d53\">vaSculptLayerMask</a> );</div>\n\
<div class=\"line\">            c.<a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_sampler.html#a6c8aae9eb0fbd06cbc1147bced70ab60\">SetLayerNameForVertexAction</a>( m_pObject-&gt;LayerData( m_pObject-&gt;LayerCount()-1 )-&gt;Name() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            x.<a class=\"code\" href=\"#!/url=./cpp_ref/classmapextraction_1_1_extractor.html#a3a0fb062d1f2d8e06c1bca486b67ca2e\">Execute</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Fourth step: delete the temporary mesh and material</span></div>\n\
<div class=\"line\">            aptr&lt;Material&gt; pLM = pG-&gt;Material();</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> pT;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( pM )</div>\n\
<div class=\"line\">                pM.DeleteTarget();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( pLM )</div>\n\
<div class=\"line\">                pLM.DeleteTarget();</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;ProgressEnd();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;RefreshUI();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( m_pObject-&gt;LowestLevel()-&gt;AttributeValue( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;isptexuvlayout&quot;</span>) ) == <span class=\"stringliteral\">&quot;true&quot;</span> )</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>( tr( <span class=\"stringliteral\">&quot;You can only use image textures for meshes without Ptex setup. For this mesh, use a ptx file.&quot;</span> ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Calculate UV bounds, and align m_iUDim if it is not yet set to a proper value.</span></div>\n\
<div class=\"line\">    AxisAlignedBoundingBox <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_pObject-&gt;LowestLevel()-&gt;TCCount(); i++ )</div>\n\
<div class=\"line\">        b.Extend( Vector( m_pObject-&gt;LowestLevel()-&gt;m_pTCs[i].m_fU, m_pObject-&gt;LowestLevel()-&gt;m_pTCs[i].m_fV ) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( <span class=\"keywordtype\">float</span>(m_iUDim) &lt; ceilf(b.m_vEnd.x) )</div>\n\
<div class=\"line\">        m_iUDim = <span class=\"keywordtype\">int</span>(ceilf(b.m_vEnd.x));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_iBaseU = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(floorf(b.m_vStart.x));</div>\n\
<div class=\"line\">    m_iBaseV = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(floorf(b.m_vStart.y));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Calculate the tile list based on m_sTileRange.</span></div>\n\
<div class=\"line\">    m_aTiles.Clear();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sTileRange = m_sTileRange.Value();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( sTileRange.<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> = 0, i[2] = { 0, 0 }, k = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span> ( p &lt; sTileRange.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( p == sTileRange.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>() || sTileRange[<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a>] == <span class=\"charliteral\">&#39;,&#39;</span> )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                i[1] = <a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a990360af7f7250cdaec94844b139fa74\">Max</a>( i[1], i[0] );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a> = i[0]; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a> &lt;= i[1]; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a>++ )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    Tile <a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>;</div>\n\
<div class=\"line\">                    t.m_iIndex = <a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a>;</div>\n\
<div class=\"line\">                    t.m_bZero = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    m_aTiles.Add( t );</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\">                i[0] = i[1] = 0;</div>\n\
<div class=\"line\">                k = 0;</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">            <a name=\"_a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_char.html\">QChar</a> c = sTileRange[<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a>];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( c.<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_char.html#a610bceef174c008df7c7acbbdb76cdf3\">isDigit</a>() )</div>\n\
<div class=\"line\">                i[k] = i[k]*10+(c.<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_char.html#a96b5468ce6afc8e8d0a1be3fe7e89d25\">toAscii</a>()-<span class=\"charliteral\">&#39;0&#39;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( sTileRange[p] == <span class=\"charliteral\">&#39;-&#39;</span> )</div>\n\
<div class=\"line\">                k = 1;</div>\n\
<div class=\"line\">            p++;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        i[1] = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a990360af7f7250cdaec94844b139fa74\">Max</a>( i[1], i[0] );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a> = i[0]; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a> &lt;= i[1]; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a>++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Tile <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>;</div>\n\
<div class=\"line\">            t.m_iIndex = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#afdb89eb8f3f04e3f311b84bafe6f7d0d\">h</a>;</div>\n\
<div class=\"line\">            t.m_bZero = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            m_aTiles.Add( t );</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// now we put those tiles into the array which the user want to skip with zero factor. the reason for this is that at the edge of tiles</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// (if the edge vertex has different UV one in each tile) we want to result an average value of the zero and user selected tile. this</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// way if the user applies the displacement operation to a multiple tile mesh separately for each tile, the result will be the same as</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// applying the tiles in one operation.</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iWidth = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(ceilf(b.m_vEnd.x)-floorf(b.m_vStart.x));</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iHeight = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(ceilf(b.m_vEnd.y)-floorf(b.m_vStart.y));</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iStart = m_iFirstTileIndex;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( iWidth &gt; m_iUDim )</div>\n\
<div class=\"line\">            m_iUDim = iWidth;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iEnd = m_iFirstTileIndex+m_iUDim*iHeight;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = iStart; i &lt; iEnd; i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span> ( j &lt; m_aTiles.ItemCount() &amp;&amp; m_aTiles[j].m_iIndex != i )</div>\n\
<div class=\"line\">                j++;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( j &lt; m_aTiles.ItemCount() )</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            Tile <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>;</div>\n\
<div class=\"line\">            t.m_iIndex = i;</div>\n\
<div class=\"line\">            t.m_bZero = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            m_aTiles.Add( t );</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        <a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a24f4fe4a32c8501c3cae26db72954a30\">MB_ASSERT</a>( m_aTiles.ItemCount() == iEnd-iStart );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iWidth = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(ceilf(b.m_vEnd.x)-floorf(b.m_vStart.x));</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iHeight = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(ceilf(b.m_vEnd.y)-floorf(b.m_vStart.y));</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iStart = m_iFirstTileIndex;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( iWidth &gt; m_iUDim )</div>\n\
<div class=\"line\">            m_iUDim = iWidth;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iEnd = m_iFirstTileIndex+m_iUDim*iHeight;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = iStart; i &lt; iEnd; i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Tile <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>;</div>\n\
<div class=\"line\">            t.m_iIndex = i;</div>\n\
<div class=\"line\">            t.m_bZero = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            m_aTiles.Add( t );</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Execute the operation.</span></div>\n\
<div class=\"line\">    Execute();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Redraw the scene.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Redraw();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// converts the internal filename into a real one by inserting tile data into it, and looking for the file in the directory</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> DisplaceOperation::GetFileName( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sMask, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iTile, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iUPos, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iVPos )<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{   </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sFileName = sMask;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// get the directory of the file</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file_info.html\">QFileInfo</a> i( sFileName );</div>\n\
<div class=\"line\">    <a name=\"_a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_dir.html\">QDir</a> d = i.absoluteDir();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// insert the tile data after the filename, and the * mark before searching for the file</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> <a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a9cd653b1648845554169fbc3a3f6d37a\">g</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( m_aTiles.ItemCount() == 1 )</div>\n\
<div class=\"line\">        g = i.completeBaseName()+<span class=\"stringliteral\">&quot;*.&quot;</span>+i.suffix();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iU = iUPos, iV = iVPos;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( iU &gt;= 0 )</div>\n\
<div class=\"line\">            iU++;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( iV &gt;= 0 )</div>\n\
<div class=\"line\">            iV++;</div>\n\
<div class=\"line\">        g = i.completeBaseName()+<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(<span class=\"stringliteral\">&quot;_u%1_v%2*.&quot;</span>).<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a5feeac90490ef91a9faf3021dab55c80\">arg</a>(iU).<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a5feeac90490ef91a9faf3021dab55c80\">arg</a>(iV)+i.suffix();</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set the mask for the files we are looking for</span></div>\n\
<div class=\"line\">    <a name=\"_a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string_list.html\">QStringList</a> <a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>;</div>\n\
<div class=\"line\">    f &lt;&lt; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a9cd653b1648845554169fbc3a3f6d37a\">g</a>;</div>\n\
<div class=\"line\">    d.<a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_dir.html#ad3c75e2eb33afec9cd2be6bfeb36e553\">setNameFilters</a>( f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// lets see how many files we found</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( d.<a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_dir.html#a774149fc271ebaba2aabcd183a836e8f\">count</a>() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( d.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_dir.html#a774149fc271ebaba2aabcd183a836e8f\">count</a>() &gt; 1 )</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;MessageBox( <a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#ad249d76933bdf54c35f4eaf51a5b7965a5c3e640c7c4b019e8cedfe6642f4dc07\">mudbox::Interface::msgWarning</a>, tr(<span class=\"stringliteral\">&quot;Warning&quot;</span>), tr(<span class=\"stringliteral\">&quot;More than one files beginning with the mask %1 is found. The result of the mesh displacement might be incorrect. Delete the unneeded ones to solve the problem.&quot;</span>).arg(g) );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> f = d[0];</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file_info.html\">QFileInfo</a> k( f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// return the name of the file we found</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(d.<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_dir.html#aafc009242a1e08357e3475156338889a\">filePath</a>( f ));</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// the file not found, return an empty string.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">};  </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// convert the filename from a real existing one to an internal one, by removing the _u, _v and _g parts from the end of the filename.</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> DisplaceOperation::FilterFileName( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName )<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    m_fMultiplier = 1.0f;</div>\n\
<div class=\"line\">    m_fMidvalue = 0.0f;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> s = sFileName;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> e;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// search for the extension in the filename</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> k = sFileName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> ( k &gt; 0 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        k--;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( sFileName[k] == <span class=\"charliteral\">&#39;/&#39;</span> || sFileName[k] == <span class=\"charliteral\">&#39;\\\\&#39;</span> )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( sFileName[k] == <span class=\"charliteral\">&#39;.&#39;</span> )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            e = s.<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#abc03f2bf33adea9eebd84fac16609c73\">right</a>( s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>()-k-1 );</div>\n\
<div class=\"line\">            s = s.<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a82b299710a8c086a38a0f6af160b87d3\">left</a>( k );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// start from the end of the filename, look for the character &#39;_&#39;. that indicates a section which must be removed. later this string will be added back before looking for the file.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> j = s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>()-1; j &gt;= 0; j-- )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// if its a &#39;_&#39; character, we skip everything beginning with it</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( s[j] == <span class=\"charliteral\">&#39;_&#39;</span> )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// in case of gain, we use the value as the default value for the multiplier</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( j &lt; s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>()-1 &amp;&amp; s[j+1] == <span class=\"charliteral\">&#39;g&#39;</span> )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> fGain = s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#abc03f2bf33adea9eebd84fac16609c73\">right</a>( s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>()-2-j ).toFloat();</div>\n\
<div class=\"line\">                m_fMultiplier = fGain;</div>\n\
<div class=\"line\">                m_fMidvalue = 0.5f;</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">            s = s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html#a82b299710a8c086a38a0f6af160b87d3\">left</a>( j );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// if the character is not a valid addition character, then we already finished removing the added part, so finish the loop</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( s[j] !=    <span class=\"charliteral\">&#39;u&#39;</span> &amp;&amp; s[j] != <span class=\"charliteral\">&#39;v&#39;</span> &amp;&amp; s[j] != <span class=\"charliteral\">&#39;g&#39;</span> &amp;&amp; s[j] != <span class=\"charliteral\">&#39;e&#39;</span> &amp;&amp; s[j] != <span class=\"charliteral\">&#39;-&#39;</span> &amp;&amp; s[j] != <span class=\"charliteral\">&#39;+&#39;</span> &amp;&amp; s[j] != <span class=\"charliteral\">&#39;.&#39;</span> &amp;&amp; (s[j] &lt; <span class=\"charliteral\">&#39;0&#39;</span> || s[j] &gt; <span class=\"charliteral\">&#39;9&#39;</span>) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// return the naked filename with the original path and extension</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> s+<span class=\"stringliteral\">&quot;.&quot;</span>+e;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> DisplaceOperation::Execute( <span class=\"keywordtype\">void</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    Instance&lt;Image&gt; pDisplacement, pMask;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If no object specified, throw an error message.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !m_pObject )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">throw</span> <span class=\"keyword\">new</span> Error( tr(<span class=\"stringliteral\">&quot;No target specified&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Subdivision</span></div>\n\
<div class=\"line\">    SubdivisionLevel::SetUVCreation( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    SubdivisionLevel *pM = m_pObject-&gt;LowestLevel();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check if the object has texture coordinates</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( pM-&gt;TCCount() == 0 )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">throw</span> <span class=\"keyword\">new</span> Error(tr(<span class=\"stringliteral\">&quot;Target mesh has no texture coordinates&quot;</span>));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If the object has less subdivision level as we want, subdivide it further</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> ( <span class=\"keywordtype\">int</span>(m_pObject-&gt;LevelCount()-1) &lt; m_iSubdivisionLevel )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        m_pObject-&gt;HighestLevel()-&gt;Subdivide();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_bSmoothTC )</div>\n\
<div class=\"line\">            m_pObject-&gt;HighestLevel()-&gt;SmoothTextureCoordinates( 1.0f );</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    pM = m_pObject-&gt;Level( m_iSubdivisionLevel );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( pM == 0 )</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>( tr(<span class=\"stringliteral\">&quot;Corrupt subdivision structure&quot;</span>) );</div>\n\
<div class=\"line\">    m_pObject-&gt;SetActiveLevel( pM );</div>\n\
<div class=\"line\">    pM-&gt;AddFaceComponent( pM-&gt;fcTCIndex );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize the subdivision level to be ready for global vertex index lookups</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;Displacement operation on %1\\n&quot;</span>).arg(pM-&gt;Name()) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;ProgressStart( tr(<span class=\"stringliteral\">&quot;applying maps...&quot;</span>), m_aTiles.ItemCount()*pM-&gt;FaceCount() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This array will hold the collected information.</span></div>\n\
<div class=\"line\">    Store&lt;VertexInfo&gt; aVertices( <span class=\"stringliteral\">&quot;displaceoperation vertex tmp&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    TangentGenerator *pTG = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8af535c9551ac166cd21c73af209338612\">spaceTangent</a> || m_eMapSpace == spaceAbsoluteTangent )</div>\n\
<div class=\"line\">        pTG = pM-&gt;ChildByClass&lt;TangentGenerator&gt;( true );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enumerate the possible tiles.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aTiles.ItemCount(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iTile = m_aTiles[i].m_iIndex;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> bZero = m_aTiles[i].m_bZero;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iUPos = (iTile-m_iFirstTileIndex)%m_iUDim+m_iBaseU, iVPos = (iTile-m_iFirstTileIndex)/m_iUDim+m_iBaseV;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;Displacing tile %1\\n&quot;</span>).arg(iTile) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> bMask = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !bZero )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sFileName = GetFileName( m_sDisplacementFileMask.Value(), iTile, iUPos, iVPos );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;\\tLoading %1 for dislacement map&quot;</span>).arg(sFileName) );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">try</span> </div>\n\
<div class=\"line\">            { </div>\n\
<div class=\"line\">                pDisplacement-&gt;Load( sFileName ); </div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">catch</span> ( Error *pError )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <span class=\"stringliteral\">&quot; - map not found, skipping\\n&quot;</span> );</div>\n\
<div class=\"line\">                pError-&gt;Discard();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <span class=\"stringliteral\">&quot; - OK\\n&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Load the mask map.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_sMaskFileMask == <span class=\"stringliteral\">&quot;&quot;</span> )</div>\n\
<div class=\"line\">                bMask = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> sFileName = GetFileName( m_sMaskFileMask.Value(), iTile, iUPos, iVPos );</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;\\tLoading %1 for mask map&quot;</span>).arg(sFileName) );</div>\n\
<div class=\"line\">                bMask = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">try</span> { pMask-&gt;Load( sFileName ); }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">catch</span> ( Error *pError ) { pError-&gt;Discard(); bMask = <span class=\"keyword\">false</span>; };</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( bMask )</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <span class=\"stringliteral\">&quot; - OK\\n&quot;</span> );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <span class=\"stringliteral\">&quot; - not found\\n&quot;</span> );</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iBefore = aVertices.ItemCount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Use an array to store which vertex got processed yet.</span></div>\n\
<div class=\"line\">        Store&lt;int&gt; aProcessedTC( pM-&gt;TCCount(), <span class=\"stringliteral\">&quot;displace - processedtc&quot;</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; pM-&gt;TCCount(); j++ )</div>\n\
<div class=\"line\">            aProcessedTC[j] = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> fDisplacementMin = -m_fMidvalue*m_fMultiplier;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> fDisplacementMax = (1-m_fMidvalue)*m_fMultiplier;</div>\n\
<div class=\"line\">        Vector vMin( fDisplacementMin, fDisplacementMin, fDisplacementMin );</div>\n\
<div class=\"line\">        Vector vMax( fDisplacementMax, fDisplacementMax, fDisplacementMax );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Enumerate all faces on the surface.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> = 0; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> &lt; pM-&gt;FaceCount(); <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;ProgressSet( i*pM-&gt;FaceCount()+<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Enumerate all the corners of the face.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> c = 0; c &lt; pM-&gt;SideCount(); c++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Get position and texture coordinate indices for the current vertex.</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iVertexIndex, iTCIndex;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( pM-&gt;Type() == Mesh::typeTriangular )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    iVertexIndex = pM-&gt;TriangleIndex( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>, c );</div>\n\
<div class=\"line\">                    iTCIndex = pM-&gt;TriangleTCI( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>, c );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    iVertexIndex = pM-&gt;QuadIndex( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>, c );</div>\n\
<div class=\"line\">                    iTCIndex = pM-&gt;QuadTCI( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>, c );</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a4574db3fa92e5236e049b3e67bc51cd9\">MB_ONBUG</a>( iTCIndex &gt;= pM-&gt;TCCount() )</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// If this vertex was touched by us then skip it.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( pM-&gt;VertexStrokeID( iVertexIndex ) == pM-&gt;CollectionID() )</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Check if the texture coordinate </span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> fU = pM-&gt;VertexTC( iTCIndex ).m_fU-float(iUPos), fV = (pM-&gt;VertexTC( iTCIndex ).m_fV-float(iVPos));</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( fU &lt; 0.0f || fU &gt; 1.0f || fV &lt; 0.0f || fV &gt; 1.0f )</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Set this vertex as touched.</span></div>\n\
<div class=\"line\">                pM-&gt;SetVertexStrokeID( iVertexIndex, pM-&gt;CollectionID() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Get the displacement map value for this vertex from the map.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( bZero )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// this tile is not listed by the user, so we skip it, except when a vertex is affected by another processed tile.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// in that case we treat this tile as a black zero tile. this is important because the user may want to apply</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// the tiles separately in different displacement operations and the result must be the same as with a single</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// operation</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( aProcessedTC[iTCIndex] != -1 )</div>\n\
<div class=\"line\">                        aVertices[aProcessedTC[iTCIndex]].Refine( Vector(), 1 );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> fMask = 1;</div>\n\
<div class=\"line\">                Vector vDisp;</div>\n\
<div class=\"line\">                vDisp.x = pDisplacement-&gt;ValueAt( fU, fV, 0 );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( m_eMapSpace.Value() )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    vDisp.y = pDisplacement-&gt;ValueAt( fU, fV, 1 );</div>\n\
<div class=\"line\">                    vDisp.z = pDisplacement-&gt;ValueAt( fU, fV, 2 );</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Transform the displacement map value into the [m_fDisplacementMin:m_fDisplacementMax] range. 8 and 16 bit maps can hold values only in the range of [0:1]</span></div>\n\
<div class=\"line\">                vDisp = vMin+vDisp*(vMax-vMin);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// If there is a mask texture, get the value from it also, otherwise use 1.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( bMask )</div>\n\
<div class=\"line\">                    fMask = pMask-&gt;ValueAt( fU, fV, 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// If the displacement value is not zero, store it for later processing</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( vDisp )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Check if the current texture coordinate was processed before or not.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( aProcessedTC[iTCIndex] != -1 )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"comment\">// Refine the previously stored data for this vertex.</span></div>\n\
<div class=\"line\">                        aVertices[aProcessedTC[iTCIndex]].Refine( vDisp, fMask );</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"comment\">// Its a new vertex, add it to the aVertices array.</span></div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iIndex;</div>\n\
<div class=\"line\">                        iIndex = aVertices.Add( VertexInfo( iVertexIndex, iVertexIndex, vDisp, fMask, <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>, c ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"comment\">// If the returned index is 0xffffffff, the Add operation was not successful.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> ( iIndex == 0xffffffff )</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <span class=\"stringliteral\">&quot;\\tOut of memory\\n&quot;</span> );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">throw</span> &amp;Error::s_cBadAlloc;</div>\n\
<div class=\"line\">                        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"comment\">// Store the index for later usage.</span></div>\n\
<div class=\"line\">                        aProcessedTC[iTCIndex] = iIndex;</div>\n\
<div class=\"line\">                    };</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;\\tProcessed %1 vertices\\n&quot;</span>).arg( aVertices.ItemCount()-iBefore ) );</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Increase the collection counter since we used the current one for some vertices.</span></div>\n\
<div class=\"line\">    pM-&gt;IncreaseCollectionID();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Creating a new layer for the results.</span></div>\n\
<div class=\"line\">    LayerMeshData *pL = pL = pM-&gt;AddLayer();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( pL == 0 ) </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">throw</span> Error( tr(<span class=\"stringliteral\">&quot;Unable to create new layer&quot;</span>) );</div>\n\
<div class=\"line\">    pL-&gt;SetName( <span class=\"stringliteral\">&quot;Displacement&quot;</span> );</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        Layer *pLayer = pL-&gt;Layer();</div>\n\
<div class=\"line\">        LayerContainer *pLC = pLayer-&gt;Container();</div>\n\
<div class=\"line\">        pLC-&gt;SetActiveLayer(pLayer);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill the layer with the collected data</span></div>\n\
<div class=\"line\">    pL-&gt;SetVertexCount( aVertices.ItemCount() );</div>\n\
<div class=\"line\">    aVertices.Sort(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> k = 0; k &lt; aVertices.ItemCount(); k++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        Vector vDelta;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m_eMapSpace.Value() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            vDelta = aVertices[k].m_vDisplacement;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8af535c9551ac166cd21c73af209338612\">spaceTangent</a> || m_eMapSpace == spaceAbsoluteTangent )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a99d9d5b4fd434c7a38c2add8217e4c14\">MB_SAFELY</a>( pTG )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    Base b = pTG-&gt;LocalBase( aVertices[k].m_iFaceIndex, aVertices[k].m_iCornerIndex );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8af535c9551ac166cd21c73af209338612\">spaceTangent</a> )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"comment\">// for relative tangent, we are scaling the normal vector to have a length</span></div>\n\
<div class=\"line\">                        <span class=\"comment\">// which is the geometrical average of the tangent and binormal</span></div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">float</span> al = b.a.Length();</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">float</span> bl = b.b.Length();</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">float</span> cl = b.c.Length();</div>\n\
<div class=\"line\">                        b.b *= sqrtf(al*cl)/bl;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        b.c = (b.b&amp;b.a).Normalized();</div>\n\
<div class=\"line\">                        b.a = (b.c&amp;b.b).Normalized();</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    vDelta = b.TransformFrom( vDelta );</div>\n\
<div class=\"line\">                };</div>\n\
<div class=\"line\">            };</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( m_eMapSpace == <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemapextraction.html#ab11a1dda34491acff014ddfc9e6bafb8a7d5df272701485f6bb8e16b1ddd81a24\">spaceWorld</a> )</div>\n\
<div class=\"line\">                vDelta = pM-&gt;Geometry()-&gt;Transformation()-&gt;TransformToLocal( vDelta, 0 );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            vDelta = Vector(pM-&gt;VertexNormal(  aVertices[k].m_iVertexIndex  ))*aVertices[k].m_vDisplacement.x;</div>\n\
<div class=\"line\">        pL-&gt;SetVertexData( k, aVertices[k].m_iGlobalVertexIndex, aVertices[k].m_fMask ); </div>\n\
<div class=\"line\">        pL-&gt;SetVertexDelta( k, aVertices[k].m_iVertexIndex, vDelta ); </div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    pM-&gt;Modified.Trigger();</div>\n\
<div class=\"line\">    <span class=\"comment\">// HACK recreate render buffers</span></div>\n\
<div class=\"line\">    pM-&gt;ContentChanged();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Since vertex positions changed, recalculate normal vectors.</span></div>\n\
<div class=\"line\">    pM-&gt;RecalculateNormals();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;ProgressEnd();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;RefreshUI();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;FlushUndoQueue();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This function will be called then the plugin got loaded.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> DisplaceOperation::Initializer( <span class=\"keywordtype\">void</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Add a menu entry for the DisplaceOperation class/</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;AddClassMenuItem( <a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#ae116d84c44be4973f70832e0b9be3b19\">mudbox::Interface::menuMaps</a>, tr(<span class=\"stringliteral\">&quot;Sculpt using Map&quot;</span>), StaticClass(), tr(<span class=\"stringliteral\">&quot;New Operation...&quot;</span>) );</div>\n\
<div class=\"line\">};</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";