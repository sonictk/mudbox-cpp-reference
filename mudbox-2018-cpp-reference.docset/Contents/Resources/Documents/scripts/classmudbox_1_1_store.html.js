var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>Store&lt; type &gt; Class Template Reference</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classmudbox_1_1_store.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Store&lt; type &gt; Class Template Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">Store&lt; type &gt; Class Template Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-326B2823-3421-4F39-9127-38030C945837.htm\">What\'s New / What\'s Changed? &gt; Mudbox 2014</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-0465DFA9-A355-4D83-96BE-4D953DD9B8F2.htm\">Application-Level Functionality &gt; Logging and Debugging Functions</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-FCE5416C-9A01-40E2-9316-08E5E5A5D73F.htm\">Miscellaneous Utilities</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"classmudbox_1_1_store.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classmudbox_1_1_store.html#pub-attribs\">Public Attributes</a> &#124;\n\
<a href=\"classmudbox_1_1_store.html#pro-static-methods\">Static Protected Member Functions</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><h3>template&lt;typename type&gt;<br>\n\
class mudbox::Store&lt; type &gt;</h3>\n\
\n\
<p>Simple array class. </p>\n\
<p>This class represents a simple array and should be used in all circumstances instead of plain C-style arrays. The class is templated, so that you can use to instantiate arrays of any type.</p>\n\
<p>Its advantages of <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> arrays include:</p>\n\
<ul>\n\
<li>when the object is deleted, the associated data is deleted automatically. This means that if the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> instance was created on the heap, or it is a member variable of another class, then you don\'t have to bother freeing the memory, reducing the chance of a memory leak.</li>\n\
</ul>\n\
<ul>\n\
<li>Additional functionality, such as expandability, sorting, and removing specified elements.</li>\n\
</ul>\n\
<ul>\n\
<li>Easy to serialize.</li>\n\
</ul>\n\
<ul>\n\
<li>The mudbox kernel can examine the list of all <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> arrays in the memory at any time, which is helpful for diagnosing high memory footprint problems, as well as memory leaks.</li>\n\
</ul>\n\
<p>Typical usage:</p>\n\
<p>Typically, you create an empty <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> instance, and then set the number of items (if you know it) by calling <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\" title=\"Sets the logical size of the array. \">SetItemCount()</a>. Alternatively, you can add elements into the array one by one, using the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa5275e8546cead2652948aabd4db62fd\" title=\"Adds a new item to the array, increasing the array size by 1. \">Add()</a> function. If the elements of the array are class instances, their constructors and destructors can optionally be called when the array space is allocated and deallocated. (You must call the right methods.) For this reason, any class from which you will create an array should have a constructor that takes no arguments.</p>\n\
<p>When the array is extended (for example when new elements are added by calling the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa5275e8546cead2652948aabd4db62fd\" title=\"Adds a new item to the array, increasing the array size by 1. \">Add()</a> function), the existing array elements will be copied to the new location with the \"=\" operator of the element class. For this reason, you should ensure that this operator will work correctly, especially in cases where your class contains pointers. (If you have no \"-\" operator defined in the data class, it will just do a direct memory copy.)</p>\n\
<p>A <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> instance sometimes has more memory allocated than needed by the number of elements in the array. See the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2016d150e0c8a3a048e1fbeeb7baa1e4\" title=\"Reduces the allocated memory size to match the size of the current elements in the array...\">Optimize()</a> function for more details.</p>\n\
<p><b>Note:</b> If you use the \"=\" operator to copy one entire <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> array to another, the original array is left empty. (This is a speed optimization.) If you want to do a deep copy of the contents of the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> array, you should instead use the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a319b0ae9ec88b550d5805e3097b94520\">Clone()</a> function as follows: </p><div class=\"fragment\"><div class=\"line\">Store&lt;int&gt; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a>.Clone();</div>\n\
</div><!-- fragment --> <dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_curve_brush_2_curve_creator_8h-example.html#_a9\">CurveBrush/CurveCreator.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_mesh_displace_2displacer_8h-example.html#_a21\">MeshDisplace/displacer.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_p_l_y_import_2_importer_8cpp-example.html#_a26\">PLYImport/Importer.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_ptex_importer_2_cg_file_8h-example.html#_a8\">PtexImporter/CgFile.h</a>.</dd></div>\n\
</dl>\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00334\">334</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
</div><div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Inheritance diagram for Store&lt; type &gt;:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"cpp_ref/classmudbox_1_1_store.png\" usemap=\"#Store&lt; type &gt;_map\" alt=\"\">\n\
  <map id=\"Store&lt; type &gt;_map\" name=\"Store&lt; type &gt;_map\">\n\
<area href=\"classmudbox_1_1_array.html\" title=\"An internal helper class, representing an array. Use the Store class instead. \" alt=\"Array&lt; type &gt;\" shape=\"rect\" coords=\"0,56,93,80\">\n\
<area href=\"classmudbox_1_1_block.html\" title=\"An internal helper class, representing a block of memory. Use the Store class instead. \" alt=\"Block\" shape=\"rect\" coords=\"0,0,93,24\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a7e753b854767ecb164178281bf254ac8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a7e753b854767ecb164178281bf254ac8\">Store</a> (const char *sName=&quot;unknown&quot;)</td></tr>\n\
<tr class=\"memdesc:a7e753b854767ecb164178281bf254ac8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Creates an empty array.  <a href=\"classmudbox_1_1_store.html#a7e753b854767ecb164178281bf254ac8\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7e753b854767ecb164178281bf254ac8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a22b6bd64584515d4c4fa1d66f734f6ee\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a22b6bd64584515d4c4fa1d66f734f6ee\">Store</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize, const char *sName)</td></tr>\n\
<tr class=\"memdesc:a22b6bd64584515d4c4fa1d66f734f6ee\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Creates an array with space for some elements already allocated.  <a href=\"classmudbox_1_1_store.html#a22b6bd64584515d4c4fa1d66f734f6ee\">More...</a><br></td></tr>\n\
<tr class=\"separator:a22b6bd64584515d4c4fa1d66f734f6ee\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a80643536183afbeda2234c38270d3c13\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a80643536183afbeda2234c38270d3c13\">Store</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *pArray, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize, const char *sName=&quot;unknown&quot;)</td></tr>\n\
<tr class=\"memdesc:a80643536183afbeda2234c38270d3c13\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Creates an array and populates it will information copied from another array.  <a href=\"classmudbox_1_1_store.html#a80643536183afbeda2234c38270d3c13\">More...</a><br></td></tr>\n\
<tr class=\"separator:a80643536183afbeda2234c38270d3c13\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a276a63aee55faa2fd117a8b414bebfc2\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a276a63aee55faa2fd117a8b414bebfc2\">Store</a> (bool bNoObjects, const char *sName)</td></tr>\n\
<tr class=\"memdesc:a276a63aee55faa2fd117a8b414bebfc2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Creates an empty array, allowing you to specify if elements have constructors or destructors that need to be called.  <a href=\"classmudbox_1_1_store.html#a276a63aee55faa2fd117a8b414bebfc2\">More...</a><br></td></tr>\n\
<tr class=\"separator:a276a63aee55faa2fd117a8b414bebfc2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5301004ffb133b41d65d1cb6f38c3716\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a5301004ffb133b41d65d1cb6f38c3716\">Store</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>)</td></tr>\n\
<tr class=\"memdesc:a5301004ffb133b41d65d1cb6f38c3716\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Creates an array from another one. The other array becomes empty after the operation.  <a href=\"classmudbox_1_1_store.html#a5301004ffb133b41d65d1cb6f38c3716\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5301004ffb133b41d65d1cb6f38c3716\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3fdb86a3ea947319fd520408c398dd32\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a3fdb86a3ea947319fd520408c398dd32\">~Store</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"memdesc:a3fdb86a3ea947319fd520408c398dd32\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destroys the contents of the array and deallocate its memory.  <a href=\"classmudbox_1_1_store.html#a3fdb86a3ea947319fd520408c398dd32\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3fdb86a3ea947319fd520408c398dd32\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2ca8b3984fedf27ec07d5a7a84f3c90a\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\">Copy</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>) const </td></tr>\n\
<tr class=\"memdesc:a2ca8b3984fedf27ec07d5a7a84f3c90a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copies the contents of another array into this one, duplicating all data. Returns <b>true</b> if successful.  <a href=\"classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2ca8b3984fedf27ec07d5a7a84f3c90a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9eeab6d977c543dec299265915b012df\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9eeab6d977c543dec299265915b012df\">Clone</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"memdesc:a9eeab6d977c543dec299265915b012df\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns a copy of this array. The returned copy will have a duplicate of all data in the original.  <a href=\"classmudbox_1_1_store.html#a9eeab6d977c543dec299265915b012df\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9eeab6d977c543dec299265915b012df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0abd0e3b14a6f3af438b1a34a53a32fa\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0abd0e3b14a6f3af438b1a34a53a32fa\">Clone</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>) const </td></tr>\n\
<tr class=\"memdesc:a0abd0e3b14a6f3af438b1a34a53a32fa\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copies the contents of another array into this one, duplicating all data.  <a href=\"classmudbox_1_1_store.html#a0abd0e3b14a6f3af438b1a34a53a32fa\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0abd0e3b14a6f3af438b1a34a53a32fa\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9a6b1665af166fd6553bed3bb0cc46ba\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Clear</a> (bool bDestruct=false)</td></tr>\n\
<tr class=\"memdesc:a9a6b1665af166fd6553bed3bb0cc46ba\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Clears the array and deallocates its memory.  <a href=\"classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9a6b1665af166fd6553bed3bb0cc46ba\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a478f851a51d23a98795488716e474907\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize, bool bKeepContent=false)</td></tr>\n\
<tr class=\"memdesc:a478f851a51d23a98795488716e474907\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Sets the logical size of the array.  <a href=\"classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">More...</a><br></td></tr>\n\
<tr class=\"separator:a478f851a51d23a98795488716e474907\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab2d851b9a8a9357edeb4f676409834e4\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab2d851b9a8a9357edeb4f676409834e4\">Allocate</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize, bool bKeepContent=false)</td></tr>\n\
<tr class=\"memdesc:ab2d851b9a8a9357edeb4f676409834e4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Preallocates memory for the an array, without changing the array\'s logical size.  <a href=\"classmudbox_1_1_store.html#ab2d851b9a8a9357edeb4f676409834e4\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab2d851b9a8a9357edeb4f676409834e4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a01237ce058a74898d2f83f0b76930321\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a01237ce058a74898d2f83f0b76930321\">Extend</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"memdesc:a01237ce058a74898d2f83f0b76930321\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Extends the logical size of the array.  <a href=\"classmudbox_1_1_store.html#a01237ce058a74898d2f83f0b76930321\">More...</a><br></td></tr>\n\
<tr class=\"separator:a01237ce058a74898d2f83f0b76930321\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a801b614cdf0b66ba7eefbe2fd151fd6f\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a801b614cdf0b66ba7eefbe2fd151fd6f\">Extend</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"memdesc:a801b614cdf0b66ba7eefbe2fd151fd6f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Extends the logical size of the array.  <a href=\"classmudbox_1_1_store.html#a801b614cdf0b66ba7eefbe2fd151fd6f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a801b614cdf0b66ba7eefbe2fd151fd6f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac5aee37979842e4deab4cba66a08f7c0\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac5aee37979842e4deab4cba66a08f7c0\">RemoveTail</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iItemCount=1)</td></tr>\n\
<tr class=\"memdesc:ac5aee37979842e4deab4cba66a08f7c0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Removes the final items from the array.  <a href=\"classmudbox_1_1_store.html#ac5aee37979842e4deab4cba66a08f7c0\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac5aee37979842e4deab4cba66a08f7c0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae526ef2c96b5084f18ae6b5fe4f95576\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ae526ef2c96b5084f18ae6b5fe4f95576\">Fill</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> cPattern)</td></tr>\n\
<tr class=\"memdesc:ae526ef2c96b5084f18ae6b5fe4f95576\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Fills the array with a specified element.  <a href=\"classmudbox_1_1_store.html#ae526ef2c96b5084f18ae6b5fe4f95576\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae526ef2c96b5084f18ae6b5fe4f95576\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aada37f2f37eb4ffb34bd3b60ce7e1454\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aada37f2f37eb4ffb34bd3b60ce7e1454\">ByteFill</a> (unsigned char cPattern)</td></tr>\n\
<tr class=\"memdesc:aada37f2f37eb4ffb34bd3b60ce7e1454\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Fills the array with a specified byte pattern.  <a href=\"classmudbox_1_1_store.html#aada37f2f37eb4ffb34bd3b60ce7e1454\">More...</a><br></td></tr>\n\
<tr class=\"separator:aada37f2f37eb4ffb34bd3b60ce7e1454\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa5275e8546cead2652948aabd4db62fd\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa5275e8546cead2652948aabd4db62fd\">Add</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;e)</td></tr>\n\
<tr class=\"memdesc:aa5275e8546cead2652948aabd4db62fd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds a new item to the array, increasing the array size by 1.  <a href=\"classmudbox_1_1_store.html#aa5275e8546cead2652948aabd4db62fd\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa5275e8546cead2652948aabd4db62fd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0ffc4a46a08b6b2640158eb004f4cdd3\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0ffc4a46a08b6b2640158eb004f4cdd3\">Add</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;e)</td></tr>\n\
<tr class=\"memdesc:a0ffc4a46a08b6b2640158eb004f4cdd3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds a new item to the array, increasing the array size by 1.  <a href=\"classmudbox_1_1_store.html#a0ffc4a46a08b6b2640158eb004f4cdd3\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0ffc4a46a08b6b2640158eb004f4cdd3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a070e1bf44df6fe58a2106981d71af206\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a070e1bf44df6fe58a2106981d71af206\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>)</td></tr>\n\
<tr class=\"memdesc:a070e1bf44df6fe58a2106981d71af206\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Transfers the contents of another array to this one, leaving the original array empty.  <a href=\"classmudbox_1_1_store.html#a070e1bf44df6fe58a2106981d71af206\">More...</a><br></td></tr>\n\
<tr class=\"separator:a070e1bf44df6fe58a2106981d71af206\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a79f3c47bbcb6273fcb6bc2ac3b992662\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a79f3c47bbcb6273fcb6bc2ac3b992662\">GetFrom</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>)</td></tr>\n\
<tr class=\"memdesc:a79f3c47bbcb6273fcb6bc2ac3b992662\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Transfers the contents of another array to this one, leaving the original array empty.  <a href=\"classmudbox_1_1_store.html#a79f3c47bbcb6273fcb6bc2ac3b992662\">More...</a><br></td></tr>\n\
<tr class=\"separator:a79f3c47bbcb6273fcb6bc2ac3b992662\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac9216fd481eaeea8295a5b1fa2817f99\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex) const </td></tr>\n\
<tr class=\"memdesc:ac9216fd481eaeea8295a5b1fa2817f99\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns an indexed item from the array.  <a href=\"classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac9216fd481eaeea8295a5b1fa2817f99\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6275c588c48d0ff9c81f6e24d90194d0\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a6275c588c48d0ff9c81f6e24d90194d0\">operator[]</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"memdesc:a6275c588c48d0ff9c81f6e24d90194d0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns an indexed item from the array.  <a href=\"classmudbox_1_1_store.html#a6275c588c48d0ff9c81f6e24d90194d0\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6275c588c48d0ff9c81f6e24d90194d0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a90e41259f806210f1c50140d9d1f05c6\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a90e41259f806210f1c50140d9d1f05c6\">operator[]</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex) const </td></tr>\n\
<tr class=\"memdesc:a90e41259f806210f1c50140d9d1f05c6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns an indexed item from the array.  <a href=\"classmudbox_1_1_store.html#a90e41259f806210f1c50140d9d1f05c6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a90e41259f806210f1c50140d9d1f05c6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab7d5a05ed57d81497501b6b3fd98611b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab7d5a05ed57d81497501b6b3fd98611b\">operator[]</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"memdesc:ab7d5a05ed57d81497501b6b3fd98611b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns an indexed item from the array.  <a href=\"classmudbox_1_1_store.html#ab7d5a05ed57d81497501b6b3fd98611b\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab7d5a05ed57d81497501b6b3fd98611b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a056291dc276d4565fa638c53e0e43f31\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a056291dc276d4565fa638c53e0e43f31\">IsEmpty</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"memdesc:a056291dc276d4565fa638c53e0e43f31\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns <b>true</b> if the array has no items.  <a href=\"classmudbox_1_1_store.html#a056291dc276d4565fa638c53e0e43f31\">More...</a><br></td></tr>\n\
<tr class=\"separator:a056291dc276d4565fa638c53e0e43f31\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4e78e3cd062c82439dffc9cddbdd8a20\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a4e78e3cd062c82439dffc9cddbdd8a20\">operator bool</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"memdesc:a4e78e3cd062c82439dffc9cddbdd8a20\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Allows you to use the array as a boolean in <b>if</b> statements. Evaluates to <b>true</b> if the array is not empty.  <a href=\"classmudbox_1_1_store.html#a4e78e3cd062c82439dffc9cddbdd8a20\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4e78e3cd062c82439dffc9cddbdd8a20\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5fb4044b97beecc0c4a79494057b8b99\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a5fb4044b97beecc0c4a79494057b8b99\">operator!</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"memdesc:a5fb4044b97beecc0c4a79494057b8b99\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Evaluates to <b>true</b> if the array contains no items.  <a href=\"classmudbox_1_1_store.html#a5fb4044b97beecc0c4a79494057b8b99\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5fb4044b97beecc0c4a79494057b8b99\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4694c8693837e4419c81050157bbc6ef\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a4694c8693837e4419c81050157bbc6ef\">SetBuffer</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *pData, unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize=0)</td></tr>\n\
<tr class=\"memdesc:a4694c8693837e4419c81050157bbc6ef\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Makes a <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> array from a regular C or C++ array.  <a href=\"classmudbox_1_1_store.html#a4694c8693837e4419c81050157bbc6ef\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4694c8693837e4419c81050157bbc6ef\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2aac302e2dd6ed8044bb2cfb82d6ab5a\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2aac302e2dd6ed8044bb2cfb82d6ab5a\">Serialize</a> (class <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>)</td></tr>\n\
<tr class=\"memdesc:a2aac302e2dd6ed8044bb2cfb82d6ab5a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Serializes the the array and its contents from/to a stream.  <a href=\"classmudbox_1_1_store.html#a2aac302e2dd6ed8044bb2cfb82d6ab5a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2aac302e2dd6ed8044bb2cfb82d6ab5a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9e14fd054d125587cadb88921096dd56\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\">Sort</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"memdesc:a9e14fd054d125587cadb88921096dd56\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Sorts the items in the array.  <a href=\"classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9e14fd054d125587cadb88921096dd56\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac630cdbd3a2d4e87a3b628af2346fde6\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac630cdbd3a2d4e87a3b628af2346fde6\">Find</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>)</td></tr>\n\
<tr class=\"memdesc:ac630cdbd3a2d4e87a3b628af2346fde6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns a pointer to the item in the array with a particular value.  <a href=\"classmudbox_1_1_store.html#ac630cdbd3a2d4e87a3b628af2346fde6\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac630cdbd3a2d4e87a3b628af2346fde6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad9bab0f86652d09f66ed27eec426560f\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ad9bab0f86652d09f66ed27eec426560f\">Find</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>)</td></tr>\n\
<tr class=\"memdesc:ad9bab0f86652d09f66ed27eec426560f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns a pointer to the item in the array with a particular value.  <a href=\"classmudbox_1_1_store.html#ad9bab0f86652d09f66ed27eec426560f\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad9bab0f86652d09f66ed27eec426560f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afe4bc5d1a8ea0fd07c79fb3919d0dd02\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#afe4bc5d1a8ea0fd07c79fb3919d0dd02\">IndexOf</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> pValue)</td></tr>\n\
<tr class=\"memdesc:afe4bc5d1a8ea0fd07c79fb3919d0dd02\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the first index of the element equal to pValue.  <a href=\"classmudbox_1_1_store.html#afe4bc5d1a8ea0fd07c79fb3919d0dd02\">More...</a><br></td></tr>\n\
<tr class=\"separator:afe4bc5d1a8ea0fd07c79fb3919d0dd02\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acdb423f973a29aa7cccbc22b8ca690d5\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#acdb423f973a29aa7cccbc22b8ca690d5\">Remove</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;e)</td></tr>\n\
<tr class=\"memdesc:acdb423f973a29aa7cccbc22b8ca690d5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove every occurrence of a specified item from the array. Returns the number of removed items.  <a href=\"classmudbox_1_1_store.html#acdb423f973a29aa7cccbc22b8ca690d5\">More...</a><br></td></tr>\n\
<tr class=\"separator:acdb423f973a29aa7cccbc22b8ca690d5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7c63b869e610c82b21204af2a750ccb5\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a7c63b869e610c82b21204af2a750ccb5\">RemoveAt</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"memdesc:a7c63b869e610c82b21204af2a750ccb5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Removes the item at the specified index from the array.  <a href=\"classmudbox_1_1_store.html#a7c63b869e610c82b21204af2a750ccb5\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7c63b869e610c82b21204af2a750ccb5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8afe97d076d37e99e27fc9179802a2ad\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a8afe97d076d37e99e27fc9179802a2ad\">RemoveDuplicates</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"memdesc:a8afe97d076d37e99e27fc9179802a2ad\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Removes duplicated items from the array after sorting it.  <a href=\"classmudbox_1_1_store.html#a8afe97d076d37e99e27fc9179802a2ad\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8afe97d076d37e99e27fc9179802a2ad\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0b988bffaf1deb7d6968501bdb6872fc\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"memdesc:a0b988bffaf1deb7d6968501bdb6872fc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the number of items in the array.  <a href=\"classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0b988bffaf1deb7d6968501bdb6872fc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afc45fae803f8530e605e2315172b1520\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#afc45fae803f8530e605e2315172b1520\">Last</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"memdesc:afc45fae803f8530e605e2315172b1520\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the last item in the array, or 0 if the array is empty.  <a href=\"classmudbox_1_1_store.html#afc45fae803f8530e605e2315172b1520\">More...</a><br></td></tr>\n\
<tr class=\"separator:afc45fae803f8530e605e2315172b1520\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2016d150e0c8a3a048e1fbeeb7baa1e4\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2016d150e0c8a3a048e1fbeeb7baa1e4\">Optimize</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"memdesc:a2016d150e0c8a3a048e1fbeeb7baa1e4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Reduces the allocated memory size to match the size of the current elements in the array.  <a href=\"classmudbox_1_1_store.html#a2016d150e0c8a3a048e1fbeeb7baa1e4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2016d150e0c8a3a048e1fbeeb7baa1e4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_classmudbox_1_1_array\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_classmudbox_1_1_array\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array&lt; type &gt;</a></td></tr>\n\
<tr class=\"memitem:af7aa83691a73dc3a0b6937726ea36612 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#af7aa83691a73dc3a0b6937726ea36612\">Array</a> (const char *sName)</td></tr>\n\
<tr class=\"separator:af7aa83691a73dc3a0b6937726ea36612 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad42c984379815675cc4e71dd49efbb0c inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ad42c984379815675cc4e71dd49efbb0c\">Array</a> (const char *sName, unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize)</td></tr>\n\
<tr class=\"separator:ad42c984379815675cc4e71dd49efbb0c inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a33d8a05be40c719c3949d125234378ec inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a33d8a05be40c719c3949d125234378ec\">Array</a> (const char *sName, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *pArray, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize)</td></tr>\n\
<tr class=\"separator:a33d8a05be40c719c3949d125234378ec inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8bf50e1ef58ddaa40bea218f46a9b60c inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a8bf50e1ef58ddaa40bea218f46a9b60c\">Array</a> (const char *sName, bool bNoObjects)</td></tr>\n\
<tr class=\"separator:a8bf50e1ef58ddaa40bea218f46a9b60c inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2d2573273f8062f64c0853cb503f7b41 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a2d2573273f8062f64c0853cb503f7b41\">Array</a> (const char *sName, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>)</td></tr>\n\
<tr class=\"separator:a2d2573273f8062f64c0853cb503f7b41 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9a6b1665af166fd6553bed3bb0cc46ba inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Clear</a> (bool bDestruct=false)</td></tr>\n\
<tr class=\"separator:a9a6b1665af166fd6553bed3bb0cc46ba inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a319b0ae9ec88b550d5805e3097b94520 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a319b0ae9ec88b550d5805e3097b94520\">Clone</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:a319b0ae9ec88b550d5805e3097b94520 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aed3ff741b1414359b8252f6667fc0ddb inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#aed3ff741b1414359b8252f6667fc0ddb\">Copy</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>) const </td></tr>\n\
<tr class=\"separator:aed3ff741b1414359b8252f6667fc0ddb inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1bd5ad21f600c0d4a6d9cd4cb36024a7 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a1bd5ad21f600c0d4a6d9cd4cb36024a7\">Set</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iStart, unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iSize, unsigned char cPattern)</td></tr>\n\
<tr class=\"separator:a1bd5ad21f600c0d4a6d9cd4cb36024a7 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab6807d825bde6ac8718af76b64db6afb inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ab6807d825bde6ac8718af76b64db6afb\">Extend</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iElementIndex)</td></tr>\n\
<tr class=\"separator:ab6807d825bde6ac8718af76b64db6afb inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a00703ca570efac13de8870ff0899f9ba inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a00703ca570efac13de8870ff0899f9ba\">Alloc</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iNewSize)</td></tr>\n\
<tr class=\"separator:a00703ca570efac13de8870ff0899f9ba inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab7d5a05ed57d81497501b6b3fd98611b inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ab7d5a05ed57d81497501b6b3fd98611b\">operator[]</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"separator:ab7d5a05ed57d81497501b6b3fd98611b inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6275c588c48d0ff9c81f6e24d90194d0 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a6275c588c48d0ff9c81f6e24d90194d0\">operator[]</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"separator:a6275c588c48d0ff9c81f6e24d90194d0 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac9216fd481eaeea8295a5b1fa2817f99 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex) const </td></tr>\n\
<tr class=\"separator:ac9216fd481eaeea8295a5b1fa2817f99 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5fa60781bf264135a9fcf390a3050ad6 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a5fa60781bf264135a9fcf390a3050ad6\">indexedAddr</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> i)</td></tr>\n\
<tr class=\"separator:a5fa60781bf264135a9fcf390a3050ad6 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6ca52484f06455b867fae43763e7d9d2 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a6ca52484f06455b867fae43763e7d9d2\">indexedAddr</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> i) const </td></tr>\n\
<tr class=\"separator:a6ca52484f06455b867fae43763e7d9d2 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a237f3d46b15edf4dd9cdd61e32c41548 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a237f3d46b15edf4dd9cdd61e32c41548\">baseAddr</a> ()</td></tr>\n\
<tr class=\"separator:a237f3d46b15edf4dd9cdd61e32c41548 inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4878a839ae93a3b7fddef9edf3bc6c2c inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a4878a839ae93a3b7fddef9edf3bc6c2c\">baseAddr</a> () const </td></tr>\n\
<tr class=\"separator:a4878a839ae93a3b7fddef9edf3bc6c2c inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2bd807ff2c6b177e1b1a90883819bd9a inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a2bd807ff2c6b177e1b1a90883819bd9a\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>)</td></tr>\n\
<tr class=\"separator:a2bd807ff2c6b177e1b1a90883819bd9a inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6833577d43bda86e1e208ee98728f32e inherit pub_methods_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a6833577d43bda86e1e208ee98728f32e\">~Array</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"separator:a6833577d43bda86e1e208ee98728f32e inherit pub_methods_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_classmudbox_1_1_block\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_classmudbox_1_1_block\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a></td></tr>\n\
<tr class=\"memitem:a0e209e900bf22a2ed97ff35916eeb56d inherit pub_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a0e209e900bf22a2ed97ff35916eeb56d\">Next</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:a0e209e900bf22a2ed97ff35916eeb56d inherit pub_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a20a489b1dee79a636fae8b5f5158433f inherit pub_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a20a489b1dee79a636fae8b5f5158433f\">ItemSize</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:a20a489b1dee79a636fae8b5f5158433f inherit pub_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3ede701ecddfef4a46f80b81904cade8 inherit pub_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const char *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a3ede701ecddfef4a46f80b81904cade8\">Name</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:a3ede701ecddfef4a46f80b81904cade8 inherit pub_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa15afc7948aa4c3dad5dc862ef52369f inherit pub_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">long long&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#aa15afc7948aa4c3dad5dc862ef52369f\">Size</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:aa15afc7948aa4c3dad5dc862ef52369f inherit pub_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6756470cd4526f114ee1e644ae1a5ff1 inherit pub_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">long long&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a6756470cd4526f114ee1e644ae1a5ff1\">Address</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:a6756470cd4526f114ee1e644ae1a5ff1 inherit pub_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1829fe8917b0c3da21e996235c90fb01 inherit pub_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a1829fe8917b0c3da21e996235c90fb01\">Check</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>) const </td></tr>\n\
<tr class=\"separator:a1829fe8917b0c3da21e996235c90fb01 inherit pub_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-attribs\"></a>\n\
Public Attributes</h2></td></tr>\n\
<tr class=\"memitem:aa1acc006cf98d210a47c70b4aa00e5df\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a></td></tr>\n\
<tr class=\"separator:aa1acc006cf98d210a47c70b4aa00e5df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_attribs_classmudbox_1_1_block\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_attribs_classmudbox_1_1_block\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Public Attributes inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a></td></tr>\n\
<tr class=\"memitem:afdba82e98843c506f80709100d46dbfb inherit pub_attribs_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const char *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#afdba82e98843c506f80709100d46dbfb\">m_sName</a></td></tr>\n\
<tr class=\"separator:afdba82e98843c506f80709100d46dbfb inherit pub_attribs_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pro-static-methods\"></a>\n\
Static Protected Member Functions</h2></td></tr>\n\
<tr class=\"memitem:ab9d259e7ce354a3c861a08d32331522b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">Compare</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a>)</td></tr>\n\
<tr class=\"separator:ab9d259e7ce354a3c861a08d32331522b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"inherited\"></a>\n\
Additional Inherited Members</h2></td></tr>\n\
<tr class=\"inherit_header pub_static_methods_classmudbox_1_1_block\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_static_methods_classmudbox_1_1_block\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Static Public Member Functions inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a></td></tr>\n\
<tr class=\"memitem:af586afd44754d8e74fb98915cb857684 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#af586afd44754d8e74fb98915cb857684\">Head</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"separator:af586afd44754d8e74fb98915cb857684 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a056881e7875aad84b0d88757af4b00f7 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a056881e7875aad84b0d88757af4b00f7\">LogAll</a> (float fSizeFilter=0.01f, bool bSortByAddress=false)</td></tr>\n\
<tr class=\"separator:a056881e7875aad84b0d88757af4b00f7 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1b306d2ab9b501f6c7a9f78012777dfd inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a1b306d2ab9b501f6c7a9f78012777dfd\">CheckAll</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"separator:a1b306d2ab9b501f6c7a9f78012777dfd inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad9a887b1853a8a9a371dea3e1b3ca47a inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#ad9a887b1853a8a9a371dea3e1b3ca47a\">RegisterMemoryBlock</a> (long long iSize)</td></tr>\n\
<tr class=\"separator:ad9a887b1853a8a9a371dea3e1b3ca47a inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4851b156249ec2c4fee0be79e89001e4 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a4851b156249ec2c4fee0be79e89001e4\">UnregisterMemoryBlock</a> (long long iSize)</td></tr>\n\
<tr class=\"separator:a4851b156249ec2c4fee0be79e89001e4 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6d8c202f6cb748d9820865919413e587 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a6d8c202f6cb748d9820865919413e587\">SetAllocatorID</a> (const char *pAllocatorID)</td></tr>\n\
<tr class=\"separator:a6d8c202f6cb748d9820865919413e587 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a50217d0fd167327cc8cd24cfb832ddb7 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a50217d0fd167327cc8cd24cfb832ddb7\">CopyMemoryBlock</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *pDestination, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *pSource, long long iSize)</td></tr>\n\
<tr class=\"separator:a50217d0fd167327cc8cd24cfb832ddb7 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acfa810281d26ab75bf5dfeff5510d6c1 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">AlignedAlloc</a> (size_t iBytes, unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iAlignment)</td></tr>\n\
<tr class=\"separator:acfa810281d26ab75bf5dfeff5510d6c1 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a57c5bc3234d9fcda56a9641fb53535a6 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a57c5bc3234d9fcda56a9641fb53535a6\">AlignedFree</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *pData)</td></tr>\n\
<tr class=\"separator:a57c5bc3234d9fcda56a9641fb53535a6 inherit pub_static_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_methods_classmudbox_1_1_block\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_methods_classmudbox_1_1_block\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Member Functions inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a></td></tr>\n\
<tr class=\"memitem:a5ff8e409ec785d216d59529e99b93796 inherit pro_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a5ff8e409ec785d216d59529e99b93796\">Block</a> (const char *sName, unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iItemSize)</td></tr>\n\
<tr class=\"separator:a5ff8e409ec785d216d59529e99b93796 inherit pro_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a48dce1e54a0ef07f59483cb41029257e inherit pro_methods_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a48dce1e54a0ef07f59483cb41029257e\">~Block</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"separator:a48dce1e54a0ef07f59483cb41029257e inherit pro_methods_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_attribs_classmudbox_1_1_array\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_attribs_classmudbox_1_1_array\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Attributes inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array&lt; type &gt;</a></td></tr>\n\
<tr class=\"memitem:aef94c9a19763e094283abc0dff03f919 inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#aef94c9a19763e094283abc0dff03f919\">m_pArray</a></td></tr>\n\
<tr class=\"separator:aef94c9a19763e094283abc0dff03f919 inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa1acc006cf98d210a47c70b4aa00e5df inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a></td></tr>\n\
<tr class=\"separator:aa1acc006cf98d210a47c70b4aa00e5df inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac4aa82532d65b7f8f4d1ad7ec4279414 inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ac4aa82532d65b7f8f4d1ad7ec4279414\">m_bData</a></td></tr>\n\
<tr class=\"separator:ac4aa82532d65b7f8f4d1ad7ec4279414 inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9a1bf6b7038724a29fc87d7c37888c41 inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html\">Array</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a9a1bf6b7038724a29fc87d7c37888c41\">m_pThis</a></td></tr>\n\
<tr class=\"separator:a9a1bf6b7038724a29fc87d7c37888c41 inherit pro_attribs_classmudbox_1_1_array\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_attribs_classmudbox_1_1_block\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_attribs_classmudbox_1_1_block\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Attributes inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a></td></tr>\n\
<tr class=\"memitem:a5a69f224d3520662e06db597dc349b5c inherit pro_attribs_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a5a69f224d3520662e06db597dc349b5c\">m_pNext</a></td></tr>\n\
<tr class=\"separator:a5a69f224d3520662e06db597dc349b5c inherit pro_attribs_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6606cb9b6fe2d7f95f4e30850e39dd3e inherit pro_attribs_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a6606cb9b6fe2d7f95f4e30850e39dd3e\">m_pPrev</a></td></tr>\n\
<tr class=\"separator:a6606cb9b6fe2d7f95f4e30850e39dd3e inherit pro_attribs_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8bed336d1691335152d5db89ab29d531 inherit pro_attribs_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a8bed336d1691335152d5db89ab29d531\">m_iItemSize</a></td></tr>\n\
<tr class=\"separator:a8bed336d1691335152d5db89ab29d531 inherit pro_attribs_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_static_attribs_classmudbox_1_1_block\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_static_attribs_classmudbox_1_1_block\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Static Protected Attributes inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a></td></tr>\n\
<tr class=\"memitem:af18e077222d54b609f54a65221b65fa3 inherit pro_static_attribs_classmudbox_1_1_block\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html\">Block</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#af18e077222d54b609f54a65221b65fa3\">s_pHead</a></td></tr>\n\
<tr class=\"separator:af18e077222d54b609f54a65221b65fa3 inherit pro_static_attribs_classmudbox_1_1_block\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a7e753b854767ecb164178281bf254ac8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>sName</em> = <code>&quot;unknown&quot;</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Creates an empty array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sName</td><td>A name for the array (optional). Displayed in the log only. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00338\">338</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00340\"></a><span class=\"lineno\">  340</span>&#160;          : Array&lt;type&gt;( sName ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = 0; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a22b6bd64584515d4c4fa1d66f734f6ee\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iSize</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>sName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Creates an array with space for some elements already allocated. </p>\n\
<p>The content of the array is undefined. (That is, constructors are not called. To create an array where constructors and destructors are called automatically, use this call:</p>\n\
<div class=\"fragment\"><div class=\"line\">Store&lt;myType&gt; myInstance(<span class=\"keyword\">false</span>);</div>\n\
</div><!-- fragment --> <dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iSize</td><td>The number of elements to allocate initially. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sName</td><td>A name for the array (optional). Displayed in the log only. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00350\">350</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00353\"></a><span class=\"lineno\">  353</span>&#160;          : Array&lt;type&gt;( sName, iSize ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = iSize; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a80643536183afbeda2234c38270d3c13\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>pArray</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iSize</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>sName</em> = <code>&quot;unknown&quot;</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Creates an array and populates it will information copied from another array. </p>\n\
<p>Note that the information from the source array is copied over using memcpy. It is the caller\'s responsibility to check that the array being copied from contains enough values to copy before calling this constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">pArray</td><td>The array from which to copy elements </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iSize</td><td>The number of elements to copy over </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sName</td><td>A name for the array (optional). Displayed in the log only. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00360\">360</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00364\"></a><span class=\"lineno\">  364</span>&#160;          : Array&lt;type&gt;( sName, pArray, iSize ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = iSize; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a276a63aee55faa2fd117a8b414bebfc2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>bNoObjects</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>sName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Creates an empty array, allowing you to specify if elements have constructors or destructors that need to be called. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bNoObjects</td><td>if <b>true</b>, constructors and destructors will <b>not</b> be called on the array objects. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sName</td><td>A name for the array (optional). Displayed in the log only. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00367\">367</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00370\"></a><span class=\"lineno\">  370</span>&#160;          : Array&lt;type&gt;( sName, bNoObjects ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = 0; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5301004ffb133b41d65d1cb6f38c3716\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Creates an array from another one. The other array becomes empty after the operation. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">s</td><td>The array whose contents will be transferred to this one </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00373\">373</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00375\"></a><span class=\"lineno\">  375</span>&#160;          : Array&lt;type&gt;( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_sName, <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_iSize; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_iSize = 0; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3fdb86a3ea947319fd520408c398dd32\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">~<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Destroys the contents of the array and deallocate its memory. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00378\">378</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00378\"></a><span class=\"lineno\">  378</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Clear</a>( !Array&lt;type&gt;::m_bData ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a9a6b1665af166fd6553bed3bb0cc46ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">mudbox::Store::Clear</a></div><div class=\"ttdeci\">void Clear(bool bDestruct=false)</div><div class=\"ttdoc\">Clears the array and deallocates its memory. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00394\">array.h:394</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a2ca8b3984fedf27ec07d5a7a84f3c90a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool Copy </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copies the contents of another array into this one, duplicating all data. Returns <b>true</b> if successful. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">s</td><td>The array to be duplicated </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00381\">381</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00383\"></a><span class=\"lineno\">  383</span>&#160;                { <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_iSize = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>; <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#aed3ff741b1414359b8252f6667fc0ddb\">Array&lt;type&gt;::Copy</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_aed3ff741b1414359b8252f6667fc0ddb\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#aed3ff741b1414359b8252f6667fc0ddb\">mudbox::Array::Copy</a></div><div class=\"ttdeci\">bool Copy(Array&lt; type &gt; &amp;a) const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00164\">array.h:164</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9eeab6d977c543dec299265915b012df\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a> Clone </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns a copy of this array. The returned copy will have a duplicate of all data in the original. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00386\">386</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00386\"></a><span class=\"lineno\">  386</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a7e753b854767ecb164178281bf254ac8\">Store</a> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; s.SetItemCount( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ); <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\">Copy</a>( s ); <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a2ca8b3984fedf27ec07d5a7a84f3c90a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\">mudbox::Store::Copy</a></div><div class=\"ttdeci\">bool Copy(Store &amp;s) const </div><div class=\"ttdoc\">Copies the contents of another array into this one, duplicating all data. Returns true if successful...</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00381\">array.h:381</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a7e753b854767ecb164178281bf254ac8\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a7e753b854767ecb164178281bf254ac8\">mudbox::Store::Store</a></div><div class=\"ttdeci\">Store(const char *sName=&quot;unknown&quot;)</div><div class=\"ttdoc\">Creates an empty array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00338\">array.h:338</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0abd0e3b14a6f3af438b1a34a53a32fa\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Clone </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copies the contents of another array into this one, duplicating all data. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">s</td><td>The array to be duplicated </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00389\">389</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00391\"></a><span class=\"lineno\">  391</span>&#160;                { <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.SetItemCount( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ); <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\">Copy</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a2ca8b3984fedf27ec07d5a7a84f3c90a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\">mudbox::Store::Copy</a></div><div class=\"ttdeci\">bool Copy(Store &amp;s) const </div><div class=\"ttdoc\">Copies the contents of another array into this one, duplicating all data. Returns true if successful...</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00381\">array.h:381</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9a6b1665af166fd6553bed3bb0cc46ba\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Clear </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>bDestruct</em> = <code>false</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Clears the array and deallocates its memory. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bDestruct</td><td>If <b>true</b>, the destructor will be called for each element. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00394\">394</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00396\"></a><span class=\"lineno\">  396</span>&#160;          { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Array&lt;type&gt;::Clear</a>( bDestruct ); <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = 0; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_a9a6b1665af166fd6553bed3bb0cc46ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a9a6b1665af166fd6553bed3bb0cc46ba\">mudbox::Array::Clear</a></div><div class=\"ttdeci\">void Clear(bool bDestruct=false)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00146\">array.h:146</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a478f851a51d23a98795488716e474907\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool SetItemCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iSize</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>bKeepContent</em> = <code>false</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Sets the logical size of the array. </p>\n\
<p>Returns <b>true</b> if successful.</p>\n\
<p>If the new size is smaller than the current size, items at the end of the array will be discarded. If the new size is larger, then a new memory block will be allocated. In this case, the existing items will only be copied to the new block only if bKeepContent is set to true. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iSize</td><td>The new size of the array </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bKeepContent</td><td>if <b>true</b>, the original array contents will be preserved when the array size is increased. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">403</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00407\"></a><span class=\"lineno\">  407</span>&#160;    { </div>\n\
<div class=\"line\"><a name=\"l00408\"></a><span class=\"lineno\">  408</span>&#160;        <span class=\"keywordflow\">if</span> ( iSize &lt;= <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> )</div>\n\
<div class=\"line\"><a name=\"l00409\"></a><span class=\"lineno\">  409</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00410\"></a><span class=\"lineno\">  410</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = iSize;</div>\n\
<div class=\"line\"><a name=\"l00411\"></a><span class=\"lineno\">  411</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"><a name=\"l00412\"></a><span class=\"lineno\">  412</span>&#160;        };</div>\n\
<div class=\"line\"><a name=\"l00413\"></a><span class=\"lineno\">  413</span>&#160;        <span class=\"keywordflow\">if</span> ( !bKeepContent ) </div>\n\
<div class=\"line\"><a name=\"l00414\"></a><span class=\"lineno\">  414</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Clear</a>(); </div>\n\
<div class=\"line\"><a name=\"l00415\"></a><span class=\"lineno\">  415</span>&#160;        <span class=\"keywordflow\">if</span> ( Array&lt;type&gt;::Alloc( iSize ) ) </div>\n\
<div class=\"line\"><a name=\"l00416\"></a><span class=\"lineno\">  416</span>&#160;        { </div>\n\
<div class=\"line\"><a name=\"l00417\"></a><span class=\"lineno\">  417</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = iSize; </div>\n\
<div class=\"line\"><a name=\"l00418\"></a><span class=\"lineno\">  418</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>; </div>\n\
<div class=\"line\"><a name=\"l00419\"></a><span class=\"lineno\">  419</span>&#160;        };</div>\n\
<div class=\"line\"><a name=\"l00420\"></a><span class=\"lineno\">  420</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"><a name=\"l00421\"></a><span class=\"lineno\">  421</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a9a6b1665af166fd6553bed3bb0cc46ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">mudbox::Store::Clear</a></div><div class=\"ttdeci\">void Clear(bool bDestruct=false)</div><div class=\"ttdoc\">Clears the array and deallocates its memory. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00394\">array.h:394</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab2d851b9a8a9357edeb4f676409834e4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool Allocate </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iSize</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>bKeepContent</em> = <code>false</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Preallocates memory for the an array, without changing the array\'s logical size. </p>\n\
<p>Returns <b>true</b> if successful.</p>\n\
<p>This method can be used to increase efficiency when an array is expected to grow by a large number of small steps. For example, if you expect to add 50 items to an array one at a time, you can call <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab2d851b9a8a9357edeb4f676409834e4\" title=\"Preallocates memory for the an array, without changing the array&#39;s logical size. \">Allocate()</a> first to allocate the required space. This will prevent the need for frequent reallocation. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iSize</td><td>The new size for the array </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bKeepContent</td><td>if <b>true</b>, the array contents will be preserved. Otherwise they will be discarded. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00430\">430</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00433\"></a><span class=\"lineno\">  433</span>&#160;          { <span class=\"keywordflow\">if</span> ( !bKeepContent ) <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Clear</a>(); <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a00703ca570efac13de8870ff0899f9ba\">Array&lt;type&gt;::Alloc</a>( iSize ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a9a6b1665af166fd6553bed3bb0cc46ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">mudbox::Store::Clear</a></div><div class=\"ttdeci\">void Clear(bool bDestruct=false)</div><div class=\"ttdoc\">Clears the array and deallocates its memory. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00394\">array.h:394</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_a00703ca570efac13de8870ff0899f9ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a00703ca570efac13de8870ff0899f9ba\">mudbox::Array::Alloc</a></div><div class=\"ttdeci\">bool Alloc(unsigned int iNewSize)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00187\">array.h:187</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a01237ce058a74898d2f83f0b76930321\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool Extend </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Extends the logical size of the array. </p>\n\
<p>Returns <b>true</b> if successful.</p>\n\
<p>If the specified size is not larger than the current array, nothing will happen. Otherwise the logical size of the array will be extended to one more than the specified index. New memory will be allocated as necessary to hold the new items. Returns <b>true</b> if successful. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iIndex</td><td>The array index to extend to. For example, if you specify 7, the new array will contain 8 elements (indexed 0 to 7). </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00440\">440</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00443\"></a><span class=\"lineno\">  443</span>&#160;    { </div>\n\
<div class=\"line\"><a name=\"l00444\"></a><span class=\"lineno\">  444</span>&#160;        <span class=\"keywordflow\">if</span> ( Array&lt;type&gt;::Extend( iIndex ) )</div>\n\
<div class=\"line\"><a name=\"l00445\"></a><span class=\"lineno\">  445</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00446\"></a><span class=\"lineno\">  446</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a990360af7f7250cdaec94844b139fa74\">Max</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>, iIndex+1 );</div>\n\
<div class=\"line\"><a name=\"l00447\"></a><span class=\"lineno\">  447</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"><a name=\"l00448\"></a><span class=\"lineno\">  448</span>&#160;        };</div>\n\
<div class=\"line\"><a name=\"l00449\"></a><span class=\"lineno\">  449</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"><a name=\"l00450\"></a><span class=\"lineno\">  450</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_a990360af7f7250cdaec94844b139fa74\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#a990360af7f7250cdaec94844b139fa74\">mudbox::Max</a></div><div class=\"ttdeci\">type Max(type a, type b)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00186\">mudbox.h:186</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a801b614cdf0b66ba7eefbe2fd151fd6f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool Extend </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Extends the logical size of the array. </p>\n\
<p>Returns <b>true</b> if successful.</p>\n\
<p>If the specified size is not larger than the current array, nothing will happen. Otherwise the logical size of the array will be extended to one more than the specified index. New memory will be allocated as necessary to hold the new items. Returns <b>true</b> if successful. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iIndex</td><td>The array index to extend to. For example, if you specify 7, the new array will contain 8 elements (indexed 0 to 7). </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00457\">457</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00459\"></a><span class=\"lineno\">  459</span>&#160;          { <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a01237ce058a74898d2f83f0b76930321\">Extend</a>( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)iIndex ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a01237ce058a74898d2f83f0b76930321\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a01237ce058a74898d2f83f0b76930321\">mudbox::Store::Extend</a></div><div class=\"ttdeci\">bool Extend(unsigned int iIndex)</div><div class=\"ttdoc\">Extends the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00440\">array.h:440</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac5aee37979842e4deab4cba66a08f7c0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> RemoveTail </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iItemCount</em> = <code>1</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Removes the final items from the array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iItemCount</td><td>The number if items to remove from the end of the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00462\">462</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00464\"></a><span class=\"lineno\">  464</span>&#160;          { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>()-iItemCount ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a478f851a51d23a98795488716e474907\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">mudbox::Store::SetItemCount</a></div><div class=\"ttdeci\">bool SetItemCount(unsigned int iSize, bool bKeepContent=false)</div><div class=\"ttdoc\">Sets the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">array.h:403</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae526ef2c96b5084f18ae6b5fe4f95576\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Fill </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&#160;</td>\n\
          <td class=\"paramname\"><em>cPattern</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Fills the array with a specified element. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">cPattern</td><td>The value to which every item in the array will be set </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00467\">467</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00469\"></a><span class=\"lineno\">  469</span>&#160;          { <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>; i++ ) <span class=\"keyword\">operator</span>[](i) = cPattern; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aada37f2f37eb4ffb34bd3b60ce7e1454\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> ByteFill </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned char&#160;</td>\n\
          <td class=\"paramname\"><em>cPattern</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Fills the array with a specified byte pattern. </p>\n\
<p>This method is similar to Fill, but it is much faster. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">cPattern</td><td>The value to which every item in the array will be set </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00473\">473</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00475\"></a><span class=\"lineno\">  475</span>&#160;          { memset( Array&lt;type&gt;::m_pArray, (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)cPattern, <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) * <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ); }</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a63267399cd2a2ee217572c11d2e54f07\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a></div><div class=\"ttdeci\">GLuint GLuint GLsizei GLenum type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa5275e8546cead2652948aabd4db62fd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> Add </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>e</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Adds a new item to the array, increasing the array size by 1. </p>\n\
<p>The index of the added element is returned.</p>\n\
<p>If you plan to add a number of objects using this method, you can improve efficiency by preallocating all the space you will need using the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab2d851b9a8a9357edeb4f676409834e4\" title=\"Preallocates memory for the an array, without changing the array&#39;s logical size. \">Allocate()</a> method. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">e</td><td>The element to be added to the end of the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00482\">482</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00484\"></a><span class=\"lineno\">  484</span>&#160;          { <span class=\"keywordflow\">if</span>( Array&lt;type&gt;::Extend( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ) ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ab7d5a05ed57d81497501b6b3fd98611b\">Array&lt;type&gt;::operator[]</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ) = e; <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>++; } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">return</span> 0xffffffff; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_ab7d5a05ed57d81497501b6b3fd98611b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ab7d5a05ed57d81497501b6b3fd98611b\">mudbox::Array::operator[]</a></div><div class=\"ttdeci\">type &amp; operator[](int iIndex)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00233\">array.h:233</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0ffc4a46a08b6b2640158eb004f4cdd3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> Add </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>e</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Adds a new item to the array, increasing the array size by 1. </p>\n\
<p>The index of the added element is returned.</p>\n\
<p>If you plan to add a number of objects using this method, you can improve efficiency by preallocating all the space you will need using the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab2d851b9a8a9357edeb4f676409834e4\" title=\"Preallocates memory for the an array, without changing the array&#39;s logical size. \">Allocate()</a> method. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">e</td><td>The element to be added to the end of the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00490\">490</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00492\"></a><span class=\"lineno\">  492</span>&#160;          { <span class=\"keywordflow\">if</span>( Array&lt;type&gt;::Extend( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ) ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ab7d5a05ed57d81497501b6b3fd98611b\">Array&lt;type&gt;::operator[]</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ) = e; <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>++; } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">return</span> 0xffffffff; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_ab7d5a05ed57d81497501b6b3fd98611b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#ab7d5a05ed57d81497501b6b3fd98611b\">mudbox::Array::operator[]</a></div><div class=\"ttdeci\">type &amp; operator[](int iIndex)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00233\">array.h:233</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a070e1bf44df6fe58a2106981d71af206\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Transfers the contents of another array to this one, leaving the original array empty. </p>\n\
<p>If you want to copy the contents of the source array (instead of transferring it), use the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\" title=\"Copies the contents of another array into this one, duplicating all data. Returns true if successful...\">Copy()</a> or <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a319b0ae9ec88b550d5805e3097b94520\">Clone()</a> functions. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00497\">497</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00497\"></a><span class=\"lineno\">  497</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_iSize; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_iSize = 0; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a2bd807ff2c6b177e1b1a90883819bd9a\">Array&lt;type&gt;::operator =</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_a2bd807ff2c6b177e1b1a90883819bd9a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a2bd807ff2c6b177e1b1a90883819bd9a\">mudbox::Array::operator=</a></div><div class=\"ttdeci\">void operator=(const Array&lt; type &gt; &amp;a)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00265\">array.h:265</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a79f3c47bbcb6273fcb6bc2ac3b992662\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> GetFrom </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store</a>&lt; <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &gt; &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Transfers the contents of another array to this one, leaving the original array empty. </p>\n\
<p>If you want to copy the contents of the source array (instead of transferring it), use the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2ca8b3984fedf27ec07d5a7a84f3c90a\" title=\"Copies the contents of another array into this one, duplicating all data. Returns true if successful...\">Copy()</a> or <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a319b0ae9ec88b550d5805e3097b94520\">Clone()</a> functions. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">s</td><td>The array whose contents are to be transferred to this one </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00502\">502</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00504\"></a><span class=\"lineno\">  504</span>&#160;          { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.m_iSize; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a2bd807ff2c6b177e1b1a90883819bd9a\">Array&lt;type&gt;::operator =</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_a2bd807ff2c6b177e1b1a90883819bd9a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a2bd807ff2c6b177e1b1a90883819bd9a\">mudbox::Array::operator=</a></div><div class=\"ttdeci\">void operator=(const Array&lt; type &gt; &amp;a)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00265\">array.h:265</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac9216fd481eaeea8295a5b1fa2817f99\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&amp; operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns an indexed item from the array. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">507</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00507\"></a><span class=\"lineno\">  507</span>&#160;{ <span class=\"keywordflow\">return</span> Array&lt;type&gt;::m_pArray[iIndex]; };</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6275c588c48d0ff9c81f6e24d90194d0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&amp; operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns an indexed item from the array. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00510\">510</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00510\"></a><span class=\"lineno\">  510</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a24f4fe4a32c8501c3cae26db72954a30\">MB_ASSERT</a>( iIndex &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ); <span class=\"keywordflow\">return</span> Array&lt;type&gt;::m_pArray[iIndex]; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"mudbox_8h_html_a24f4fe4a32c8501c3cae26db72954a30\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/mudbox_8h.html#a24f4fe4a32c8501c3cae26db72954a30\">MB_ASSERT</a></div><div class=\"ttdeci\">#define MB_ASSERT(condition)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00073\">mudbox.h:73</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a90e41259f806210f1c50140d9d1f05c6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&amp; operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns an indexed item from the array. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00513\">513</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00513\"></a><span class=\"lineno\">  513</span>&#160;{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)iIndex ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ac9216fd481eaeea8295a5b1fa2817f99\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">mudbox::Store::operator[]</a></div><div class=\"ttdeci\">const type &amp; operator[](unsigned int iIndex) const </div><div class=\"ttdoc\">Returns an indexed item from the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">array.h:507</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab7d5a05ed57d81497501b6b3fd98611b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&amp; operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns an indexed item from the array. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00516\">516</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00516\"></a><span class=\"lineno\">  516</span>&#160;{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)iIndex ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ac9216fd481eaeea8295a5b1fa2817f99\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">mudbox::Store::operator[]</a></div><div class=\"ttdeci\">const type &amp; operator[](unsigned int iIndex) const </div><div class=\"ttdoc\">Returns an indexed item from the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">array.h:507</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a056291dc276d4565fa638c53e0e43f31\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsEmpty </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns <b>true</b> if the array has no items. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00520\">520</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00520\"></a><span class=\"lineno\">  520</span>&#160;{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>() == 0; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4e78e3cd062c82439dffc9cddbdd8a20\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">operator bool </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Allows you to use the array as a boolean in <b>if</b> statements. Evaluates to <b>true</b> if the array is not empty. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00523\">523</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00523\"></a><span class=\"lineno\">  523</span>&#160;{ <span class=\"keywordflow\">return</span> !<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a056291dc276d4565fa638c53e0e43f31\">IsEmpty</a>(); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a056291dc276d4565fa638c53e0e43f31\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a056291dc276d4565fa638c53e0e43f31\">mudbox::Store::IsEmpty</a></div><div class=\"ttdeci\">bool IsEmpty(void) const </div><div class=\"ttdoc\">Returns true if the array has no items. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00520\">array.h:520</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5fb4044b97beecc0c4a79494057b8b99\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator! </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Evaluates to <b>true</b> if the array contains no items. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00526\">526</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00526\"></a><span class=\"lineno\">  526</span>&#160;{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a056291dc276d4565fa638c53e0e43f31\">IsEmpty</a>(); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a056291dc276d4565fa638c53e0e43f31\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a056291dc276d4565fa638c53e0e43f31\">mudbox::Store::IsEmpty</a></div><div class=\"ttdeci\">bool IsEmpty(void) const </div><div class=\"ttdoc\">Returns true if the array has no items. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00520\">array.h:520</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4694c8693837e4419c81050157bbc6ef\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> SetBuffer </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>pData</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iSize</em> = <code>0</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Makes a <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> array from a regular C or C++ array. </p>\n\
<p>This method takes a pointer to a block of memory that contains a C-style array of elements of the appropriate type, and makes that into a Mudbox array object. Once this is called, the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> item will control the memory block, and extend or deallocate it as needed, as part of its own methods and destructor.</p>\n\
<p>It is the responsibility of the caller to ensure that the source array is at least as big as the specified size. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00537\">537</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00537\"></a><span class=\"lineno\">  537</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = Array&lt;type&gt;::m_iSize = iSize; Array&lt;type&gt;::m_pArray = pData; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2aac302e2dd6ed8044bb2cfb82d6ab5a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Serialize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">class <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Serializes the the array and its contents from/to a stream. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">s</td><td>The stream from/to which to read/write the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/stream_8h_source.html#l00294\">294</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/stream_8h_source.html\">stream.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00295\"></a><span class=\"lineno\">  295</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00296\"></a><span class=\"lineno\">  296</span>&#160;    <span class=\"keywordflow\">if</span> ( !<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.IsStoring() )</div>\n\
<div class=\"line\"><a name=\"l00297\"></a><span class=\"lineno\">  297</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.ReadInt() );</div>\n\
<div class=\"line\"><a name=\"l00298\"></a><span class=\"lineno\">  298</span>&#160;    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\"><a name=\"l00299\"></a><span class=\"lineno\">  299</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> &lt;&lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>;</div>\n\
<div class=\"line\"><a name=\"l00300\"></a><span class=\"lineno\">  300</span>&#160;    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>; i++ )</div>\n\
<div class=\"line\"><a name=\"l00301\"></a><span class=\"lineno\">  301</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == <span class=\"keyword\">operator</span>[]( i );</div>\n\
<div class=\"line\"><a name=\"l00302\"></a><span class=\"lineno\">  302</span>&#160;};</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a478f851a51d23a98795488716e474907\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">mudbox::Store::SetItemCount</a></div><div class=\"ttdeci\">bool SetItemCount(unsigned int iSize, bool bKeepContent=false)</div><div class=\"ttdoc\">Sets the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">array.h:403</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9e14fd054d125587cadb88921096dd56\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Sort </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Sorts the items in the array. </p>\n\
<p>This method will sort all the items in the array from least to greatest. If the array is of a non-numeric or non-string type, this method determines the relative ordering of items using the subtraction (\"-\") operator. In order to use this method, you must ensure that the subtraction operator is defined for the data type stored in this array, with these properties:</p>\n\
<p>if A is less than B, then A-B must return a negative integer</p>\n\
<p>if A is greater than B, then A-B must return a positive integer</p>\n\
<p>if A is equivalent to B, then A-B must return 0 </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00556\">556</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00556\"></a><span class=\"lineno\">  556</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a5be883623c5c652ba7fc5262eaebb584\">QuickSort</a>( Array&lt;type&gt;::m_pArray, <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>, <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>), <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">Compare</a> ); };</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a63267399cd2a2ee217572c11d2e54f07\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a></div><div class=\"ttdeci\">GLuint GLuint GLsizei GLenum type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_a5be883623c5c652ba7fc5262eaebb584\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#a5be883623c5c652ba7fc5262eaebb584\">mudbox::QuickSort</a></div><div class=\"ttdeci\">void MBDLL_DECL QuickSort(void *pBase, unsigned int iNum, unsigned int iSize, int(*fComparator)(const void *, const void *))</div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ab9d259e7ce354a3c861a08d32331522b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">mudbox::Store::Compare</a></div><div class=\"ttdeci\">static int Compare(const void *a, const void *b)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00662\">array.h:662</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac630cdbd3a2d4e87a3b628af2346fde6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>* Find </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&#160;</td>\n\
          <td class=\"paramname\"><em>a</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns a pointer to the item in the array with a particular value. </p>\n\
<p>The array must be sorted before using this call.</p>\n\
<p>This method uses a binary search to return a pointer to an element in the array with the specified value. If the value is not found, then NULL is returned. Before this method can be called, the array must be sorted (by calling the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\" title=\"Sorts the items in the array. \">Sort()</a> method).</p>\n\
<p><b>Note:</b> The pointer returned by this function should not be kept for later use, as the contents of an array can move around in memory as items are added and removed. It should only be used immediately. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">a</td><td>The value to search for in the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00566\">566</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00568\"></a><span class=\"lineno\">  568</span>&#160;          { <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *) bsearch( &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>, Array&lt;type&gt;::m_pArray, <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>, <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>), <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">Compare</a> ); };</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a63267399cd2a2ee217572c11d2e54f07\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a></div><div class=\"ttdeci\">GLuint GLuint GLsizei GLenum type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ab9d259e7ce354a3c861a08d32331522b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">mudbox::Store::Compare</a></div><div class=\"ttdeci\">static int Compare(const void *a, const void *b)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00662\">array.h:662</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ac8729153468b5dcf13f971b21d84d4e5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a></div><div class=\"ttdeci\">GLubyte GLubyte GLubyte a</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05404\">GLee.h:5404</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad9bab0f86652d09f66ed27eec426560f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>* Find </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>a</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns a pointer to the item in the array with a particular value. </p>\n\
<p>The array must be sorted before using this call.</p>\n\
<p>This method uses a binary search to return a pointer to an element in the array with the specified value. If the value is not found, then NULL is returned. Before this method can be called, the array must be sorted (by calling the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\" title=\"Sorts the items in the array. \">Sort()</a> method).</p>\n\
<p><b>Note:</b> The pointer returned by this function should not be kept for later use, as the contents of an array can move around in memory as items are added and removed. It should only be used immediately. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00578\">578</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00578\"></a><span class=\"lineno\">  578</span>&#160;{ <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *) bsearch( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>, Array&lt;type&gt;::m_pArray, <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>, <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>), <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">Compare</a> ); };</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a63267399cd2a2ee217572c11d2e54f07\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a></div><div class=\"ttdeci\">GLuint GLuint GLsizei GLenum type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ab9d259e7ce354a3c861a08d32331522b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ab9d259e7ce354a3c861a08d32331522b\">mudbox::Store::Compare</a></div><div class=\"ttdeci\">static int Compare(const void *a, const void *b)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00662\">array.h:662</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ac8729153468b5dcf13f971b21d84d4e5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a></div><div class=\"ttdeci\">GLubyte GLubyte GLubyte a</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05404\">GLee.h:5404</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afe4bc5d1a8ea0fd07c79fb3919d0dd02\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> IndexOf </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&#160;</td>\n\
          <td class=\"paramname\"><em>pValue</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the first index of the element equal to pValue. </p>\n\
<p>Note this method requires that operator == be defined for the type of data stored in the array. Returns the index of the first occurance of pValue or 0xffffffff if the array does not contain pValue. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00584\">584</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00585\"></a><span class=\"lineno\">  585</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00586\"></a><span class=\"lineno\">  586</span>&#160;        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00587\"></a><span class=\"lineno\">  587</span>&#160;            <span class=\"keywordflow\">if</span>( (*<span class=\"keyword\">this</span>)[i] == pValue )</div>\n\
<div class=\"line\"><a name=\"l00588\"></a><span class=\"lineno\">  588</span>&#160;                <span class=\"keywordflow\">return</span> i;</div>\n\
<div class=\"line\"><a name=\"l00589\"></a><span class=\"lineno\">  589</span>&#160;        <span class=\"keywordflow\">return</span> 0xffffffff;</div>\n\
<div class=\"line\"><a name=\"l00590\"></a><span class=\"lineno\">  590</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acdb423f973a29aa7cccbc22b8ca690d5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> Remove </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>e</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove every occurrence of a specified item from the array. Returns the number of removed items. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">e</td><td>the item to remove from the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00593\">593</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00596\"></a><span class=\"lineno\">  596</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00597\"></a><span class=\"lineno\">  597</span>&#160;        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0, i = 0;</div>\n\
<div class=\"line\"><a name=\"l00598\"></a><span class=\"lineno\">  598</span>&#160;        <span class=\"keywordflow\">while</span> ( i &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>() )</div>\n\
<div class=\"line\"><a name=\"l00599\"></a><span class=\"lineno\">  599</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00600\"></a><span class=\"lineno\">  600</span>&#160;            <span class=\"keywordflow\">if</span> ( <span class=\"keyword\">operator</span>[]( i ) != e )</div>\n\
<div class=\"line\"><a name=\"l00601\"></a><span class=\"lineno\">  601</span>&#160;                <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( j++ ) = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( i );</div>\n\
<div class=\"line\"><a name=\"l00602\"></a><span class=\"lineno\">  602</span>&#160;            i++;</div>\n\
<div class=\"line\"><a name=\"l00603\"></a><span class=\"lineno\">  603</span>&#160;        };</div>\n\
<div class=\"line\"><a name=\"l00604\"></a><span class=\"lineno\">  604</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a>( j );</div>\n\
<div class=\"line\"><a name=\"l00605\"></a><span class=\"lineno\">  605</span>&#160;        <span class=\"keywordflow\">return</span> i-j;</div>\n\
<div class=\"line\"><a name=\"l00606\"></a><span class=\"lineno\">  606</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a478f851a51d23a98795488716e474907\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">mudbox::Store::SetItemCount</a></div><div class=\"ttdeci\">bool SetItemCount(unsigned int iSize, bool bKeepContent=false)</div><div class=\"ttdoc\">Sets the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">array.h:403</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ac9216fd481eaeea8295a5b1fa2817f99\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">mudbox::Store::operator[]</a></div><div class=\"ttdeci\">const type &amp; operator[](unsigned int iIndex) const </div><div class=\"ttdoc\">Returns an indexed item from the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">array.h:507</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7c63b869e610c82b21204af2a750ccb5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> RemoveAt </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Removes the item at the specified index from the array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iIndex</td><td>index of the item to be removed </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00609\">609</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00612\"></a><span class=\"lineno\">  612</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00613\"></a><span class=\"lineno\">  613</span>&#160;        <span class=\"keywordflow\">while</span> ( iIndex+1 &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>( ) )</div>\n\
<div class=\"line\"><a name=\"l00614\"></a><span class=\"lineno\">  614</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00615\"></a><span class=\"lineno\">  615</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( iIndex ) = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( iIndex+1 );</div>\n\
<div class=\"line\"><a name=\"l00616\"></a><span class=\"lineno\">  616</span>&#160;            iIndex++;</div>\n\
<div class=\"line\"><a name=\"l00617\"></a><span class=\"lineno\">  617</span>&#160;        };</div>\n\
<div class=\"line\"><a name=\"l00618\"></a><span class=\"lineno\">  618</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a33536fce33010513e0a87ec163ed29ff\">Min</a>(iIndex,<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>()-1) );</div>\n\
<div class=\"line\"><a name=\"l00619\"></a><span class=\"lineno\">  619</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_a33536fce33010513e0a87ec163ed29ff\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#a33536fce33010513e0a87ec163ed29ff\">mudbox::Min</a></div><div class=\"ttdeci\">type Min(type a, type b)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00184\">mudbox.h:184</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a478f851a51d23a98795488716e474907\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">mudbox::Store::SetItemCount</a></div><div class=\"ttdeci\">bool SetItemCount(unsigned int iSize, bool bKeepContent=false)</div><div class=\"ttdoc\">Sets the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">array.h:403</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ac9216fd481eaeea8295a5b1fa2817f99\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">mudbox::Store::operator[]</a></div><div class=\"ttdeci\">const type &amp; operator[](unsigned int iIndex) const </div><div class=\"ttdoc\">Returns an indexed item from the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">array.h:507</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8afe97d076d37e99e27fc9179802a2ad\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> RemoveDuplicates </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Removes duplicated items from the array after sorting it. </p>\n\
<p>See the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\" title=\"Sorts the items in the array. \">Sort()</a> method for information on what makes an array Sort-able. This method sorts the contents of the array, then goes through and removes any duplicate entries, leaving a list of unique items. It returns the number of items that were removed. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00627\">627</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00628\"></a><span class=\"lineno\">  628</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00629\"></a><span class=\"lineno\">  629</span>&#160;        <span class=\"keywordflow\">if</span> ( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>() == 0 )</div>\n\
<div class=\"line\"><a name=\"l00630\"></a><span class=\"lineno\">  630</span>&#160;            <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\"><a name=\"l00631\"></a><span class=\"lineno\">  631</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\">Sort</a>();</div>\n\
<div class=\"line\"><a name=\"l00632\"></a><span class=\"lineno\">  632</span>&#160;        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0;</div>\n\
<div class=\"line\"><a name=\"l00633\"></a><span class=\"lineno\">  633</span>&#160;        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>()-1; i++ )</div>\n\
<div class=\"line\"><a name=\"l00634\"></a><span class=\"lineno\">  634</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00635\"></a><span class=\"lineno\">  635</span>&#160;            <span class=\"keywordflow\">if</span> ( <span class=\"keyword\">operator</span>[]( i ) != <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( i+1 ) )</div>\n\
<div class=\"line\"><a name=\"l00636\"></a><span class=\"lineno\">  636</span>&#160;                <span class=\"keyword\">operator</span>[]( j++ ) = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( i );</div>\n\
<div class=\"line\"><a name=\"l00637\"></a><span class=\"lineno\">  637</span>&#160;        };</div>\n\
<div class=\"line\"><a name=\"l00638\"></a><span class=\"lineno\">  638</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( j++ ) = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator[]</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>()-1 );</div>\n\
<div class=\"line\"><a name=\"l00639\"></a><span class=\"lineno\">  639</span>&#160;        <span class=\"keywordtype\">unsigned</span> iRemoved = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>()-j;</div>\n\
<div class=\"line\"><a name=\"l00640\"></a><span class=\"lineno\">  640</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> = j;</div>\n\
<div class=\"line\"><a name=\"l00641\"></a><span class=\"lineno\">  641</span>&#160;        <span class=\"keywordflow\">return</span> iRemoved;</div>\n\
<div class=\"line\"><a name=\"l00642\"></a><span class=\"lineno\">  642</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a9e14fd054d125587cadb88921096dd56\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9e14fd054d125587cadb88921096dd56\">mudbox::Store::Sort</a></div><div class=\"ttdeci\">void Sort(void)</div><div class=\"ttdoc\">Sorts the items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00556\">array.h:556</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ac9216fd481eaeea8295a5b1fa2817f99\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">mudbox::Store::operator[]</a></div><div class=\"ttdeci\">const type &amp; operator[](unsigned int iIndex) const </div><div class=\"ttdoc\">Returns an indexed item from the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">array.h:507</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0b988bffaf1deb7d6968501bdb6872fc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> ItemCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the number of items in the array. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">645</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00645\"></a><span class=\"lineno\">  645</span>&#160;{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a>; };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afc45fae803f8530e605e2315172b1520\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>&amp; Last </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the last item in the array, or 0 if the array is empty. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00648\">648</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00648\"></a><span class=\"lineno\">  648</span>&#160;{ <span class=\"keywordflow\">if</span> ( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>() ) <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">operator []</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>()-1 ); <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">throw</span> <span class=\"keyword\">new</span> Error( <span class=\"stringliteral\">&quot;Store::LastItem called for an empty store&quot;</span> ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_ac9216fd481eaeea8295a5b1fa2817f99\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#ac9216fd481eaeea8295a5b1fa2817f99\">mudbox::Store::operator[]</a></div><div class=\"ttdeci\">const type &amp; operator[](unsigned int iIndex) const </div><div class=\"ttdoc\">Returns an indexed item from the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00507\">array.h:507</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2016d150e0c8a3a048e1fbeeb7baa1e4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Optimize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Reduces the allocated memory size to match the size of the current elements in the array. </p>\n\
<p>Arrays derived from <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> automatically grow their memory as needed to accommodate the items that are added to them. For efficiency, when an array expands it allocates more memory than it immediately needs. This reduces the number of expensive memory allocations.</p>\n\
<p>The Optimize methods allocates a new block of memory, precisely the size needed to hold the current contents of the array, then copies the array data to this new block before deleting the existing block. Use it to minimize the memory footprint of arrays that are unlikely to expand, but that you need to keep around. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00659\">659</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00659\"></a><span class=\"lineno\">  659</span>&#160;{ <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a00703ca570efac13de8870ff0899f9ba\">Array&lt;type&gt;::Alloc</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">m_iSize</a> ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_aa1acc006cf98d210a47c70b4aa00e5df\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#aa1acc006cf98d210a47c70b4aa00e5df\">mudbox::Store::m_iSize</a></div><div class=\"ttdeci\">unsigned int m_iSize</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">array.h:677</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_array_html_a00703ca570efac13de8870ff0899f9ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_array.html#a00703ca570efac13de8870ff0899f9ba\">mudbox::Array::Alloc</a></div><div class=\"ttdeci\">bool Alloc(unsigned int iNewSize)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00187\">array.h:187</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab9d259e7ce354a3c861a08d32331522b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> Compare </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>a</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>b</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span><span class=\"mlabel\">protected</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00662\">662</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00662\"></a><span class=\"lineno\">  662</span>&#160;{ <span class=\"keywordflow\">return</span> (<span class=\"keywordtype\">int</span>)(*((<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *)<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>)-*((<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *)<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a>)); };</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a63267399cd2a2ee217572c11d2e54f07\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a></div><div class=\"ttdeci\">GLuint GLuint GLsizei GLenum type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a08f98740667f706cd68d5e873088ffa6\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a></div><div class=\"ttdeci\">GLubyte GLubyte b</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05404\">GLee.h:5404</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ac8729153468b5dcf13f971b21d84d4e5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a></div><div class=\"ttdeci\">GLubyte GLubyte GLubyte a</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05404\">GLee.h:5404</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Data Documentation</h2>\n\
<a class=\"anchor\" id=\"aa1acc006cf98d210a47c70b4aa00e5df\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> m_iSize</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">mutable</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00677\">677</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>Mudbox/<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a></li>\n\
<li>Mudbox/<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/stream_8h_source.html\">stream.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";