var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>ImmediateModeRenderer/ImmediateModeRenderer.cpp</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_immediate_mode_renderer_2_immediate_mode_renderer_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>ImmediateModeRenderer/ImmediateModeRenderer.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">ImmediateModeRenderer/ImmediateModeRenderer.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2008 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CREATED: April 2010</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;ImmediateModeRenderer.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;<a class=\"code\" href=\"#!/url=./cpp_ref/math_8h.html\">math.h</a>&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(WIN32) || defined(WIN64)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;omp.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(JAMBUILD)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html\">Mudbox/mudbox.h</a>&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/_mud_box_g_l_8h.html\">Mudbox/MudBoxGL.h</a>&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/Mudbox/mudbox.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/Mudbox/MudBoxGL.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//#define AUX_DATA 1</span></div>\n\
<div class=\"line\"><span class=\"comment\">//#define PARTITIONING 1</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#afa2df46a730e8fc8bceb9410c0ff6838\">MB_PLUGIN</a>( <span class=\"stringliteral\">&quot;ImmediateModeRenderer&quot;</span>, <span class=\"stringliteral\">&quot;Immediate Mode Renderer&quot;</span>, <span class=\"stringliteral\">&quot;Autodesk&quot;</span>, <span class=\"stringliteral\">&quot;http://www.mudbox3d.com&quot;</span>, 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a1d51ad935ab5d26fe95dff62601b602c\">IMPLEMENT_CLASS</a>( ImmediateModeRenderer, MeshRenderer, <span class=\"stringliteral\">&quot;Immediate Mode Renderer&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ImmediateModeRenderer::ImmediateModeRenderer( <span class=\"keywordtype\">void</span> ) :</div>\n\
<div class=\"line\">    m_pMesh(NULL),</div>\n\
<div class=\"line\">    m_fPointSize(2.0<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>),</div>\n\
<div class=\"line\">    m_fLineWidth(2.0<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>),</div>\n\
<div class=\"line\">    m_ePolygonMode(GL_FILL),</div>\n\
<div class=\"line\">    m_bTCMode(FALSE),</div>\n\
<div class=\"line\">    m_iRedBits(0),</div>\n\
<div class=\"line\">    m_iGreenBits(0),</div>\n\
<div class=\"line\">    m_iBlueBits(0),</div>\n\
<div class=\"line\">    m_bFacetedMode(false)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ImmediateModeRenderer::~ImmediateModeRenderer( <span class=\"keywordtype\">void</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::Serialize( Stream &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    MeshRenderer::Serialize( s );</div>\n\
<div class=\"line\">    s == m_bWireframeMode == m_bFacetedMode == m_bTCMode == m_pMesh;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetTextureCoordinateMode( <span class=\"keywordtype\">bool</span> bMode ) </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    m_bTCMode = bMode;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetMesh( Mesh *pMesh )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    m_pMesh = pMesh;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<span class=\"stringliteral\">&quot;ImmediateModeRenderer::SetMesh called\\n&quot;</span>);     </div>\n\
<div class=\"line\">    <span class=\"comment\">// create a mesh partition node here???</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    OnMeshChange();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::Render( <span class=\"keyword\">const</span> Selector *pSelector, <span class=\"keywordtype\">bool</span> bSkipMaterial, <span class=\"keyword\">const</span> Camera *pCamera, <span class=\"keyword\">const</span> AxisAlignedBoundingBox &amp;bUV )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!m_pMesh)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MeshPartitioning *pPart = m_pMesh-&gt;ChildByClass&lt;MeshPartitioning&gt;(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!pPart)       pPart = m_pMesh-&gt;ChildByClass&lt;MeshPartitioning&gt;(<span class=\"keyword\">true</span>); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!bSkipMaterial &amp;&amp; m_pMesh-&gt;Geometry()-&gt;Material())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        m_pMesh-&gt;Geometry()-&gt;Material()-&gt;Activate(m_pMesh, AxisAlignedBoundingBox(), <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_qt.html#ae03fc486532da08d7b21f636fe547548ade7bfe6c82a2aaaee276f752cdadf3a9\">Color::white</a> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPolygonMode(<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#ad66599a87de5c80f8c174da72080a811\">GL_FRONT</a>, m_ePolygonMode);</div>\n\
<div class=\"line\">    glShadeModel( GL_SMOOTH );</div>\n\
<div class=\"line\">    <span class=\"comment\">//glEnable(GL_NORMALIZE);</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeTriangular)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !m_bWireframeMode )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glBegin(<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a6079e7a02a59adad65eb953d9482b1ed\">GL_TRIANGLES</a>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef PARTITIONING</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> part = pPart-&gt;GetFacePartition( ii );</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3ea846f998d64f079b86052b6c4193a8\">color</a> = (part != <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mesh_8h.html#a483b0a38edf0c10ef4a7cb633dc8a9fc\">INVALID_ID</a>) ? pPart-&gt;GetPartitionBlindInt( part ) : 0xff000000;</div>\n\
<div class=\"line\">                glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;color );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">                renderTriangle(ii);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            glEnd();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glBegin( <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a4ecc64682046ef517e86a18d9acbed1e\">GL_LINE_STRIP</a> );</div>\n\
<div class=\"line\">                renderTriangle(ii);</div>\n\
<div class=\"line\">                glEnd();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeQuadric)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !m_bWireframeMode )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glBegin(GL_QUADS);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ii = 0; ii &lt; m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef PARTITIONING</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> part  = pPart-&gt;GetFacePartition( ii );</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3ea846f998d64f079b86052b6c4193a8\">color</a> = (part != <a class=\"code\" href=\"#!/url=./cpp_ref/mesh_8h.html#a483b0a38edf0c10ef4a7cb633dc8a9fc\">INVALID_ID</a>) ? pPart-&gt;GetPartitionBlindInt( part ) : 0xff000000;</div>\n\
<div class=\"line\">                glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;color );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">                renderQuad(ii);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            glEnd();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glBegin( <a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a4ecc64682046ef517e86a18d9acbed1e\">GL_LINE_STRIP</a> );</div>\n\
<div class=\"line\">                renderQuad(ii);</div>\n\
<div class=\"line\">                glEnd();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!bSkipMaterial &amp;&amp; m_pMesh-&gt;Geometry()-&gt;Material())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        m_pMesh-&gt;Geometry()-&gt;Material()-&gt;Deactivate();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Render auxilary data for debugging purposes</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef AUX_DATA</span></div>\n\
<div class=\"line\">    glColor3f(0,0,0);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeTriangular)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        renderTriangleNormals();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeQuadric)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        renderQuadNormals();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> encode(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> faceIndex, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> vertexIndex)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a> = faceIndex;</div>\n\
<div class=\"line\">    value = value &lt;&lt; 2;</div>\n\
<div class=\"line\">    value = value | vertexIndex;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> decode(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a>, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;faceIndex, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;vertexIndex)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    vertexIndex = 3 &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    faceIndex = 0xfffffffc &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a>;</div>\n\
<div class=\"line\">    faceIndex = faceIndex &gt;&gt; 2;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::DecodeData( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iData, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;iFaceIndex, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;iVertexIndex )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iFaceVertex = 0;</div>\n\
<div class=\"line\">    decode(iData, iFaceIndex, iFaceVertex);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeTriangular)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        iVertexIndex = m_pMesh-&gt;TriangleIndex(iFaceIndex, iFaceVertex);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeQuadric)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        iVertexIndex = m_pMesh-&gt;QuadIndex(iFaceIndex, iFaceVertex);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ImmediateModeRenderer::RenderData(<span class=\"keyword\">const</span> Selector *pSelector, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iStart, <span class=\"keyword\">const</span> Camera *pCamera)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    glDisable(<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#aa290e8f9ee6f6862778355aa22bb0b13\">GL_BLEND</a>);</div>\n\
<div class=\"line\">    glDisable(<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a7a806235dc2a717e813e92583ad99b34\">GL_DITHER</a>);</div>\n\
<div class=\"line\">    glDisable(GL_FOG);</div>\n\
<div class=\"line\">    glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\">    glDisable(GL_TEXTURE_1D);</div>\n\
<div class=\"line\">    glDisable (<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#ad4de17abefa73fa2ef53379f73b734be\">GL_TEXTURE_2D</a>); </div>\n\
<div class=\"line\">    glShadeModel( GL_FLAT );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glEnable(GL_COLOR_MATERIAL);</div>\n\
<div class=\"line\">    glColorMaterial(<a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#ad66599a87de5c80f8c174da72080a811\">GL_FRONT</a>, GL_AMBIENT_AND_DIFFUSE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_pMesh-&gt;Visible() || (m_pMesh-&gt;Geometry() &amp;&amp; m_pMesh-&gt;Geometry()-&gt;ActiveLevel()-&gt;ID() != m_pMesh-&gt;ID()) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> iStart;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iColorCount = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeTriangular)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBegin(<a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a6079e7a02a59adad65eb953d9482b1ed\">GL_TRIANGLES</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">long</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            iColorCount = encode(ii, 0);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(ii, 0));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            iColorCount = encode(ii, 1);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(ii, 1));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            iColorCount = encode(ii, 2);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(ii, 2));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (m_pMesh-&gt;Type() == Mesh::typeQuadric)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBegin(GL_QUADS);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">long</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            iColorCount = encode(ii, 0);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;QuadVertexPosition(ii, 0));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            iColorCount = encode(ii, 1);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;QuadVertexPosition(ii, 1));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            iColorCount = encode(ii, 2);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;QuadVertexPosition(ii, 2));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            iColorCount = encode(ii, 3);</div>\n\
<div class=\"line\">            glColor4ubv( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>*) &amp;iColorCount );</div>\n\
<div class=\"line\">            glVertex3fv(m_pMesh-&gt;QuadVertexPosition(ii, 3));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glShadeModel( GL_SMOOTH );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> iColorCount;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::renderTriangle(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a6468fe3bfff24d7d939eb21863b88268\">index</a>)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv( m_pMesh-&gt;FaceNormal(index) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;TriangleVertexNormal(index,0));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;TriangleVertexTC(index,0).u, m_pMesh-&gt;TriangleVertexTC(index,0).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(index, 0));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;TriangleVertexNormal(index,1));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;TriangleVertexTC(index,1).u, m_pMesh-&gt;TriangleVertexTC(index,1).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(index, 1));</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;TriangleVertexNormal(index,2));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;TriangleVertexTC(index,2).u, m_pMesh-&gt;TriangleVertexTC(index,2).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(index, 2));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( m_bWireframeMode )</div>\n\
<div class=\"line\">        glVertex3fv(m_pMesh-&gt;TriangleVertexPosition(index, 0));</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::renderTriangleNormals()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    Vector point, normal;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glLineWidth(2.0<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glBegin(<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a532ed3612eae8eaed8a7a53ecd7a28f3\">GL_LINES</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> = 2.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        point = m_pMesh-&gt;TriangleVertexPosition(ii, 0);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;TriangleVertexNormal(ii,0)*<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        point = m_pMesh-&gt;TriangleVertexPosition(ii, 1);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;TriangleVertexNormal(ii, 1)*<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        point = m_pMesh-&gt;TriangleVertexPosition(ii, 2);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;TriangleVertexNormal(ii, 2)*<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::renderQuad(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> index)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv( m_pMesh-&gt;FaceNormal(index) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;QuadVertexNormal(index, 0));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;QuadVertexTC(index,0).u, m_pMesh-&gt;QuadVertexTC(index,0).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;QuadVertexPosition(index, 0));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;QuadVertexNormal(index, 1));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;QuadVertexTC(index,1).u, m_pMesh-&gt;QuadVertexTC(index,1).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;QuadVertexPosition(index, 1));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;QuadVertexNormal(index, 2));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;QuadVertexTC(index,2).u, m_pMesh-&gt;QuadVertexTC(index,2).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;QuadVertexPosition(index, 2));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !m_bFacetedMode )</div>\n\
<div class=\"line\">        glNormal3fv(m_pMesh-&gt;QuadVertexNormal(index, 3));</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_bTCMode)</div>\n\
<div class=\"line\">        glTexCoord2f(m_pMesh-&gt;QuadVertexTC(index,3).u, m_pMesh-&gt;QuadVertexTC(index,3).v);</div>\n\
<div class=\"line\">    glVertex3fv(m_pMesh-&gt;QuadVertexPosition(index, 3));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( m_bWireframeMode )</div>\n\
<div class=\"line\">        glVertex3fv(m_pMesh-&gt;QuadVertexPosition(index, 0));</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::renderQuadNormals()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    Vector point, normal;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glLineWidth(2.0<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glBegin(<a class=\"code\" href=\"#!/url=./cpp_ref/qglfunctions_8h.html#a532ed3612eae8eaed8a7a53ecd7a28f3\">GL_LINES</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> s = 2.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ii=0; ii&lt;m_pMesh-&gt;FaceCount(); ii++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        point = m_pMesh-&gt;QuadVertexPosition(ii, 0);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;QuadVertexNormal(ii,0)*<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        point = m_pMesh-&gt;QuadVertexPosition(ii, 1);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;QuadVertexNormal(ii, 1)*<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        point = m_pMesh-&gt;QuadVertexPosition(ii, 2);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;QuadVertexNormal(ii, 2)*<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        point = m_pMesh-&gt;QuadVertexPosition(ii, 3);</div>\n\
<div class=\"line\">        normal = m_pMesh-&gt;QuadVertexNormal(ii, 3)*<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertex3fv(point);</div>\n\
<div class=\"line\">        glVertex3fv((point + normal));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::OnVertexPositionChange( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iVertexIndex, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iFaceIndex )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::OnVertexStateChange( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iVertexIndex, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iFaceIndex )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::OnMeshChange( MeshChange eChange )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetLODLevel(<span class=\"keywordtype\">float</span> fLevel)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">float</span> ImmediateModeRenderer::LODLevel()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> AxisAlignedBoundingBox &amp;ImmediateModeRenderer::ActiveUVArea()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> m_ActiveUVArea;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetWireFrameMode(<span class=\"keywordtype\">bool</span> bMode)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    m_bWireframeMode = bMode;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> ImmediateModeRenderer::WireFrameMode()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> m_bWireframeMode;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetColorMode(<span class=\"keywordtype\">bool</span> bMode)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetVertexColor(Color vVertexColor)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Color ImmediateModeRenderer::VertexColor()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> Color(0,0,0,0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> ImmediateModeRenderer::ColorMode()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetWireLevel(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ImmediateModeRenderer::WireLevel()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> ImmediateModeRenderer::TextureCoordinateMode()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetTangentMode(<span class=\"keywordtype\">bool</span> bMode)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> ImmediateModeRenderer::TangentMode()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::SetFacetedMode( <span class=\"keywordtype\">bool</span> bMode )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    m_bFacetedMode = bMode;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> ImmediateModeRenderer::FacetedMode()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> m_bFacetedMode;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::OnNodeEvent(<span class=\"keyword\">const</span> Attribute &amp;, <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a8d88d2a841f889dace76ffcd8d6b06da\">NodeEventType</a>)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ImmediateModeRenderer::Initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";