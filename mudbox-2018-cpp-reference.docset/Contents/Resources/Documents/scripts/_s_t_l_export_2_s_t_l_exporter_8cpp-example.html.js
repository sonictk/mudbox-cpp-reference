var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>STLExport/STLExporter.cpp</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_s_t_l_export_2_s_t_l_exporter_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>STLExport/STLExporter.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">STLExport/STLExporter.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2009 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/ </span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: Sample stereolithography (STL) file exporter.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   Limitations </span></div>\n\
<div class=\"line\"><span class=\"comment\">//     - requires a single, closed mesh to work. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//     - There will be no decimation done, so the mesh will be saved at full density, </span></div>\n\
<div class=\"line\"><span class=\"comment\">//         which might be too big for stereolithography shops. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//     - Self-intersecting meshes </span></div>\n\
<div class=\"line\"><span class=\"comment\">//         are not corrected, which may cause problems with the resulting STL file.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CREATED: February 2009</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;vector&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;algorithm&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;iostream&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;fstream&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;assert.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;QtCore/QFile&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(JAMBUILD)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html\">Mudbox/mudbox.h</a>&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/Mudbox/mudbox.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;utility.hpp&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html\">mudbox</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Creates a record in the memory to describe the plugin to Mudbox</span></div>\n\
<div class=\"line\"><a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#afa2df46a730e8fc8bceb9410c0ff6838\">MB_PLUGIN</a>( <span class=\"stringliteral\">&quot;STL Exporter&quot;</span>, <span class=\"stringliteral\">&quot;STL file export plugin&quot;</span>, <span class=\"stringliteral\">&quot;Autodesk&quot;</span>, <span class=\"stringliteral\">&quot;http://www.mudbox3d.com&quot;</span>, 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Main plug-in declaration</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>STLExporter : </div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span> BaseExporter, </div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span> Singleton&lt;STLExporter&gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The following line is used to expose RTTI information to Mudbox</span></div>\n\
<div class=\"line\">    <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a431009564592a24e5f46f5df421131a1\">DECLARE_CLASS</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Default constructor, does nothing.</span></div>\n\
<div class=\"line\">    STLExporter() {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Return the supported file extension(s) by the plugin.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> Extension()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> <span class=\"stringliteral\">&quot;stl&quot;</span>; };</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> Description()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> <span class=\"stringliteral\">&quot;Stereolithography File&quot;</span>; };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;FileExtension&gt;</a> SupportedExtensions( <span class=\"keywordtype\">void</span> )<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;FileExtension&gt;</a> ret;</div>\n\
<div class=\"line\">        ret.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ab32da790af34509a87008eacf308e3f6\">push_back</a>(FileExtension(<span class=\"stringliteral\">&quot;stl&quot;</span>, <span class=\"stringliteral\">&quot;Stereolithography File&quot;</span>));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> ret;</div>\n\
<div class=\"line\">    }         </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> Export( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFormat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (GetNumMeshes() == 0)</div>\n\
<div class=\"line\">            <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>(<span class=\"stringliteral\">&quot;There are no meshes to export&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (GetNumMeshes() &gt; 1) </div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>(<span class=\"stringliteral\">&quot;Multiple meshes can not be exported to this format&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> Mesh* m = GetMesh(0);</div>\n\
<div class=\"line\">     </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (IsMeshOpen(m)) </div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a78d8bd615152a82160d33c6063f0e308\">MB_ERROR</a>(<span class=\"stringliteral\">&quot;Only continuous meshes can be exported&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file.html\">QFile</a> ofile(sFileName);</div>\n\
<div class=\"line\">        ofile.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file.html#adcd410c2440691603b71d467538b275e\">open</a>(<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_i_o_device.html#a45153e842709466a940079b370bd6f40a068f8c22e7e359d9000e7d3a4a809b4c\">QFile::WriteOnly</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> uint STL_HEADER_SIZE = 80;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span> header[STL_HEADER_SIZE] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">        std::fill(header, header + STL_HEADER_SIZE, 0);</div>\n\
<div class=\"line\">        ofile.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_i_o_device.html#a490732db814fa870020f0c957b638296\">write</a>(header, STL_HEADER_SIZE);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// output the total number of faces</span></div>\n\
<div class=\"line\">        uint32 cnt = m-&gt;FaceCount();        </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m-&gt;Type() == <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a461eba4998b5d5dac48d6102c8c63beca390d96966d786eb4e11035e9439f755e\">Mesh::typeQuadric</a> ) </div>\n\
<div class=\"line\">            cnt *= 2;</div>\n\
<div class=\"line\">        WriteUInt32(ofile, cnt);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Write each triangle face to file</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( m-&gt;Type() == <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a461eba4998b5d5dac48d6102c8c63beca8458eba8ae564ca5f914a2f93eedeaed\">Mesh::typeTriangular</a> ) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( uint i = 0; i &lt; m-&gt;FaceCount(); ++i ) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Write the normal vector</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> Vector&amp; normal = m-&gt;FaceNormal(i);</div>\n\
<div class=\"line\">                WriteVectorFloat32(ofile, normal);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// three sets of three 32-bit floats specifying the position of each vertex</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (uint j = 0; j &lt; 3; ++j) {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> Vector&amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> = m-&gt;TriangleVertexPosition( i, j );</div>\n\
<div class=\"line\">                    WriteVectorFloat32(ofile, v);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// 2-byte padding </span></div>\n\
<div class=\"line\">                WriteUInt16(ofile, 0);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// Write each quadric face as two triangles</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( m-&gt;Type() == <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a461eba4998b5d5dac48d6102c8c63beca390d96966d786eb4e11035e9439f755e\">Mesh::typeQuadric</a> ) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( uint i = 0; i &lt; m-&gt;FaceCount(); ++i ) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Write the normal vector</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> Vector&amp; normal = m-&gt;FaceNormal(i);</div>\n\
<div class=\"line\">                WriteVectorFloat32(ofile, normal);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Get first sub-triangle using corners 0, 2, and 3 of quad</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (uint j = 0; j &lt; 4; ++j) {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (j != 1) {</div>\n\
<div class=\"line\">                        <span class=\"keyword\">const</span> Vector&amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> = m-&gt;QuadVertexPosition( i, j );</div>\n\
<div class=\"line\">                        WriteVectorFloat32(ofile, v);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// 2-byte padding </span></div>\n\
<div class=\"line\">                WriteUInt16(ofile, 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Write the normal vector again (both triangles share the same normal)</span></div>\n\
<div class=\"line\">                WriteVectorFloat32(ofile, normal);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Get second sub-triangle using corners 0, 1, and 2 of quad</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (uint j = 0; j &lt; 4; ++j) {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (j != 3) {</div>\n\
<div class=\"line\">                        <span class=\"keyword\">const</span> Vector&amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> = m-&gt;QuadVertexPosition( i, j );</div>\n\
<div class=\"line\">                        WriteVectorFloat32(ofile, v);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// 2-byte padding </span></div>\n\
<div class=\"line\">                WriteUInt16(ofile, 0);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ofile.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file.html#a47feccb1873356363e4d0e302bc3822c\">close</a>();</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// RTTI information </span></div>\n\
<div class=\"line\"><a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a1d51ad935ab5d26fe95dff62601b602c\">IMPLEMENT_CLASS</a>( STLExporter, Exporter, <span class=\"stringliteral\">&quot;STL Exporter&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">} <span class=\"comment\">// namespace mudbox</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";