var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>CurveBrush/CurveCreator.cpp</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_curve_brush_2_curve_creator_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>CurveBrush/CurveCreator.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">CurveBrush/CurveCreator.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#include &quot;CurveCreator.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;QtCore/QVector&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/math_8h.html\">math.h</a>&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a1d51ad935ab5d26fe95dff62601b602c\">IMPLEMENT_CLASS</a>( CurveCreator, BrushOperation, <span class=\"stringliteral\">&quot;CurveCreator&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt; Store&lt; Vector &gt;</a>* &gt; gLines;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt; Store&lt;Vector&gt;</a>* &gt;&amp; CurveCreator::Lines() { <span class=\"keywordflow\">return</span> gLines; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CurveCreator::CurveCreator() :</div>\n\
<div class=\"line\">m_iCurrentCurve( -1 ),</div>\n\
<div class=\"line\">m_iDoState( 0 ), m_fSTimes(this, <span class=\"stringliteral\">&quot;Smooth&quot;</span>, 0, 100, 1, 0) </div>\n\
<div class=\"line\">{   </div>\n\
<div class=\"line\">    m_fSTimes.SetValue(20);</div>\n\
<div class=\"line\">    m_fSTimes.SetVisible(<span class=\"keyword\">true</span>); </div>\n\
<div class=\"line\">    iLastFaceIndex = -1;</div>\n\
<div class=\"line\">    iFirstPointIndex = -1;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CurveCreator::BeginStroke( Mesh *, <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_qt.html#a80f90997871cd543ddb0bf8d282becdd\">Modifier</a>, TriggerType )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// start a new curve</span></div>\n\
<div class=\"line\">    gLines.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ab32da790af34509a87008eacf308e3f6\">push_back</a>( <span class=\"keyword\">new</span> Store&lt;Vector&gt; );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// indicate we are in the middle of doing the operation.</span></div>\n\
<div class=\"line\">    m_iDoState = 0;</div>\n\
<div class=\"line\">    m_iCurrentCurve = gLines.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>() - 1;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CurveCreator::EndStroke( <span class=\"keywordtype\">void</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( gLines.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;ItemCount() == 0 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// we can get here if the user does a mouse click</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// with no mouse movement. since we don&#39;t want empty</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// curves in the array, remove the last one we added.</span></div>\n\
<div class=\"line\">        m_iCurrentCurve = -1; </div>\n\
<div class=\"line\">        gLines.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#a058bda4957df6a97b1ea6c9fd783f672\">pop_back</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (iFirstPointIndex &gt;= 0 &amp;&amp; iLastFaceIndex &gt;= 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> iEndPointIndex = gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;ItemCount() - 1;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (iEndPointIndex - iFirstPointIndex + 1 &gt;= 3 &amp;&amp; m_fSTimes)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> iPCount = iEndPointIndex - iFirstPointIndex + 1;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;Vector&gt;</a> aP(iPCount);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> iS = 0; iS &lt; m_fSTimes; ++iS)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = iFirstPointIndex + 1; i &lt; iEndPointIndex; ++i) </div>\n\
<div class=\"line\">                    aP[i - iFirstPointIndex] = (gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i-1) + gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i) </div>\n\
<div class=\"line\">                    + gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i) + gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i+1)) * 0.25f; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = iFirstPointIndex + 1; i &lt; iEndPointIndex; ++i) </div>\n\
<div class=\"line\">                    gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i) = aP[i - iFirstPointIndex]; </div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } </div>\n\
<div class=\"line\">    }    </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    iLastFaceIndex = -1;</div>\n\
<div class=\"line\">    iFirstPointIndex = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// treat this as an undoable operation.</span></div>\n\
<div class=\"line\">    <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;DoOperation( <span class=\"keyword\">this</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Redraw();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CurveCreator::AddPatch( <span class=\"keyword\">const</span> SurfacePoint *, <span class=\"keyword\">const</span> Vector &amp;, <span class=\"keywordtype\">float</span>, <span class=\"keywordtype\">float</span>, <span class=\"keywordtype\">float</span>, AxisAlignedBoundingBox &amp; )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CurveCreator::MouseMove( <span class=\"keywordtype\">float</span> fX, <span class=\"keywordtype\">float</span> fY, <span class=\"keywordtype\">float</span> , <span class=\"keywordtype\">float</span> , AxisAlignedBoundingBox &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>, <span class=\"keywordtype\">float</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// determine where the user clicked in 3d space</span></div>\n\
<div class=\"line\">    SurfacePoint pp;</div>\n\
<div class=\"line\">    ViewPort *pVPp = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;ViewPort();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Scene()-&gt;ActiveCamera()-&gt;Pick( fX*pVPp-&gt;Width(), fY*pVPp-&gt;Height(), pp ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;Add( pp.WorldPosition() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// local smoothing which  only smooth the polylines on the same face, supposing the face is flat,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// which means the smoothed points are still on face/mesh.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// when the curve brush moves from face 1 to face 2, smooth the polylines of face 1.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// when the curve brush stops, smoothe polylines of the last face, this is done in CurveCreator::EndStroke().</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (iLastFaceIndex == -1 || iFirstPointIndex == -1)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            iLastFaceIndex = pp.m_iFaceIndex;</div>\n\
<div class=\"line\">            iFirstPointIndex = 0;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (iFirstPointIndex &gt;= 0 &amp;&amp; iLastFaceIndex &gt;= 0 &amp;&amp;</div>\n\
<div class=\"line\">            pp.m_iFaceIndex != iLastFaceIndex)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> iEndPointIndex = gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;ItemCount() - 2;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (iEndPointIndex - iFirstPointIndex + 1 &gt;= 3 &amp;&amp; m_fSTimes)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> iPCount = iEndPointIndex - iFirstPointIndex + 1;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;Vector&gt;</a> aP(iPCount);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> iS = 0; iS &lt; m_fSTimes; ++iS)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = iFirstPointIndex + 1; i &lt; iEndPointIndex; ++i) </div>\n\
<div class=\"line\">                        aP[i - iFirstPointIndex] = (gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i-1) + gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i) </div>\n\
<div class=\"line\">                        + gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i) + gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i+1)) * 0.25f; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = iFirstPointIndex + 1; i &lt; iEndPointIndex; ++i) </div>\n\
<div class=\"line\">                        gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;operator[](i) = aP[i - iFirstPointIndex]; </div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            iFirstPointIndex = gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>()-&gt;ItemCount() - 1;</div>\n\
<div class=\"line\">            iLastFaceIndex = pp.m_iFaceIndex;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// expand the dirty region of the viewport</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">int</span> i = 0; i &lt; gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>(); ++i )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; gLines[i]-&gt;ItemCount(); ++j )</div>\n\
<div class=\"line\">            a.Extend( gLines[i]-&gt;operator[](j) );</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> CurveCreator::ExecuteAndInvert( <span class=\"keywordtype\">void</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( m_iDoState == 0 )   <span class=\"comment\">// this is do</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        m_iLine.Clear();</div>\n\
<div class=\"line\">        m_iDoState = 1;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( m_iDoState == 1 ) <span class=\"comment\">// this is undo</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( m_iCurrentCurve != -1 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Store&lt;Vector&gt;* pLine = gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#af71e6c1eccbc12e9339c00a86a981a43\">back</a>();</div>\n\
<div class=\"line\">            m_iLine = *pLine;</div>\n\
<div class=\"line\">            gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#a058bda4957df6a97b1ea6c9fd783f672\">pop_back</a>();</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> pLine;</div>\n\
<div class=\"line\">            pLine = 0;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        m_iDoState = 2;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( m_iDoState == 2 )  <span class=\"comment\">// this is redo</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( m_iCurrentCurve != -1 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Store&lt;Vector&gt;* pNewLine = <span class=\"keyword\">new</span> Store&lt;Vector&gt;;</div>\n\
<div class=\"line\">            *pNewLine = m_iLine;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            gLines.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ab32da790af34509a87008eacf308e3f6\">push_back</a>( pNewLine );</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        m_iDoState = 1;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Redraw();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CurveCreator::Serialize( Stream &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// this method saves undo data</span></div>\n\
<div class=\"line\">    s == m_iCurrentCurve == m_iLine == m_iDoState;</div>\n\
<div class=\"line\">};</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";