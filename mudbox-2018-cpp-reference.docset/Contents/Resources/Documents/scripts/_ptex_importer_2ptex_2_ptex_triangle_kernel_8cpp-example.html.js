var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>PtexImporter/ptex/PtexTriangleKernel.cpp</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_ptex_importer_2ptex_2_ptex_triangle_kernel_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>PtexImporter/ptex/PtexTriangleKernel.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">PtexImporter/ptex/PtexTriangleKernel.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">/* </span></div>\n\
<div class=\"line\"><span class=\"comment\">PTEX SOFTWARE</span></div>\n\
<div class=\"line\"><span class=\"comment\">Copyright 2009 Disney Enterprises, Inc.  All rights reserved</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">Redistribution and use in source and binary forms, with or without</span></div>\n\
<div class=\"line\"><span class=\"comment\">modification, are permitted provided that the following conditions are</span></div>\n\
<div class=\"line\"><span class=\"comment\">met:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">  * Redistributions of source code must retain the above copyright</span></div>\n\
<div class=\"line\"><span class=\"comment\">    notice, this list of conditions and the following disclaimer.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">  * Redistributions in binary form must reproduce the above copyright</span></div>\n\
<div class=\"line\"><span class=\"comment\">    notice, this list of conditions and the following disclaimer in</span></div>\n\
<div class=\"line\"><span class=\"comment\">    the documentation and/or other materials provided with the</span></div>\n\
<div class=\"line\"><span class=\"comment\">    distribution.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">  * The names &quot;Disney&quot;, &quot;Walt Disney Pictures&quot;, &quot;Walt Disney Animation</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Studios&quot; or the names of its contributors may NOT be used to</span></div>\n\
<div class=\"line\"><span class=\"comment\">    endorse or promote products derived from this software without</span></div>\n\
<div class=\"line\"><span class=\"comment\">    specific prior written permission from Walt Disney Pictures.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">Disclaimer: THIS SOFTWARE IS PROVIDED BY WALT DISNEY PICTURES AND</span></div>\n\
<div class=\"line\"><span class=\"comment\">CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,</span></div>\n\
<div class=\"line\"><span class=\"comment\">BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS</span></div>\n\
<div class=\"line\"><span class=\"comment\">FOR A PARTICULAR PURPOSE, NONINFRINGEMENT AND TITLE ARE DISCLAIMED.</span></div>\n\
<div class=\"line\"><span class=\"comment\">IN NO EVENT SHALL WALT DISNEY PICTURES, THE COPYRIGHT HOLDER OR</span></div>\n\
<div class=\"line\"><span class=\"comment\">CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,</span></div>\n\
<div class=\"line\"><span class=\"comment\">EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,</span></div>\n\
<div class=\"line\"><span class=\"comment\">PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR</span></div>\n\
<div class=\"line\"><span class=\"comment\">PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND BASED ON ANY</span></div>\n\
<div class=\"line\"><span class=\"comment\">THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>\n\
<div class=\"line\"><span class=\"comment\">(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></div>\n\
<div class=\"line\"><span class=\"comment\">OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PtexPlatform.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PtexUtils.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PtexHalf.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PtexTriangleKernel.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span>{</div>\n\
<div class=\"line\">    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">double</span> gaussian(<span class=\"keywordtype\">double</span> x_squared)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a281421b881aa7a1266842b73a3bc7655\">scale</a> = -0.5 * (PtexTriangleKernelWidth * PtexTriangleKernelWidth);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> exp(scale * x_squared);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span>{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// apply to 1..4 channels (unrolled channel loop) of packed data (nTxChan==nChan)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the ellipse equation, Q, is calculated via finite differences (Heckbert &#39;89 pg 57)</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> nChan&gt;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> Apply(PtexTriangleKernelIter&amp; k, <span class=\"keywordtype\">double</span>* result, <span class=\"keywordtype\">void</span>* <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a2cc7c8468af76cf855e1755c27945693\">data</a>, <span class=\"keywordtype\">int</span> <span class=\"comment\">/*nChan*/</span>, <span class=\"keywordtype\">int</span> <span class=\"comment\">/*nTxChan*/</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> nTxChan = nChan;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> DDQ = 2*k.A;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> vi = k.v1; vi != k.v2; vi++) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> xw = k.rowlen - vi;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> x1 = <a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8fa4ae5e2b2ef3e57a2bde9530581904\">PtexUtils::max</a>(k.u1, xw-k.w2);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> x2 = PtexUtils::min(k.u2, xw-k.w1);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> U = x1 - k.u;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> V = vi - k.v;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> DQ = k.A*(2*U+1)+k.B*V;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> Q = k.A*U*U + (k.B*U + k.C*V)*V;</div>\n\
<div class=\"line\">        T* <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> = (T*)data + (vi * k.rowlen + x1) * nTxChan;</div>\n\
<div class=\"line\">        T* pEnd = p + (x2-x1)*nTxChan;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (; p &lt; pEnd; p += nTxChan) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (Q &lt; 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> weight = gaussian(Q)*k.wscale;</div>\n\
<div class=\"line\">            k.weight += weight;</div>\n\
<div class=\"line\">            PtexUtils::VecAccum&lt;T,nChan&gt;()(result, p, weight);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        Q += DQ;</div>\n\
<div class=\"line\">        DQ += DDQ;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// apply to 1..4 channels (unrolled channel loop) w/ pixel stride</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> nChan&gt;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> ApplyS(PtexTriangleKernelIter&amp; k, <span class=\"keywordtype\">double</span>* result, <span class=\"keywordtype\">void</span>* data, <span class=\"keywordtype\">int</span> <span class=\"comment\">/*nChan*/</span>, <span class=\"keywordtype\">int</span> nTxChan)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> DDQ = 2*k.A;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> vi = k.v1; vi != k.v2; vi++) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> xw = k.rowlen - vi;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> x1 = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8fa4ae5e2b2ef3e57a2bde9530581904\">PtexUtils::max</a>(k.u1, xw-k.w2);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> x2 = PtexUtils::min(k.u2, xw-k.w1);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> U = x1 - k.u;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> V = vi - k.v;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> DQ = k.A*(2*U+1)+k.B*V;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> Q = k.A*U*U + (k.B*U + k.C*V)*V;</div>\n\
<div class=\"line\">        T* p = (T*)data + (vi * k.rowlen + x1) * nTxChan;</div>\n\
<div class=\"line\">        T* pEnd = p + (x2-x1)*nTxChan;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (; p &lt; pEnd; p += nTxChan) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (Q &lt; 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> weight = gaussian(Q)*k.wscale;</div>\n\
<div class=\"line\">            k.weight += weight;</div>\n\
<div class=\"line\">            PtexUtils::VecAccum&lt;T,nChan&gt;()(result, p, weight);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        Q += DQ;</div>\n\
<div class=\"line\">        DQ += DDQ;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// apply to N channels (general case)</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T&gt;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> ApplyN(PtexTriangleKernelIter&amp; k, <span class=\"keywordtype\">double</span>* result, <span class=\"keywordtype\">void</span>* data, <span class=\"keywordtype\">int</span> nChan, <span class=\"keywordtype\">int</span> nTxChan)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> DDQ = 2*k.A;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> vi = k.v1; vi != k.v2; vi++) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> xw = k.rowlen - vi;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> x1 = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8fa4ae5e2b2ef3e57a2bde9530581904\">PtexUtils::max</a>(k.u1, xw-k.w2);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> x2 = PtexUtils::min(k.u2, xw-k.w1);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> U = x1 - k.u;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> V = vi - k.v;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> DQ = k.A*(2*U+1)+k.B*V;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> Q = k.A*U*U + (k.B*U + k.C*V)*V;</div>\n\
<div class=\"line\">        T* p = (T*)data + (vi * k.rowlen + x1) * nTxChan;</div>\n\
<div class=\"line\">        T* pEnd = p + (x2-x1)*nTxChan;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (; p &lt; pEnd; p += nTxChan) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (Q &lt; 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> weight = gaussian(Q)*k.wscale;</div>\n\
<div class=\"line\">            k.weight += weight;</div>\n\
<div class=\"line\">            PtexUtils::VecAccumN&lt;T&gt;()(result, p, nChan, weight);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        Q += DQ;</div>\n\
<div class=\"line\">        DQ += DDQ;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">PtexTriangleKernelIter::ApplyFn</div>\n\
<div class=\"line\">PtexTriangleKernelIter::applyFunctions[] = {</div>\n\
<div class=\"line\">    <span class=\"comment\">// nChan == nTxChan</span></div>\n\
<div class=\"line\">    ApplyN&lt;uint8_t&gt;,  ApplyN&lt;uint16_t&gt;,  ApplyN&lt;PtexHalf&gt;,  ApplyN&lt;float&gt;,</div>\n\
<div class=\"line\">    Apply&lt;uint8_t,1&gt;, Apply&lt;uint16_t,1&gt;, Apply&lt;PtexHalf,1&gt;, Apply&lt;float,1&gt;,</div>\n\
<div class=\"line\">    Apply&lt;uint8_t,2&gt;, Apply&lt;uint16_t,2&gt;, Apply&lt;PtexHalf,2&gt;, Apply&lt;float,2&gt;,</div>\n\
<div class=\"line\">    Apply&lt;uint8_t,3&gt;, Apply&lt;uint16_t,3&gt;, Apply&lt;PtexHalf,3&gt;, Apply&lt;float,3&gt;,</div>\n\
<div class=\"line\">    Apply&lt;uint8_t,4&gt;, Apply&lt;uint16_t,4&gt;, Apply&lt;PtexHalf,4&gt;, Apply&lt;float,4&gt;,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// nChan != nTxChan (need pixel stride)</span></div>\n\
<div class=\"line\">    ApplyN&lt;uint8_t&gt;,   ApplyN&lt;uint16_t&gt;,   ApplyN&lt;PtexHalf&gt;,   ApplyN&lt;float&gt;,</div>\n\
<div class=\"line\">    ApplyS&lt;uint8_t,1&gt;, ApplyS&lt;uint16_t,1&gt;, ApplyS&lt;PtexHalf,1&gt;, ApplyS&lt;float,1&gt;,</div>\n\
<div class=\"line\">    ApplyS&lt;uint8_t,2&gt;, ApplyS&lt;uint16_t,2&gt;, ApplyS&lt;PtexHalf,2&gt;, ApplyS&lt;float,2&gt;,</div>\n\
<div class=\"line\">    ApplyS&lt;uint8_t,3&gt;, ApplyS&lt;uint16_t,3&gt;, ApplyS&lt;PtexHalf,3&gt;, ApplyS&lt;float,3&gt;,</div>\n\
<div class=\"line\">    ApplyS&lt;uint8_t,4&gt;, ApplyS&lt;uint16_t,4&gt;, ApplyS&lt;PtexHalf,4&gt;, ApplyS&lt;float,4&gt;,</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> PtexTriangleKernelIter::applyConst(<span class=\"keywordtype\">double</span>* <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a92034251bfd455d524a9b5610cddba00\">dst</a>, <span class=\"keywordtype\">void</span>* data, DataType dt, <span class=\"keywordtype\">int</span> nChan)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// iterate over texel locations and calculate weight as if texture weren&#39;t const</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> DDQ = 2*A;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> vi = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0779c3b73f9aa3a0ac5b0139b5d291d9\">v1</a>; vi != <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a9a09a1837922b2b806f4589096a52049\">v2</a>; vi++) {</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> xw = rowlen - vi;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> x1 = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8fa4ae5e2b2ef3e57a2bde9530581904\">PtexUtils::max</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ab296853c9d55bfdc62cda6c50d1b4781\">u1</a>, xw-<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a1ca5aca787be24213d9591fdf074b094\">w2</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> x2 = PtexUtils::min(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a1c6bf6fa786a04b729b30e56d68474ef\">u2</a>, xw-<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ab5b747bf5adb1f9134337c30b9a4ce84\">w1</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> U = x1 - u;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> V = vi - <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> DQ = A*(2*U+1)+B*V;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> Q = A*U*U + (B*U + C*V)*V;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a> = x1; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a> &lt; x2; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a>++) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (Q &lt; 1) {</div>\n\
<div class=\"line\">        weight += gaussian(Q)*wscale;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        Q += DQ;</div>\n\
<div class=\"line\">        DQ += DDQ;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// apply weight to single texel value</span></div>\n\
<div class=\"line\">    PtexUtils::applyConst(weight, dst, data, dt, nChan);</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";