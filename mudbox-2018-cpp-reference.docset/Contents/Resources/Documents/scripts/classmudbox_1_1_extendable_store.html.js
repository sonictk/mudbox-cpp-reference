var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>ExtendableStore&lt; T &gt; Class Template Reference</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classmudbox_1_1_extendable_store.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>ExtendableStore&lt; T &gt; Class Template Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">ExtendableStore&lt; T &gt; Class Template Reference</div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"classmudbox_1_1_extendable_store.html#pub-methods\">Public Member Functions</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><h3>template&lt;typename T&gt;<br>\n\
class mudbox::ExtendableStore&lt; T &gt;</h3>\n\
\n\
<p>This class is similar to <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a>, except that adding elements to the end of the array is guaranteed to be a constant-time operation. </p>\n\
<p>Random access is also constant-time, although slightly slower than the regular <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\" title=\"Simple array class. \">Store</a> class. Use this class only when you need to add several elements to the array quickly. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00688\">688</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
</div><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:aa19b9a28d195a55a50bf1757d2fb0262\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#aa19b9a28d195a55a50bf1757d2fb0262\">ExtendableStore</a> ()</td></tr>\n\
<tr class=\"separator:aa19b9a28d195a55a50bf1757d2fb0262\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6b0e440e9fb0c255dd0ca9f039bee82a\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a6b0e440e9fb0c255dd0ca9f039bee82a\">~ExtendableStore</a> ()</td></tr>\n\
<tr class=\"separator:a6b0e440e9fb0c255dd0ca9f039bee82a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1c179c3d1d1263b5510ef110a0bc1eed\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">ItemCount</a> () const </td></tr>\n\
<tr class=\"memdesc:a1c179c3d1d1263b5510ef110a0bc1eed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the number of items in the array.  <a href=\"classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1c179c3d1d1263b5510ef110a0bc1eed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0912faedfac9f48527fd343aca3937c4\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a0912faedfac9f48527fd343aca3937c4\">SetItemCount</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iCount)</td></tr>\n\
<tr class=\"memdesc:a0912faedfac9f48527fd343aca3937c4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Sets the logical size of the array.  <a href=\"classmudbox_1_1_extendable_store.html#a0912faedfac9f48527fd343aca3937c4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0912faedfac9f48527fd343aca3937c4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa71d36872f416feaa853788a7a7a7ef8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#aa71d36872f416feaa853788a7a7a7ef8\">Clear</a> ()</td></tr>\n\
<tr class=\"memdesc:aa71d36872f416feaa853788a7a7a7ef8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Clears the array and deallocates its memory.  <a href=\"classmudbox_1_1_extendable_store.html#aa71d36872f416feaa853788a7a7a7ef8\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa71d36872f416feaa853788a7a7a7ef8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4d729f6a3d40bc34f37255b398ba74db\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a4d729f6a3d40bc34f37255b398ba74db\">Add</a> (const T &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</td></tr>\n\
<tr class=\"memdesc:a4d729f6a3d40bc34f37255b398ba74db\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds a new item to the array, increasing the array size by 1.  <a href=\"classmudbox_1_1_extendable_store.html#a4d729f6a3d40bc34f37255b398ba74db\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4d729f6a3d40bc34f37255b398ba74db\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a787cd434cc2d2eff769054efe42fb606\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a787cd434cc2d2eff769054efe42fb606\">Extend</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"memdesc:a787cd434cc2d2eff769054efe42fb606\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Extends the logical size of the array.  <a href=\"classmudbox_1_1_extendable_store.html#a787cd434cc2d2eff769054efe42fb606\">More...</a><br></td></tr>\n\
<tr class=\"separator:a787cd434cc2d2eff769054efe42fb606\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a953492f4de4bbb4e83021773b5befc77\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a953492f4de4bbb4e83021773b5befc77\">Fill</a> (T cPattern)</td></tr>\n\
<tr class=\"memdesc:a953492f4de4bbb4e83021773b5befc77\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Fills the array with a specified element.  <a href=\"classmudbox_1_1_extendable_store.html#a953492f4de4bbb4e83021773b5befc77\">More...</a><br></td></tr>\n\
<tr class=\"separator:a953492f4de4bbb4e83021773b5befc77\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a40a056cae4c35215c49b49307d5c1824\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a40a056cae4c35215c49b49307d5c1824\">IndexOf</a> (const T &amp;pValue) const </td></tr>\n\
<tr class=\"memdesc:a40a056cae4c35215c49b49307d5c1824\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the first index of the element equal to pValue.  <a href=\"classmudbox_1_1_extendable_store.html#a40a056cae4c35215c49b49307d5c1824\">More...</a><br></td></tr>\n\
<tr class=\"separator:a40a056cae4c35215c49b49307d5c1824\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab4092106dbd9d0e6f5504dc0e2a161bc\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">T &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#ab4092106dbd9d0e6f5504dc0e2a161bc\">Last</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>)</td></tr>\n\
<tr class=\"memdesc:ab4092106dbd9d0e6f5504dc0e2a161bc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the last item in the array, or 0 if the array is empty.  <a href=\"classmudbox_1_1_extendable_store.html#ab4092106dbd9d0e6f5504dc0e2a161bc\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab4092106dbd9d0e6f5504dc0e2a161bc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab9e4c2a129a9b185634fe9a2bf45c8f0\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">T &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#ab9e4c2a129a9b185634fe9a2bf45c8f0\">operator[]</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex)</td></tr>\n\
<tr class=\"separator:ab9e4c2a129a9b185634fe9a2bf45c8f0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2a004d926a6672f7d03598fa075baad6\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const T &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a2a004d926a6672f7d03598fa075baad6\">operator[]</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iIndex) const </td></tr>\n\
<tr class=\"separator:a2a004d926a6672f7d03598fa075baad6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2498295173eb5e339945b7be1297ed9b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a2498295173eb5e339945b7be1297ed9b\">Serialize</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>)</td></tr>\n\
<tr class=\"separator:a2498295173eb5e339945b7be1297ed9b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"aa19b9a28d195a55a50bf1757d2fb0262\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html\">ExtendableStore</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00702\">702</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00702\"></a><span class=\"lineno\">  702</span>&#160;                      :</div>\n\
<div class=\"line\"><a name=\"l00703\"></a><span class=\"lineno\">  703</span>&#160;        m_iBlockItemCount(16384),</div>\n\
<div class=\"line\"><a name=\"l00704\"></a><span class=\"lineno\">  704</span>&#160;        m_iBlockPow(14),</div>\n\
<div class=\"line\"><a name=\"l00705\"></a><span class=\"lineno\">  705</span>&#160;        m_iBlockMask(0x3FFF),</div>\n\
<div class=\"line\"><a name=\"l00706\"></a><span class=\"lineno\">  706</span>&#160;        m_iLogicalItemCount(0),</div>\n\
<div class=\"line\"><a name=\"l00707\"></a><span class=\"lineno\">  707</span>&#160;        m_iAlignment(16)</div>\n\
<div class=\"line\"><a name=\"l00708\"></a><span class=\"lineno\">  708</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00709\"></a><span class=\"lineno\">  709</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l00710\"></a><span class=\"lineno\">  710</span>&#160;    };</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6b0e440e9fb0c255dd0ca9f039bee82a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">~<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html\">ExtendableStore</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00712\">712</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00713\"></a><span class=\"lineno\">  713</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00714\"></a><span class=\"lineno\">  714</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#aa71d36872f416feaa853788a7a7a7ef8\">Clear</a>();</div>\n\
<div class=\"line\"><a name=\"l00715\"></a><span class=\"lineno\">  715</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_aa71d36872f416feaa853788a7a7a7ef8\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#aa71d36872f416feaa853788a7a7a7ef8\">mudbox::ExtendableStore::Clear</a></div><div class=\"ttdeci\">void Clear()</div><div class=\"ttdoc\">Clears the array and deallocates its memory. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00730\">array.h:730</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a1c179c3d1d1263b5510ef110a0bc1eed\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> ItemCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the number of items in the array. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00718\">718</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00718\"></a><span class=\"lineno\">  718</span>&#160;{ <span class=\"keywordflow\">return</span> m_iLogicalItemCount; }</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0912faedfac9f48527fd343aca3937c4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> SetItemCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iCount</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Sets the logical size of the array. </p>\n\
<p>Returns <b>true</b> if successful.</p>\n\
<p>If the new size is smaller than the current size, items at the end of the array will be discarded. If the new size is larger, then a new memory block will be allocated. In this case, the existing items will only be copied to the new block only if bKeepContent is set to true. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iCount</td><td>The new size of the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00725\">725</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00727\"></a><span class=\"lineno\">  727</span>&#160;          { <span class=\"keywordflow\">if</span>( iCount == 0 ) <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#aa71d36872f416feaa853788a7a7a7ef8\">Clear</a>(); <span class=\"keywordflow\">else</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a787cd434cc2d2eff769054efe42fb606\">Extend</a>( iCount-1 ); m_iLogicalItemCount = iCount; }</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_a787cd434cc2d2eff769054efe42fb606\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a787cd434cc2d2eff769054efe42fb606\">mudbox::ExtendableStore::Extend</a></div><div class=\"ttdeci\">void Extend(unsigned int iIndex)</div><div class=\"ttdoc\">Extends the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00755\">array.h:755</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_aa71d36872f416feaa853788a7a7a7ef8\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#aa71d36872f416feaa853788a7a7a7ef8\">mudbox::ExtendableStore::Clear</a></div><div class=\"ttdeci\">void Clear()</div><div class=\"ttdoc\">Clears the array and deallocates its memory. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00730\">array.h:730</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa71d36872f416feaa853788a7a7a7ef8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Clear </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Clears the array and deallocates its memory. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00730\">730</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00731\"></a><span class=\"lineno\">  731</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00732\"></a><span class=\"lineno\">  732</span>&#160;        m_iLogicalItemCount = 0;</div>\n\
<div class=\"line\"><a name=\"l00733\"></a><span class=\"lineno\">  733</span>&#160;        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00734\"></a><span class=\"lineno\">  734</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00735\"></a><span class=\"lineno\">  735</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a57c5bc3234d9fcda56a9641fb53535a6\">Block::AlignedFree</a>( (<span class=\"keywordtype\">void</span>*)m_aBlocks[i] );</div>\n\
<div class=\"line\"><a name=\"l00736\"></a><span class=\"lineno\">  736</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00737\"></a><span class=\"lineno\">  737</span>&#160;        m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">Clear</a>();</div>\n\
<div class=\"line\"><a name=\"l00738\"></a><span class=\"lineno\">  738</span>&#160;    }</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_block_html_a57c5bc3234d9fcda56a9641fb53535a6\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a57c5bc3234d9fcda56a9641fb53535a6\">mudbox::Block::AlignedFree</a></div><div class=\"ttdeci\">static void AlignedFree(void *pData)</div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a9a6b1665af166fd6553bed3bb0cc46ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a9a6b1665af166fd6553bed3bb0cc46ba\">mudbox::Store::Clear</a></div><div class=\"ttdeci\">void Clear(bool bDestruct=false)</div><div class=\"ttdoc\">Clears the array and deallocates its memory. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00394\">array.h:394</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4d729f6a3d40bc34f37255b398ba74db\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Add </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const T &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>t</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Adds a new item to the array, increasing the array size by 1. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">t</td><td>The element to be added to the end of the array </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00741\">741</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00744\"></a><span class=\"lineno\">  744</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00745\"></a><span class=\"lineno\">  745</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a1f2d7f8147412c43ba2303a56f97ee73\">c</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">ItemCount</a>();</div>\n\
<div class=\"line\"><a name=\"l00746\"></a><span class=\"lineno\">  746</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a787cd434cc2d2eff769054efe42fb606\">Extend</a>(c);</div>\n\
<div class=\"line\"><a name=\"l00747\"></a><span class=\"lineno\">  747</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#ab9e4c2a129a9b185634fe9a2bf45c8f0\">operator[]</a>(c) = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>;</div>\n\
<div class=\"line\"><a name=\"l00748\"></a><span class=\"lineno\">  748</span>&#160;    }</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a1f2d7f8147412c43ba2303a56f97ee73\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a1f2d7f8147412c43ba2303a56f97ee73\">c</a></div><div class=\"ttdeci\">const GLubyte * c</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05419\">GLee.h:5419</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_a787cd434cc2d2eff769054efe42fb606\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a787cd434cc2d2eff769054efe42fb606\">mudbox::ExtendableStore::Extend</a></div><div class=\"ttdeci\">void Extend(unsigned int iIndex)</div><div class=\"ttdoc\">Extends the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00755\">array.h:755</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_a1c179c3d1d1263b5510ef110a0bc1eed\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">mudbox::ExtendableStore::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount() const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00718\">array.h:718</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_ab9e4c2a129a9b185634fe9a2bf45c8f0\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#ab9e4c2a129a9b185634fe9a2bf45c8f0\">mudbox::ExtendableStore::operator[]</a></div><div class=\"ttdeci\">T &amp; operator[](unsigned int iIndex)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00804\">array.h:804</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a653819996e713edf9c01a5b564199189\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a></div><div class=\"ttdeci\">GLdouble GLdouble t</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01181\">GLee.h:1181</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a787cd434cc2d2eff769054efe42fb606\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Extend </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Extends the logical size of the array. </p>\n\
<p>If the specified size is not larger than the current array, nothing will happen. Otherwise the logical size of the array will be extended to one more than the specified index. New memory will be allocated as necessary to hold the new items. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">iIndex</td><td>The array index to extend to. For example, if you specify 7, the new array will contain 8 elements (indexed 0 to 7). </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00755\">755</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00758\"></a><span class=\"lineno\">  758</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00759\"></a><span class=\"lineno\">  759</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iBlock = iIndex &gt;&gt; m_iBlockPow;</div>\n\
<div class=\"line\"><a name=\"l00760\"></a><span class=\"lineno\">  760</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00761\"></a><span class=\"lineno\">  761</span>&#160;        <span class=\"comment\">// extend the logical item count to include iIndex</span></div>\n\
<div class=\"line\"><a name=\"l00762\"></a><span class=\"lineno\">  762</span>&#160;        m_iLogicalItemCount = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a990360af7f7250cdaec94844b139fa74\">Max</a>( iIndex + 1, m_iLogicalItemCount );</div>\n\
<div class=\"line\"><a name=\"l00763\"></a><span class=\"lineno\">  763</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00764\"></a><span class=\"lineno\">  764</span>&#160;        <span class=\"comment\">// if this block has already be allocated we are done.</span></div>\n\
<div class=\"line\"><a name=\"l00765\"></a><span class=\"lineno\">  765</span>&#160;        <span class=\"keywordflow\">if</span>( iBlock &lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>() )</div>\n\
<div class=\"line\"><a name=\"l00766\"></a><span class=\"lineno\">  766</span>&#160;            <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"><a name=\"l00767\"></a><span class=\"lineno\">  767</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00768\"></a><span class=\"lineno\">  768</span>&#160;        <span class=\"comment\">// allocate enough blocks to include iIndex</span></div>\n\
<div class=\"line\"><a name=\"l00769\"></a><span class=\"lineno\">  769</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ic = m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>();</div>\n\
<div class=\"line\"><a name=\"l00770\"></a><span class=\"lineno\">  770</span>&#160;        m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a01237ce058a74898d2f83f0b76930321\">Extend</a>( iBlock );</div>\n\
<div class=\"line\"><a name=\"l00771\"></a><span class=\"lineno\">  771</span>&#160;        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = ic; i &lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00772\"></a><span class=\"lineno\">  772</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00773\"></a><span class=\"lineno\">  773</span>&#160;            T* pNewBlock = (T*)<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">Block::AlignedAlloc</a>( <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount, m_iAlignment );</div>\n\
<div class=\"line\"><a name=\"l00774\"></a><span class=\"lineno\">  774</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a24f4fe4a32c8501c3cae26db72954a30\">MB_ASSERT</a>( ((<span class=\"keywordtype\">size_t</span>) pNewBlock) % m_iAlignment == 0 );</div>\n\
<div class=\"line\"><a name=\"l00775\"></a><span class=\"lineno\">  775</span>&#160;            m_aBlocks[i] = pNewBlock;</div>\n\
<div class=\"line\"><a name=\"l00776\"></a><span class=\"lineno\">  776</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00777\"></a><span class=\"lineno\">  777</span>&#160;    }</div>\n\
<div class=\"ttc\" id=\"mudbox_8h_html_a24f4fe4a32c8501c3cae26db72954a30\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/mudbox_8h.html#a24f4fe4a32c8501c3cae26db72954a30\">MB_ASSERT</a></div><div class=\"ttdeci\">#define MB_ASSERT(condition)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00073\">mudbox.h:73</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_a990360af7f7250cdaec94844b139fa74\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#a990360af7f7250cdaec94844b139fa74\">mudbox::Max</a></div><div class=\"ttdeci\">type Max(type a, type b)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00186\">mudbox.h:186</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a01237ce058a74898d2f83f0b76930321\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a01237ce058a74898d2f83f0b76930321\">mudbox::Store::Extend</a></div><div class=\"ttdeci\">bool Extend(unsigned int iIndex)</div><div class=\"ttdoc\">Extends the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00440\">array.h:440</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_block_html_acfa810281d26ab75bf5dfeff5510d6c1\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">mudbox::Block::AlignedAlloc</a></div><div class=\"ttdeci\">static void * AlignedAlloc(size_t iBytes, unsigned int iAlignment)</div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a953492f4de4bbb4e83021773b5befc77\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Fill </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">T&#160;</td>\n\
          <td class=\"paramname\"><em>cPattern</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Fills the array with a specified element. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">cPattern</td><td>The value to which every item in the array will be set </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00780\">780</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00783\"></a><span class=\"lineno\">  783</span>&#160;    { </div>\n\
<div class=\"line\"><a name=\"l00784\"></a><span class=\"lineno\">  784</span>&#160;        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>(); i++ )</div>\n\
<div class=\"line\"><a name=\"l00785\"></a><span class=\"lineno\">  785</span>&#160;            <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; m_iBlockItemCount; ++j )</div>\n\
<div class=\"line\"><a name=\"l00786\"></a><span class=\"lineno\">  786</span>&#160;                m_aBlocks[i][j] = cPattern;</div>\n\
<div class=\"line\"><a name=\"l00787\"></a><span class=\"lineno\">  787</span>&#160;    }</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a40a056cae4c35215c49b49307d5c1824\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> IndexOf </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const T &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>pValue</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the first index of the element equal to pValue. </p>\n\
<p>Note this method requires that operator == be defined for the type of data stored in the array. Returns the index of the first occurance of pValue or 0xffffffff if the array does not contain pValue. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00793\">793</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00794\"></a><span class=\"lineno\">  794</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00795\"></a><span class=\"lineno\">  795</span>&#160;        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">ItemCount</a>(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00796\"></a><span class=\"lineno\">  796</span>&#160;            <span class=\"keywordflow\">if</span>( (*<span class=\"keyword\">this</span>)[i] == pValue )</div>\n\
<div class=\"line\"><a name=\"l00797\"></a><span class=\"lineno\">  797</span>&#160;                <span class=\"keywordflow\">return</span> i;</div>\n\
<div class=\"line\"><a name=\"l00798\"></a><span class=\"lineno\">  798</span>&#160;        <span class=\"keywordflow\">return</span> 0xffffffff;</div>\n\
<div class=\"line\"><a name=\"l00799\"></a><span class=\"lineno\">  799</span>&#160;    };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_a1c179c3d1d1263b5510ef110a0bc1eed\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">mudbox::ExtendableStore::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount() const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00718\">array.h:718</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab4092106dbd9d0e6f5504dc0e2a161bc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">T&amp; Last </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the last item in the array, or 0 if the array is empty. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00802\">802</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00802\"></a><span class=\"lineno\">  802</span>&#160;{ <span class=\"keywordflow\">if</span> ( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">ItemCount</a>() ) <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#ab9e4c2a129a9b185634fe9a2bf45c8f0\">operator []</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">ItemCount</a>()-1 ); <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">throw</span> <span class=\"keyword\">new</span> Error( <span class=\"stringliteral\">&quot;ExtenableStore::LastItem called for an empty store&quot;</span> ); };</div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_a1c179c3d1d1263b5510ef110a0bc1eed\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a1c179c3d1d1263b5510ef110a0bc1eed\">mudbox::ExtendableStore::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount() const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00718\">array.h:718</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_ab9e4c2a129a9b185634fe9a2bf45c8f0\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#ab9e4c2a129a9b185634fe9a2bf45c8f0\">mudbox::ExtendableStore::operator[]</a></div><div class=\"ttdeci\">T &amp; operator[](unsigned int iIndex)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00804\">array.h:804</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab9e4c2a129a9b185634fe9a2bf45c8f0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">T&amp; operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00804\">804</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00805\"></a><span class=\"lineno\">  805</span>&#160;    { </div>\n\
<div class=\"line\"><a name=\"l00806\"></a><span class=\"lineno\">  806</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iBlock = iIndex &gt;&gt; m_iBlockPow;</div>\n\
<div class=\"line\"><a name=\"l00807\"></a><span class=\"lineno\">  807</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iBlockItem = iIndex &amp; m_iBlockMask;</div>\n\
<div class=\"line\"><a name=\"l00808\"></a><span class=\"lineno\">  808</span>&#160;        <span class=\"keywordflow\">return</span> m_aBlocks[ iBlock ][iBlockItem];</div>\n\
<div class=\"line\"><a name=\"l00809\"></a><span class=\"lineno\">  809</span>&#160;    }</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2a004d926a6672f7d03598fa075baad6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const T&amp; operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iIndex</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html#l00811\">811</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00812\"></a><span class=\"lineno\">  812</span>&#160;    { </div>\n\
<div class=\"line\"><a name=\"l00813\"></a><span class=\"lineno\">  813</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iBlock = iIndex &gt;&gt; m_iBlockPow;</div>\n\
<div class=\"line\"><a name=\"l00814\"></a><span class=\"lineno\">  814</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iBlockItem = iIndex &amp; m_iBlockMask;</div>\n\
<div class=\"line\"><a name=\"l00815\"></a><span class=\"lineno\">  815</span>&#160;        <span class=\"keywordflow\">return</span> m_aBlocks[ iBlock ][iBlockItem];</div>\n\
<div class=\"line\"><a name=\"l00816\"></a><span class=\"lineno\">  816</span>&#160;    }</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2498295173eb5e339945b7be1297ed9b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a> Serialize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>s</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/stream_8h_source.html#l00331\">331</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/stream_8h_source.html\">stream.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00332\"></a><span class=\"lineno\">  332</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00333\"></a><span class=\"lineno\">  333</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == m_iBlockItemCount;</div>\n\
<div class=\"line\"><a name=\"l00334\"></a><span class=\"lineno\">  334</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == m_iBlockPow;</div>\n\
<div class=\"line\"><a name=\"l00335\"></a><span class=\"lineno\">  335</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == m_iBlockMask;</div>\n\
<div class=\"line\"><a name=\"l00336\"></a><span class=\"lineno\">  336</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == m_iLogicalItemCount;</div>\n\
<div class=\"line\"><a name=\"l00337\"></a><span class=\"lineno\">  337</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == m_iAlignment;</div>\n\
<div class=\"line\"><a name=\"l00338\"></a><span class=\"lineno\">  338</span>&#160;       </div>\n\
<div class=\"line\"><a name=\"l00339\"></a><span class=\"lineno\">  339</span>&#160;    <span class=\"keywordflow\">if</span>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.IsStoring() )</div>\n\
<div class=\"line\"><a name=\"l00340\"></a><span class=\"lineno\">  340</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00341\"></a><span class=\"lineno\">  341</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> &lt;&lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>();</div>\n\
<div class=\"line\"><a name=\"l00342\"></a><span class=\"lineno\">  342</span>&#160;        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00343\"></a><span class=\"lineno\">  343</span>&#160;           <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.Write( (<span class=\"keywordtype\">void</span>*)m_aBlocks[i], <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount );</div>\n\
<div class=\"line\"><a name=\"l00344\"></a><span class=\"lineno\">  344</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00345\"></a><span class=\"lineno\">  345</span>&#160;    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\"><a name=\"l00346\"></a><span class=\"lineno\">  346</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00347\"></a><span class=\"lineno\">  347</span>&#160;        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iC = 0;</div>\n\
<div class=\"line\"><a name=\"l00348\"></a><span class=\"lineno\">  348</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> &gt;&gt; iC;</div>\n\
<div class=\"line\"><a name=\"l00349\"></a><span class=\"lineno\">  349</span>&#160;        m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a>( iC );</div>\n\
<div class=\"line\"><a name=\"l00350\"></a><span class=\"lineno\">  350</span>&#160;        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aBlocks.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">ItemCount</a>(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00351\"></a><span class=\"lineno\">  351</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00352\"></a><span class=\"lineno\">  352</span>&#160;            m_aBlocks[i] = (T*)<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">Block::AlignedAlloc</a>( <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount, m_iAlignment );</div>\n\
<div class=\"line\"><a name=\"l00353\"></a><span class=\"lineno\">  353</span>&#160;            <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.Read( (<span class=\"keywordtype\">void</span>*)m_aBlocks[i], <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount );</div>\n\
<div class=\"line\"><a name=\"l00354\"></a><span class=\"lineno\">  354</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00355\"></a><span class=\"lineno\">  355</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00356\"></a><span class=\"lineno\">  356</span>&#160;}; </div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a478f851a51d23a98795488716e474907\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">mudbox::Store::SetItemCount</a></div><div class=\"ttdeci\">bool SetItemCount(unsigned int iSize, bool bKeepContent=false)</div><div class=\"ttdoc\">Sets the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">array.h:403</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a0b988bffaf1deb7d6968501bdb6872fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a0b988bffaf1deb7d6968501bdb6872fc\">mudbox::Store::ItemCount</a></div><div class=\"ttdeci\">unsigned int ItemCount(void) const </div><div class=\"ttdoc\">Returns the number of items in the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00645\">array.h:645</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_block_html_acfa810281d26ab75bf5dfeff5510d6c1\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">mudbox::Block::AlignedAlloc</a></div><div class=\"ttdeci\">static void * AlignedAlloc(size_t iBytes, unsigned int iAlignment)</div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>Mudbox/<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/array_8h_source.html\">array.h</a></li>\n\
<li>Mudbox/<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/stream_8h_source.html\">stream.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";