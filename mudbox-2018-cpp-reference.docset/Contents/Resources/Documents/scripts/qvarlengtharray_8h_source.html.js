var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>QtCore/qvarlengtharray.h Source File</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'qvarlengtharray_8h_source.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>QtCore/qvarlengtharray.h Source File</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>File&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/globals.html\"><span>File&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">qvarlengtharray.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<a href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><div class=\"line\"><a name=\"l00001\"></a><span class=\"lineno\">    1</span>&#160;<span class=\"comment\">/****************************************************************************</span></div>\n\
<div class=\"line\"><a name=\"l00002\"></a><span class=\"lineno\">    2</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00003\"></a><span class=\"lineno\">    3</span>&#160;<span class=\"comment\">** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).</span></div>\n\
<div class=\"line\"><a name=\"l00004\"></a><span class=\"lineno\">    4</span>&#160;<span class=\"comment\">** Contact: http://www.qt-project.org/legal</span></div>\n\
<div class=\"line\"><a name=\"l00005\"></a><span class=\"lineno\">    5</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00006\"></a><span class=\"lineno\">    6</span>&#160;<span class=\"comment\">** This file is part of the QtCore module of the Qt Toolkit.</span></div>\n\
<div class=\"line\"><a name=\"l00007\"></a><span class=\"lineno\">    7</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00008\"></a><span class=\"lineno\">    8</span>&#160;<span class=\"comment\">** $QT_BEGIN_LICENSE:LGPL$</span></div>\n\
<div class=\"line\"><a name=\"l00009\"></a><span class=\"lineno\">    9</span>&#160;<span class=\"comment\">** Commercial License Usage</span></div>\n\
<div class=\"line\"><a name=\"l00010\"></a><span class=\"lineno\">   10</span>&#160;<span class=\"comment\">** Licensees holding valid commercial Qt licenses may use this file in</span></div>\n\
<div class=\"line\"><a name=\"l00011\"></a><span class=\"lineno\">   11</span>&#160;<span class=\"comment\">** accordance with the commercial license agreement provided with the</span></div>\n\
<div class=\"line\"><a name=\"l00012\"></a><span class=\"lineno\">   12</span>&#160;<span class=\"comment\">** Software or, alternatively, in accordance with the terms contained in</span></div>\n\
<div class=\"line\"><a name=\"l00013\"></a><span class=\"lineno\">   13</span>&#160;<span class=\"comment\">** a written agreement between you and Digia.  For licensing terms and</span></div>\n\
<div class=\"line\"><a name=\"l00014\"></a><span class=\"lineno\">   14</span>&#160;<span class=\"comment\">** conditions see http://qt.digia.com/licensing.  For further information</span></div>\n\
<div class=\"line\"><a name=\"l00015\"></a><span class=\"lineno\">   15</span>&#160;<span class=\"comment\">** use the contact form at http://qt.digia.com/contact-us.</span></div>\n\
<div class=\"line\"><a name=\"l00016\"></a><span class=\"lineno\">   16</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00017\"></a><span class=\"lineno\">   17</span>&#160;<span class=\"comment\">** GNU Lesser General Public License Usage</span></div>\n\
<div class=\"line\"><a name=\"l00018\"></a><span class=\"lineno\">   18</span>&#160;<span class=\"comment\">** Alternatively, this file may be used under the terms of the GNU Lesser</span></div>\n\
<div class=\"line\"><a name=\"l00019\"></a><span class=\"lineno\">   19</span>&#160;<span class=\"comment\">** General Public License version 2.1 as published by the Free Software</span></div>\n\
<div class=\"line\"><a name=\"l00020\"></a><span class=\"lineno\">   20</span>&#160;<span class=\"comment\">** Foundation and appearing in the file LICENSE.LGPL included in the</span></div>\n\
<div class=\"line\"><a name=\"l00021\"></a><span class=\"lineno\">   21</span>&#160;<span class=\"comment\">** packaging of this file.  Please review the following information to</span></div>\n\
<div class=\"line\"><a name=\"l00022\"></a><span class=\"lineno\">   22</span>&#160;<span class=\"comment\">** ensure the GNU Lesser General Public License version 2.1 requirements</span></div>\n\
<div class=\"line\"><a name=\"l00023\"></a><span class=\"lineno\">   23</span>&#160;<span class=\"comment\">** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.</span></div>\n\
<div class=\"line\"><a name=\"l00024\"></a><span class=\"lineno\">   24</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00025\"></a><span class=\"lineno\">   25</span>&#160;<span class=\"comment\">** In addition, as a special exception, Digia gives you certain additional</span></div>\n\
<div class=\"line\"><a name=\"l00026\"></a><span class=\"lineno\">   26</span>&#160;<span class=\"comment\">** rights.  These rights are described in the Digia Qt LGPL Exception</span></div>\n\
<div class=\"line\"><a name=\"l00027\"></a><span class=\"lineno\">   27</span>&#160;<span class=\"comment\">** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.</span></div>\n\
<div class=\"line\"><a name=\"l00028\"></a><span class=\"lineno\">   28</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00029\"></a><span class=\"lineno\">   29</span>&#160;<span class=\"comment\">** GNU General Public License Usage</span></div>\n\
<div class=\"line\"><a name=\"l00030\"></a><span class=\"lineno\">   30</span>&#160;<span class=\"comment\">** Alternatively, this file may be used under the terms of the GNU</span></div>\n\
<div class=\"line\"><a name=\"l00031\"></a><span class=\"lineno\">   31</span>&#160;<span class=\"comment\">** General Public License version 3.0 as published by the Free Software</span></div>\n\
<div class=\"line\"><a name=\"l00032\"></a><span class=\"lineno\">   32</span>&#160;<span class=\"comment\">** Foundation and appearing in the file LICENSE.GPL included in the</span></div>\n\
<div class=\"line\"><a name=\"l00033\"></a><span class=\"lineno\">   33</span>&#160;<span class=\"comment\">** packaging of this file.  Please review the following information to</span></div>\n\
<div class=\"line\"><a name=\"l00034\"></a><span class=\"lineno\">   34</span>&#160;<span class=\"comment\">** ensure the GNU General Public License version 3.0 requirements will be</span></div>\n\
<div class=\"line\"><a name=\"l00035\"></a><span class=\"lineno\">   35</span>&#160;<span class=\"comment\">** met: http://www.gnu.org/copyleft/gpl.html.</span></div>\n\
<div class=\"line\"><a name=\"l00036\"></a><span class=\"lineno\">   36</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00037\"></a><span class=\"lineno\">   37</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00038\"></a><span class=\"lineno\">   38</span>&#160;<span class=\"comment\">** $QT_END_LICENSE$</span></div>\n\
<div class=\"line\"><a name=\"l00039\"></a><span class=\"lineno\">   39</span>&#160;<span class=\"comment\">**</span></div>\n\
<div class=\"line\"><a name=\"l00040\"></a><span class=\"lineno\">   40</span>&#160;<span class=\"comment\">****************************************************************************/</span></div>\n\
<div class=\"line\"><a name=\"l00041\"></a><span class=\"lineno\">   41</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00042\"></a><span class=\"lineno\">   42</span>&#160;<span class=\"preprocessor\">#ifndef QVARLENGTHARRAY_H</span></div>\n\
<div class=\"line\"><a name=\"l00043\"></a><span class=\"lineno\">   43</span>&#160;<span class=\"preprocessor\">#define QVARLENGTHARRAY_H</span></div>\n\
<div class=\"line\"><a name=\"l00044\"></a><span class=\"lineno\">   44</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00045\"></a><span class=\"lineno\">   45</span>&#160;<span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/qcontainerfwd_8h.html\">QtCore/qcontainerfwd.h</a>&gt;</span></div>\n\
<div class=\"line\"><a name=\"l00046\"></a><span class=\"lineno\">   46</span>&#160;<span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html\">QtCore/qglobal.h</a>&gt;</span></div>\n\
<div class=\"line\"><a name=\"l00047\"></a><span class=\"lineno\">   47</span>&#160;<span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/qalgorithms_8h.html\">QtCore/qalgorithms.h</a>&gt;</span></div>\n\
<div class=\"line\"><a name=\"l00048\"></a><span class=\"lineno\">   48</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00049\"></a><span class=\"lineno\">   49</span>&#160;<span class=\"preprocessor\">#include &lt;new&gt;</span></div>\n\
<div class=\"line\"><a name=\"l00050\"></a><span class=\"lineno\">   50</span>&#160;<span class=\"preprocessor\">#include &lt;string.h&gt;</span></div>\n\
<div class=\"line\"><a name=\"l00051\"></a><span class=\"lineno\">   51</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00052\"></a><span class=\"lineno\">   52</span>&#160;<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#a22466069bc24124bf4d749ca253f5e2b\">QT_BEGIN_HEADER</a></div>\n\
<div class=\"line\"><a name=\"l00053\"></a><span class=\"lineno\">   53</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00054\"></a><span class=\"lineno\">   54</span>&#160;<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#ae7344b820974b9f9f7cfedd5808bd3a0\">QT_BEGIN_NAMESPACE</a></div>\n\
<div class=\"line\"><a name=\"l00055\"></a><span class=\"lineno\">   55</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00056\"></a><span class=\"lineno\">   56</span>&#160;QT_MODULE(Core)</div>\n\
<div class=\"line\"><a name=\"l00057\"></a><span class=\"lineno\">   57</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00058\"></a><span class=\"lineno\">   58</span>&#160;template&lt;class T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00059\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_pod_list.html\">   59</a></span>&#160;class <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_pod_list.html\">QPodList</a>;</div>\n\
<div class=\"line\"><a name=\"l00060\"></a><span class=\"lineno\">   60</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00061\"></a><span class=\"lineno\">   61</span>&#160;<span class=\"comment\">// Prealloc = 256 by default, specified in qcontainerfwd.h</span></div>\n\
<div class=\"line\"><a name=\"l00062\"></a><span class=\"lineno\">   62</span>&#160;template&lt;class T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00063\"></a><span class=\"lineno\">   63</span>&#160;class <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray</a></div>\n\
<div class=\"line\"><a name=\"l00064\"></a><span class=\"lineno\">   64</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00065\"></a><span class=\"lineno\">   65</span>&#160;<span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"><a name=\"l00066\"></a><span class=\"lineno\">   66</span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keyword\">explicit</span> QVarLengthArray(<span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a> = 0);</div>\n\
<div class=\"line\"><a name=\"l00067\"></a><span class=\"lineno\">   67</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00068\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afa93d9ec919f6da31a4908f63fc57e39\">   68</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afa93d9ec919f6da31a4908f63fc57e39\">QVarLengthArray</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc&gt;</a> &amp;other)</div>\n\
<div class=\"line\"><a name=\"l00069\"></a><span class=\"lineno\">   69</span>&#160;        : <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>(Prealloc), <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>(0), ptr(reinterpret_cast&lt;T *&gt;(array))</div>\n\
<div class=\"line\"><a name=\"l00070\"></a><span class=\"lineno\">   70</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00071\"></a><span class=\"lineno\">   71</span>&#160;        append(other.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a4341d2f827b5e261162a4fa79f728271\">constData</a>(), other.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>());</div>\n\
<div class=\"line\"><a name=\"l00072\"></a><span class=\"lineno\">   72</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00073\"></a><span class=\"lineno\">   73</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00074\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a33f1b2115de3ba2901ce3ecab6d0aa23\">   74</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a33f1b2115de3ba2901ce3ecab6d0aa23\">~QVarLengthArray</a>() {</div>\n\
<div class=\"line\"><a name=\"l00075\"></a><span class=\"lineno\">   75</span>&#160;        <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00076\"></a><span class=\"lineno\">   76</span>&#160;            T *i = ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"><a name=\"l00077\"></a><span class=\"lineno\">   77</span>&#160;            <span class=\"keywordflow\">while</span> (i-- != ptr)</div>\n\
<div class=\"line\"><a name=\"l00078\"></a><span class=\"lineno\">   78</span>&#160;                i-&gt;~T();</div>\n\
<div class=\"line\"><a name=\"l00079\"></a><span class=\"lineno\">   79</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00080\"></a><span class=\"lineno\">   80</span>&#160;        <span class=\"keywordflow\">if</span> (ptr != reinterpret_cast&lt;T *&gt;(array))</div>\n\
<div class=\"line\"><a name=\"l00081\"></a><span class=\"lineno\">   81</span>&#160;            qFree(ptr);</div>\n\
<div class=\"line\"><a name=\"l00082\"></a><span class=\"lineno\">   82</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00083\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a192c6737a23777254fa4cfbd73e766eb\">   83</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a192c6737a23777254fa4cfbd73e766eb\">operator=</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc&gt;</a> &amp;other)</div>\n\
<div class=\"line\"><a name=\"l00084\"></a><span class=\"lineno\">   84</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00085\"></a><span class=\"lineno\">   85</span>&#160;        <span class=\"keywordflow\">if</span> (<span class=\"keyword\">this</span> != &amp;other) {</div>\n\
<div class=\"line\"><a name=\"l00086\"></a><span class=\"lineno\">   86</span>&#160;            clear();</div>\n\
<div class=\"line\"><a name=\"l00087\"></a><span class=\"lineno\">   87</span>&#160;            append(other.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a4341d2f827b5e261162a4fa79f728271\">constData</a>(), other.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>());</div>\n\
<div class=\"line\"><a name=\"l00088\"></a><span class=\"lineno\">   88</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00089\"></a><span class=\"lineno\">   89</span>&#160;        <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\"><a name=\"l00090\"></a><span class=\"lineno\">   90</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00091\"></a><span class=\"lineno\">   91</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00092\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afb97c3b96c74eb1f38e4266c8b587db6\">   92</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afb97c3b96c74eb1f38e4266c8b587db6\">removeLast</a>() {</div>\n\
<div class=\"line\"><a name=\"l00093\"></a><span class=\"lineno\">   93</span>&#160;        Q_ASSERT(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> &gt; 0);</div>\n\
<div class=\"line\"><a name=\"l00094\"></a><span class=\"lineno\">   94</span>&#160;        realloc(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> - 1, <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>);</div>\n\
<div class=\"line\"><a name=\"l00095\"></a><span class=\"lineno\">   95</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00096\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">   96</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; }</div>\n\
<div class=\"line\"><a name=\"l00097\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a0745638c9967e2ed90bc96c012288c55\">   97</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a0745638c9967e2ed90bc96c012288c55\">count</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; }</div>\n\
<div class=\"line\"><a name=\"l00098\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a479432127ee77145cc19d6a2d1590821\">   98</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a479432127ee77145cc19d6a2d1590821\">isEmpty</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == 0); }</div>\n\
<div class=\"line\"><a name=\"l00099\"></a><span class=\"lineno\">   99</span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> resize(<span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a>);</div>\n\
<div class=\"line\"><a name=\"l00100\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac8bb3912a3ce86b15842e79d0b421204\">  100</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>() { resize(0); }</div>\n\
<div class=\"line\"><a name=\"l00101\"></a><span class=\"lineno\">  101</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00102\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a104736719cd4e5f21c25705c77064dde\">  102</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a104736719cd4e5f21c25705c77064dde\">capacity</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>; }</div>\n\
<div class=\"line\"><a name=\"l00103\"></a><span class=\"lineno\">  103</span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> reserve(<span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a>);</div>\n\
<div class=\"line\"><a name=\"l00104\"></a><span class=\"lineno\">  104</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00105\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2a322a02b87eab70bf5d7d1f6e1b8842\">  105</a></span>&#160;    <span class=\"keyword\">inline</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2a322a02b87eab70bf5d7d1f6e1b8842\">operator[]</a>(<span class=\"keywordtype\">int</span> idx) {</div>\n\
<div class=\"line\"><a name=\"l00106\"></a><span class=\"lineno\">  106</span>&#160;        Q_ASSERT(idx &gt;= 0 &amp;&amp; idx &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>);</div>\n\
<div class=\"line\"><a name=\"l00107\"></a><span class=\"lineno\">  107</span>&#160;        <span class=\"keywordflow\">return</span> ptr[idx];</div>\n\
<div class=\"line\"><a name=\"l00108\"></a><span class=\"lineno\">  108</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00109\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a21e58a4115e3fe476f7a6677c14c54fa\">  109</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a21e58a4115e3fe476f7a6677c14c54fa\">operator[]</a>(<span class=\"keywordtype\">int</span> idx)<span class=\"keyword\"> const </span>{</div>\n\
<div class=\"line\"><a name=\"l00110\"></a><span class=\"lineno\">  110</span>&#160;        Q_ASSERT(idx &gt;= 0 &amp;&amp; idx &lt; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>);</div>\n\
<div class=\"line\"><a name=\"l00111\"></a><span class=\"lineno\">  111</span>&#160;        <span class=\"keywordflow\">return</span> ptr[idx];</div>\n\
<div class=\"line\"><a name=\"l00112\"></a><span class=\"lineno\">  112</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00113\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a496f65637ef0f79ab8ca294b71cc2365\">  113</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a496f65637ef0f79ab8ca294b71cc2365\">at</a>(<span class=\"keywordtype\">int</span> idx)<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> operator[](idx); }</div>\n\
<div class=\"line\"><a name=\"l00114\"></a><span class=\"lineno\">  114</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00115\"></a><span class=\"lineno\">  115</span>&#160;    T <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a>(<span class=\"keywordtype\">int</span> i) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00116\"></a><span class=\"lineno\">  116</span>&#160;    T <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a>(<span class=\"keywordtype\">int</span> i, <span class=\"keyword\">const</span> T &amp;defaultValue) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00117\"></a><span class=\"lineno\">  117</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00118\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac3da3864dc18a39794b18763448eac3a\">  118</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac3da3864dc18a39794b18763448eac3a\">append</a>(<span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>) {</div>\n\
<div class=\"line\"><a name=\"l00119\"></a><span class=\"lineno\">  119</span>&#160;        <span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> == <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>)   <span class=\"comment\">// i.e. s != 0</span></div>\n\
<div class=\"line\"><a name=\"l00120\"></a><span class=\"lineno\">  120</span>&#160;            realloc(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>&lt;&lt;1);</div>\n\
<div class=\"line\"><a name=\"l00121\"></a><span class=\"lineno\">  121</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> idx = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>++;</div>\n\
<div class=\"line\"><a name=\"l00122\"></a><span class=\"lineno\">  122</span>&#160;        <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00123\"></a><span class=\"lineno\">  123</span>&#160;            <span class=\"keyword\">new</span> (ptr + idx) T(t);</div>\n\
<div class=\"line\"><a name=\"l00124\"></a><span class=\"lineno\">  124</span>&#160;        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00125\"></a><span class=\"lineno\">  125</span>&#160;            ptr[idx] = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>;</div>\n\
<div class=\"line\"><a name=\"l00126\"></a><span class=\"lineno\">  126</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00127\"></a><span class=\"lineno\">  127</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00128\"></a><span class=\"lineno\">  128</span>&#160;    <span class=\"keywordtype\">void</span> append(<span class=\"keyword\">const</span> T *buf, <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a>);</div>\n\
<div class=\"line\"><a name=\"l00129\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a9ee7d1beac7fac15214df71e3cf562b4\">  129</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_s_s_e_8h.html#a48d936d9a8d7c3911d7a6978264d36ba\">operator&lt;&lt;</a>(<span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00130\"></a><span class=\"lineno\">  130</span>&#160;    { append(t); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; }</div>\n\
<div class=\"line\"><a name=\"l00131\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aad6c6f2f346db1420c02f21e588e32cc\">  131</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aad6c6f2f346db1420c02f21e588e32cc\">operator+=</a>(<span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00132\"></a><span class=\"lineno\">  132</span>&#160;    { append(t); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; }</div>\n\
<div class=\"line\"><a name=\"l00133\"></a><span class=\"lineno\">  133</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00134\"></a><span class=\"lineno\">  134</span>&#160;    <span class=\"keywordtype\">void</span> prepend(<span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>);</div>\n\
<div class=\"line\"><a name=\"l00135\"></a><span class=\"lineno\">  135</span>&#160;    <span class=\"keywordtype\">void</span> insert(<span class=\"keywordtype\">int</span> i, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>);</div>\n\
<div class=\"line\"><a name=\"l00136\"></a><span class=\"lineno\">  136</span>&#160;    <span class=\"keywordtype\">void</span> insert(<span class=\"keywordtype\">int</span> i, <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>);</div>\n\
<div class=\"line\"><a name=\"l00137\"></a><span class=\"lineno\">  137</span>&#160;    <span class=\"keywordtype\">void</span> replace(<span class=\"keywordtype\">int</span> i, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>);</div>\n\
<div class=\"line\"><a name=\"l00138\"></a><span class=\"lineno\">  138</span>&#160;    <span class=\"keywordtype\">void</span> <span class=\"keyword\">remove</span>(<span class=\"keywordtype\">int</span> i);</div>\n\
<div class=\"line\"><a name=\"l00139\"></a><span class=\"lineno\">  139</span>&#160;    <span class=\"keywordtype\">void</span> <span class=\"keyword\">remove</span>(<span class=\"keywordtype\">int</span> i, <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>);</div>\n\
<div class=\"line\"><a name=\"l00140\"></a><span class=\"lineno\">  140</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00141\"></a><span class=\"lineno\">  141</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00142\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a1699472936b80a88d3fc8096975d21b2\">  142</a></span>&#160;    <span class=\"keyword\">inline</span> T *<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a1699472936b80a88d3fc8096975d21b2\">data</a>() { <span class=\"keywordflow\">return</span> ptr; }</div>\n\
<div class=\"line\"><a name=\"l00143\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a92597b6ad54c8cebd6a987b7762eecfc\">  143</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keyword\">const</span> T *<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a92597b6ad54c8cebd6a987b7762eecfc\">data</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ptr; }</div>\n\
<div class=\"line\"><a name=\"l00144\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a4341d2f827b5e261162a4fa79f728271\">  144</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keyword\">const</span> T * <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a4341d2f827b5e261162a4fa79f728271\">constData</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ptr; }</div>\n\
<div class=\"line\"><a name=\"l00145\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aafd1e3ba4133ad908bdbc99c4b356e5f\">  145</a></span>&#160;    <span class=\"keyword\">typedef</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aafd1e3ba4133ad908bdbc99c4b356e5f\">size_type</a>;</div>\n\
<div class=\"line\"><a name=\"l00146\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a265a253612b46abed17c61b0a5e5ce30\">  146</a></span>&#160;    <span class=\"keyword\">typedef</span> T <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a265a253612b46abed17c61b0a5e5ce30\">value_type</a>;</div>\n\
<div class=\"line\"><a name=\"l00147\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ad25b518036b886d8f35a3c059301d007\">  147</a></span>&#160;    <span class=\"keyword\">typedef</span> value_type *<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ad25b518036b886d8f35a3c059301d007\">pointer</a>;</div>\n\
<div class=\"line\"><a name=\"l00148\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13c57dab17e2c903cadfa5e35ba84064\">  148</a></span>&#160;    <span class=\"keyword\">typedef</span> <span class=\"keyword\">const</span> value_type *<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13c57dab17e2c903cadfa5e35ba84064\">const_pointer</a>;</div>\n\
<div class=\"line\"><a name=\"l00149\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#abe8933d436779a43cb5c1896ff5f2918\">  149</a></span>&#160;    <span class=\"keyword\">typedef</span> value_type &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#abe8933d436779a43cb5c1896ff5f2918\">reference</a>;</div>\n\
<div class=\"line\"><a name=\"l00150\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afdb67657e63a66ed3fae7b0c9fd81b48\">  150</a></span>&#160;    <span class=\"keyword\">typedef</span> <span class=\"keyword\">const</span> value_type &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afdb67657e63a66ed3fae7b0c9fd81b48\">const_reference</a>;</div>\n\
<div class=\"line\"><a name=\"l00151\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a3e4e2cc8c6f17ec0affa4c223cea4e20\">  151</a></span>&#160;    <span class=\"keyword\">typedef</span> qptrdiff <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a3e4e2cc8c6f17ec0affa4c223cea4e20\">difference_type</a>;</div>\n\
<div class=\"line\"><a name=\"l00152\"></a><span class=\"lineno\">  152</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00153\"></a><span class=\"lineno\">  153</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00154\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a35c955cacac6aacaa1e82874b1628865\">  154</a></span>&#160;    <span class=\"keyword\">typedef</span> T* <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a35c955cacac6aacaa1e82874b1628865\">iterator</a>;</div>\n\
<div class=\"line\"><a name=\"l00155\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2fc97dce62b7053449cc868607540dba\">  155</a></span>&#160;    <span class=\"keyword\">typedef</span> <span class=\"keyword\">const</span> T* <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2fc97dce62b7053449cc868607540dba\">const_iterator</a>;</div>\n\
<div class=\"line\"><a name=\"l00156\"></a><span class=\"lineno\">  156</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00157\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ad69bd11391be1a1dba5c8202259664f8\">  157</a></span>&#160;    <span class=\"keyword\">inline</span> iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ad69bd11391be1a1dba5c8202259664f8\">begin</a>() { <span class=\"keywordflow\">return</span> ptr; }</div>\n\
<div class=\"line\"><a name=\"l00158\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aa4b02d4f1a8500fb07a551069060709f\">  158</a></span>&#160;    <span class=\"keyword\">inline</span> const_iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aa4b02d4f1a8500fb07a551069060709f\">begin</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ptr; }</div>\n\
<div class=\"line\"><a name=\"l00159\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aaa25233c49419c7ed8e29dca0a094e26\">  159</a></span>&#160;    <span class=\"keyword\">inline</span> const_iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aaa25233c49419c7ed8e29dca0a094e26\">constBegin</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ptr; }</div>\n\
<div class=\"line\"><a name=\"l00160\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#acad38d52497a975bfb6f2f6acd76631f\">  160</a></span>&#160;    <span class=\"keyword\">inline</span> iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#acad38d52497a975bfb6f2f6acd76631f\">end</a>() { <span class=\"keywordflow\">return</span> ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; }</div>\n\
<div class=\"line\"><a name=\"l00161\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a350132543d80a1c1e5be844e6d2878ea\">  161</a></span>&#160;    <span class=\"keyword\">inline</span> const_iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a350132543d80a1c1e5be844e6d2878ea\">end</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; }</div>\n\
<div class=\"line\"><a name=\"l00162\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a3bd3979af07c12a7df5841f3b7ec0025\">  162</a></span>&#160;    <span class=\"keyword\">inline</span> const_iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a3bd3979af07c12a7df5841f3b7ec0025\">constEnd</a>()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; }</div>\n\
<div class=\"line\"><a name=\"l00163\"></a><span class=\"lineno\">  163</span>&#160;    iterator insert(iterator before, <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a>);</div>\n\
<div class=\"line\"><a name=\"l00164\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13aab4c3c59bee655d8a08d41200a7ab\">  164</a></span>&#160;    <span class=\"keyword\">inline</span> iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13aab4c3c59bee655d8a08d41200a7ab\">insert</a>(iterator before, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a>) { <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13aab4c3c59bee655d8a08d41200a7ab\">insert</a>(before, 1, x); }</div>\n\
<div class=\"line\"><a name=\"l00165\"></a><span class=\"lineno\">  165</span>&#160;    iterator erase(iterator begin, iterator <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a432111147038972f06e049e18a837002\">end</a>);</div>\n\
<div class=\"line\"><a name=\"l00166\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#af7659d9799f06df763bf397101941dd7\">  166</a></span>&#160;    <span class=\"keyword\">inline</span> iterator <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#af7659d9799f06df763bf397101941dd7\">erase</a>(iterator pos) { <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#af7659d9799f06df763bf397101941dd7\">erase</a>(pos, pos+1); }</div>\n\
<div class=\"line\"><a name=\"l00167\"></a><span class=\"lineno\">  167</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00168\"></a><span class=\"lineno\">  168</span>&#160;<span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"><a name=\"l00169\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a827450b7639e7207851c619d203afd9c\">  169</a></span>&#160;    <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span>QPodList&lt;T, Prealloc&gt;;</div>\n\
<div class=\"line\"><a name=\"l00170\"></a><span class=\"lineno\">  170</span>&#160;    <span class=\"keywordtype\">void</span> realloc(<span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a>, <span class=\"keywordtype\">int</span> alloc);</div>\n\
<div class=\"line\"><a name=\"l00171\"></a><span class=\"lineno\">  171</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00172\"></a><span class=\"lineno\">  172</span>&#160;    <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a>;      <span class=\"comment\">// capacity</span></div>\n\
<div class=\"line\"><a name=\"l00173\"></a><span class=\"lineno\">  173</span>&#160;    <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;      <span class=\"comment\">// size</span></div>\n\
<div class=\"line\"><a name=\"l00174\"></a><span class=\"lineno\">  174</span>&#160;    T *ptr;     <span class=\"comment\">// data</span></div>\n\
<div class=\"line\"><a name=\"l00175\"></a><span class=\"lineno\">  175</span>&#160;    <span class=\"keyword\">union </span>{</div>\n\
<div class=\"line\"><a name=\"l00176\"></a><span class=\"lineno\">  176</span>&#160;        <span class=\"comment\">// ### Qt 5: Use &#39;Prealloc * sizeof(T)&#39; as array size</span></div>\n\
<div class=\"line\"><a name=\"l00177\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac28f1209e890e8106de168a2a3b07033\">  177</a></span>&#160;        <span class=\"keywordtype\">char</span> array[<span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a>) * (((Prealloc * <span class=\"keyword\">sizeof</span>(T)) / <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a>)) + 1)];</div>\n\
<div class=\"line\"><a name=\"l00178\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aa758555ca4ed2d808fc8ff804cdc1465\">  178</a></span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aa758555ca4ed2d808fc8ff804cdc1465\">q_for_alignment_1</a>;</div>\n\
<div class=\"line\"><a name=\"l00179\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2c3394cb8fe8c93286812a52f8f545e5\">  179</a></span>&#160;        <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2c3394cb8fe8c93286812a52f8f545e5\">q_for_alignment_2</a>;</div>\n\
<div class=\"line\"><a name=\"l00180\"></a><span class=\"lineno\">  180</span>&#160;    };</div>\n\
<div class=\"line\"><a name=\"l00181\"></a><span class=\"lineno\">  181</span>&#160;};</div>\n\
<div class=\"line\"><a name=\"l00182\"></a><span class=\"lineno\">  182</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00183\"></a><span class=\"lineno\">  183</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00184\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a130913fe7d3b5920f6f663a636f79d32\">  184</a></span>&#160;Q_INLINE_TEMPLATE <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a130913fe7d3b5920f6f663a636f79d32\">QVarLengthArray&lt;T, Prealloc&gt;::QVarLengthArray</a>(<span class=\"keywordtype\">int</span> asize)</div>\n\
<div class=\"line\"><a name=\"l00185\"></a><span class=\"lineno\">  185</span>&#160;    : s(asize) {</div>\n\
<div class=\"line\"><a name=\"l00186\"></a><span class=\"lineno\">  186</span>&#160;    <span class=\"keywordflow\">if</span> (s &gt; Prealloc) {</div>\n\
<div class=\"line\"><a name=\"l00187\"></a><span class=\"lineno\">  187</span>&#160;        ptr = <span class=\"keyword\">reinterpret_cast&lt;</span>T *<span class=\"keyword\">&gt;</span>(qMalloc(s * <span class=\"keyword\">sizeof</span>(T)));</div>\n\
<div class=\"line\"><a name=\"l00188\"></a><span class=\"lineno\">  188</span>&#160;        Q_CHECK_PTR(ptr);</div>\n\
<div class=\"line\"><a name=\"l00189\"></a><span class=\"lineno\">  189</span>&#160;        a = s;</div>\n\
<div class=\"line\"><a name=\"l00190\"></a><span class=\"lineno\">  190</span>&#160;    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;        ptr = <span class=\"keyword\">reinterpret_cast&lt;</span>T *<span class=\"keyword\">&gt;</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac28f1209e890e8106de168a2a3b07033\">array</a>);</div>\n\
<div class=\"line\"><a name=\"l00192\"></a><span class=\"lineno\">  192</span>&#160;        a = Prealloc;</div>\n\
<div class=\"line\"><a name=\"l00193\"></a><span class=\"lineno\">  193</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00194\"></a><span class=\"lineno\">  194</span>&#160;    <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00195\"></a><span class=\"lineno\">  195</span>&#160;        T *i = ptr + s;</div>\n\
<div class=\"line\"><a name=\"l00196\"></a><span class=\"lineno\">  196</span>&#160;        <span class=\"keywordflow\">while</span> (i != ptr)</div>\n\
<div class=\"line\"><a name=\"l00197\"></a><span class=\"lineno\">  197</span>&#160;            <span class=\"keyword\">new</span> (--i) T;</div>\n\
<div class=\"line\"><a name=\"l00198\"></a><span class=\"lineno\">  198</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00199\"></a><span class=\"lineno\">  199</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00200\"></a><span class=\"lineno\">  200</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00201\"></a><span class=\"lineno\">  201</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00202\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a29fbe4c275136b753acfcf1baa7a94f9\">  202</a></span>&#160;Q_INLINE_TEMPLATE <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a29fbe4c275136b753acfcf1baa7a94f9\">QVarLengthArray&lt;T, Prealloc&gt;::resize</a>(<span class=\"keywordtype\">int</span> asize)</div>\n\
<div class=\"line\"><a name=\"l00203\"></a><span class=\"lineno\">  203</span>&#160;{ realloc(asize, qMax(asize, a)); }</div>\n\
<div class=\"line\"><a name=\"l00204\"></a><span class=\"lineno\">  204</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00205\"></a><span class=\"lineno\">  205</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00206\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac2b6dbd71d445929568c1e24e141fba0\">  206</a></span>&#160;Q_INLINE_TEMPLATE <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac2b6dbd71d445929568c1e24e141fba0\">QVarLengthArray&lt;T, Prealloc&gt;::reserve</a>(<span class=\"keywordtype\">int</span> asize)</div>\n\
<div class=\"line\"><a name=\"l00207\"></a><span class=\"lineno\">  207</span>&#160;{ <span class=\"keywordflow\">if</span> (asize &gt; a) realloc(s, asize); }</div>\n\
<div class=\"line\"><a name=\"l00208\"></a><span class=\"lineno\">  208</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00209\"></a><span class=\"lineno\">  209</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00210\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a19ca5f71d3e1acaa9c7efe203dc06a88\">  210</a></span>&#160;Q_OUTOFLINE_TEMPLATE <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac3da3864dc18a39794b18763448eac3a\">QVarLengthArray&lt;T, Prealloc&gt;::append</a>(<span class=\"keyword\">const</span> T *abuf, <span class=\"keywordtype\">int</span> increment)</div>\n\
<div class=\"line\"><a name=\"l00211\"></a><span class=\"lineno\">  211</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00212\"></a><span class=\"lineno\">  212</span>&#160;    Q_ASSERT(abuf);</div>\n\
<div class=\"line\"><a name=\"l00213\"></a><span class=\"lineno\">  213</span>&#160;    <span class=\"keywordflow\">if</span> (increment &lt;= 0)</div>\n\
<div class=\"line\"><a name=\"l00214\"></a><span class=\"lineno\">  214</span>&#160;        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"><a name=\"l00215\"></a><span class=\"lineno\">  215</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00216\"></a><span class=\"lineno\">  216</span>&#160;    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> asize = s + increment;</div>\n\
<div class=\"line\"><a name=\"l00217\"></a><span class=\"lineno\">  217</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00218\"></a><span class=\"lineno\">  218</span>&#160;    <span class=\"keywordflow\">if</span> (asize &gt;= a)</div>\n\
<div class=\"line\"><a name=\"l00219\"></a><span class=\"lineno\">  219</span>&#160;        realloc(s, qMax(s*2, asize));</div>\n\
<div class=\"line\"><a name=\"l00220\"></a><span class=\"lineno\">  220</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00221\"></a><span class=\"lineno\">  221</span>&#160;    <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00222\"></a><span class=\"lineno\">  222</span>&#160;        <span class=\"comment\">// call constructor for new objects (which can throw)</span></div>\n\
<div class=\"line\"><a name=\"l00223\"></a><span class=\"lineno\">  223</span>&#160;        <span class=\"keywordflow\">while</span> (s &lt; asize)</div>\n\
<div class=\"line\"><a name=\"l00224\"></a><span class=\"lineno\">  224</span>&#160;            <span class=\"keyword\">new</span> (ptr+(s++)) T(*abuf++);</div>\n\
<div class=\"line\"><a name=\"l00225\"></a><span class=\"lineno\">  225</span>&#160;    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00226\"></a><span class=\"lineno\">  226</span>&#160;        qMemCopy(&amp;ptr[s], abuf, increment * <span class=\"keyword\">sizeof</span>(T));</div>\n\
<div class=\"line\"><a name=\"l00227\"></a><span class=\"lineno\">  227</span>&#160;        s = asize;</div>\n\
<div class=\"line\"><a name=\"l00228\"></a><span class=\"lineno\">  228</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00229\"></a><span class=\"lineno\">  229</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00230\"></a><span class=\"lineno\">  230</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00231\"></a><span class=\"lineno\">  231</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00232\"></a><span class=\"lineno\">  232</span>&#160;Q_OUTOFLINE_TEMPLATE <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc&gt;::realloc</a>(<span class=\"keywordtype\">int</span> asize, <span class=\"keywordtype\">int</span> aalloc)</div>\n\
<div class=\"line\"><a name=\"l00233\"></a><span class=\"lineno\">  233</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00234\"></a><span class=\"lineno\">  234</span>&#160;    Q_ASSERT(aalloc &gt;= asize);</div>\n\
<div class=\"line\"><a name=\"l00235\"></a><span class=\"lineno\">  235</span>&#160;    T *oldPtr = ptr;</div>\n\
<div class=\"line\"><a name=\"l00236\"></a><span class=\"lineno\">  236</span>&#160;    <span class=\"keywordtype\">int</span> osize = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"><a name=\"l00237\"></a><span class=\"lineno\">  237</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00238\"></a><span class=\"lineno\">  238</span>&#160;    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> copySize = qMin(asize, osize);</div>\n\
<div class=\"line\"><a name=\"l00239\"></a><span class=\"lineno\">  239</span>&#160;    <span class=\"keywordflow\">if</span> (aalloc != a) {</div>\n\
<div class=\"line\"><a name=\"l00240\"></a><span class=\"lineno\">  240</span>&#160;        ptr = <span class=\"keyword\">reinterpret_cast&lt;</span>T *<span class=\"keyword\">&gt;</span>(qMalloc(aalloc * <span class=\"keyword\">sizeof</span>(T)));</div>\n\
<div class=\"line\"><a name=\"l00241\"></a><span class=\"lineno\">  241</span>&#160;        Q_CHECK_PTR(ptr);</div>\n\
<div class=\"line\"><a name=\"l00242\"></a><span class=\"lineno\">  242</span>&#160;        <span class=\"keywordflow\">if</span> (ptr) {</div>\n\
<div class=\"line\"><a name=\"l00243\"></a><span class=\"lineno\">  243</span>&#160;            s = 0;</div>\n\
<div class=\"line\"><a name=\"l00244\"></a><span class=\"lineno\">  244</span>&#160;            a = aalloc;</div>\n\
<div class=\"line\"><a name=\"l00245\"></a><span class=\"lineno\">  245</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00246\"></a><span class=\"lineno\">  246</span>&#160;            <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isStatic) {</div>\n\
<div class=\"line\"><a name=\"l00247\"></a><span class=\"lineno\">  247</span>&#160;                QT_TRY {</div>\n\
<div class=\"line\"><a name=\"l00248\"></a><span class=\"lineno\">  248</span>&#160;                    <span class=\"comment\">// copy all the old elements</span></div>\n\
<div class=\"line\"><a name=\"l00249\"></a><span class=\"lineno\">  249</span>&#160;                    <span class=\"keywordflow\">while</span> (s &lt; copySize) {</div>\n\
<div class=\"line\"><a name=\"l00250\"></a><span class=\"lineno\">  250</span>&#160;                        <span class=\"keyword\">new</span> (ptr+<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>) T(*(oldPtr+s));</div>\n\
<div class=\"line\"><a name=\"l00251\"></a><span class=\"lineno\">  251</span>&#160;                        (oldPtr+<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>)-&gt;~T();</div>\n\
<div class=\"line\"><a name=\"l00252\"></a><span class=\"lineno\">  252</span>&#160;                        s++;</div>\n\
<div class=\"line\"><a name=\"l00253\"></a><span class=\"lineno\">  253</span>&#160;                    }</div>\n\
<div class=\"line\"><a name=\"l00254\"></a><span class=\"lineno\">  254</span>&#160;                } QT_CATCH(...) {</div>\n\
<div class=\"line\"><a name=\"l00255\"></a><span class=\"lineno\">  255</span>&#160;                    <span class=\"comment\">// clean up all the old objects and then free the old ptr</span></div>\n\
<div class=\"line\"><a name=\"l00256\"></a><span class=\"lineno\">  256</span>&#160;                    <span class=\"keywordtype\">int</span> sClean = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"><a name=\"l00257\"></a><span class=\"lineno\">  257</span>&#160;                    <span class=\"keywordflow\">while</span> (sClean &lt; osize)</div>\n\
<div class=\"line\"><a name=\"l00258\"></a><span class=\"lineno\">  258</span>&#160;                        (oldPtr+(sClean++))-&gt;~T();</div>\n\
<div class=\"line\"><a name=\"l00259\"></a><span class=\"lineno\">  259</span>&#160;                    <span class=\"keywordflow\">if</span> (oldPtr != reinterpret_cast&lt;T *&gt;(array) &amp;&amp; oldPtr != ptr)</div>\n\
<div class=\"line\"><a name=\"l00260\"></a><span class=\"lineno\">  260</span>&#160;                        qFree(oldPtr);</div>\n\
<div class=\"line\"><a name=\"l00261\"></a><span class=\"lineno\">  261</span>&#160;                    QT_RETHROW;</div>\n\
<div class=\"line\"><a name=\"l00262\"></a><span class=\"lineno\">  262</span>&#160;                }</div>\n\
<div class=\"line\"><a name=\"l00263\"></a><span class=\"lineno\">  263</span>&#160;            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00264\"></a><span class=\"lineno\">  264</span>&#160;                qMemCopy(ptr, oldPtr, copySize * <span class=\"keyword\">sizeof</span>(T));</div>\n\
<div class=\"line\"><a name=\"l00265\"></a><span class=\"lineno\">  265</span>&#160;            }</div>\n\
<div class=\"line\"><a name=\"l00266\"></a><span class=\"lineno\">  266</span>&#160;        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00267\"></a><span class=\"lineno\">  267</span>&#160;            ptr = oldPtr;</div>\n\
<div class=\"line\"><a name=\"l00268\"></a><span class=\"lineno\">  268</span>&#160;            <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"><a name=\"l00269\"></a><span class=\"lineno\">  269</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00270\"></a><span class=\"lineno\">  270</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00271\"></a><span class=\"lineno\">  271</span>&#160;    s = copySize;</div>\n\
<div class=\"line\"><a name=\"l00272\"></a><span class=\"lineno\">  272</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00273\"></a><span class=\"lineno\">  273</span>&#160;    <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00274\"></a><span class=\"lineno\">  274</span>&#160;        <span class=\"comment\">// destroy remaining old objects</span></div>\n\
<div class=\"line\"><a name=\"l00275\"></a><span class=\"lineno\">  275</span>&#160;        <span class=\"keywordflow\">while</span> (osize &gt; asize)</div>\n\
<div class=\"line\"><a name=\"l00276\"></a><span class=\"lineno\">  276</span>&#160;            (oldPtr+(--osize))-&gt;~T();</div>\n\
<div class=\"line\"><a name=\"l00277\"></a><span class=\"lineno\">  277</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00278\"></a><span class=\"lineno\">  278</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00279\"></a><span class=\"lineno\">  279</span>&#160;    <span class=\"keywordflow\">if</span> (oldPtr != reinterpret_cast&lt;T *&gt;(array) &amp;&amp; oldPtr != ptr)</div>\n\
<div class=\"line\"><a name=\"l00280\"></a><span class=\"lineno\">  280</span>&#160;        qFree(oldPtr);</div>\n\
<div class=\"line\"><a name=\"l00281\"></a><span class=\"lineno\">  281</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00282\"></a><span class=\"lineno\">  282</span>&#160;    <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00283\"></a><span class=\"lineno\">  283</span>&#160;        <span class=\"comment\">// call default constructor for new objects (which can throw)</span></div>\n\
<div class=\"line\"><a name=\"l00284\"></a><span class=\"lineno\">  284</span>&#160;        <span class=\"keywordflow\">while</span> (s &lt; asize)</div>\n\
<div class=\"line\"><a name=\"l00285\"></a><span class=\"lineno\">  285</span>&#160;            <span class=\"keyword\">new</span> (ptr+(s++)) T;</div>\n\
<div class=\"line\"><a name=\"l00286\"></a><span class=\"lineno\">  286</span>&#160;    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00287\"></a><span class=\"lineno\">  287</span>&#160;        s = asize;</div>\n\
<div class=\"line\"><a name=\"l00288\"></a><span class=\"lineno\">  288</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00289\"></a><span class=\"lineno\">  289</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00290\"></a><span class=\"lineno\">  290</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00291\"></a><span class=\"lineno\">  291</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00292\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a6c576dd91551fb5ab1a6f927224894b5\">  292</a></span>&#160;Q_OUTOFLINE_TEMPLATE T <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a6c576dd91551fb5ab1a6f927224894b5\">QVarLengthArray&lt;T, Prealloc&gt;::value</a>(<span class=\"keywordtype\">int</span> i)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><a name=\"l00293\"></a><span class=\"lineno\">  293</span>&#160;<span class=\"keyword\"></span>{</div>\n\
<div class=\"line\"><a name=\"l00294\"></a><span class=\"lineno\">  294</span>&#160;    <span class=\"keywordflow\">if</span> (i &lt; 0 || i &gt;= <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a>()) {</div>\n\
<div class=\"line\"><a name=\"l00295\"></a><span class=\"lineno\">  295</span>&#160;        <span class=\"keywordflow\">return</span> T();</div>\n\
<div class=\"line\"><a name=\"l00296\"></a><span class=\"lineno\">  296</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00297\"></a><span class=\"lineno\">  297</span>&#160;    <span class=\"keywordflow\">return</span> at(i);</div>\n\
<div class=\"line\"><a name=\"l00298\"></a><span class=\"lineno\">  298</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00299\"></a><span class=\"lineno\">  299</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00300\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#af2525141313a660cbecdbda5f7c78180\">  300</a></span>&#160;Q_OUTOFLINE_TEMPLATE T <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a6c576dd91551fb5ab1a6f927224894b5\">QVarLengthArray&lt;T, Prealloc&gt;::value</a>(<span class=\"keywordtype\">int</span> i, <span class=\"keyword\">const</span> T &amp;defaultValue)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><a name=\"l00301\"></a><span class=\"lineno\">  301</span>&#160;<span class=\"keyword\"></span>{</div>\n\
<div class=\"line\"><a name=\"l00302\"></a><span class=\"lineno\">  302</span>&#160;    <span class=\"keywordflow\">return</span> (i &lt; 0 || i &gt;= <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a>()) ? defaultValue : at(i);</div>\n\
<div class=\"line\"><a name=\"l00303\"></a><span class=\"lineno\">  303</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00304\"></a><span class=\"lineno\">  304</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00305\"></a><span class=\"lineno\">  305</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00306\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac603ddba7987dba9dd393422907d30fa\">  306</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac603ddba7987dba9dd393422907d30fa\">QVarLengthArray&lt;T, Prealloc&gt;::insert</a>(<span class=\"keywordtype\">int</span> i, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00307\"></a><span class=\"lineno\">  307</span>&#160;{ Q_ASSERT_X(i &gt;= 0 &amp;&amp; i &lt;= s, <span class=\"stringliteral\">&quot;QVarLengthArray::insert&quot;</span>, <span class=\"stringliteral\">&quot;index out of range&quot;</span>);</div>\n\
<div class=\"line\"><a name=\"l00308\"></a><span class=\"lineno\">  308</span>&#160;  insert(begin() + i, 1, t); }</div>\n\
<div class=\"line\"><a name=\"l00309\"></a><span class=\"lineno\">  309</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00310\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a927a36311e22e3e605394b0d35f6f344\">  310</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac603ddba7987dba9dd393422907d30fa\">QVarLengthArray&lt;T, Prealloc&gt;::insert</a>(<span class=\"keywordtype\">int</span> i, <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00311\"></a><span class=\"lineno\">  311</span>&#160;{ Q_ASSERT_X(i &gt;= 0 &amp;&amp; i &lt;= s, <span class=\"stringliteral\">&quot;QVarLengthArray::insert&quot;</span>, <span class=\"stringliteral\">&quot;index out of range&quot;</span>);</div>\n\
<div class=\"line\"><a name=\"l00312\"></a><span class=\"lineno\">  312</span>&#160;  insert(begin() + i, n, t); }</div>\n\
<div class=\"line\"><a name=\"l00313\"></a><span class=\"lineno\">  313</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00314\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a5c9f641c4774cbb1a50e1b1633418aa7\">  314</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a06f887a6ec25372a9d534273501af0a5\">QVarLengthArray&lt;T, Prealloc&gt;::remove</a>(<span class=\"keywordtype\">int</span> i, <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>)</div>\n\
<div class=\"line\"><a name=\"l00315\"></a><span class=\"lineno\">  315</span>&#160;{ Q_ASSERT_X(i &gt;= 0 &amp;&amp; n &gt;= 0 &amp;&amp; i + n &lt;= s, <span class=\"stringliteral\">&quot;QVarLengthArray::remove&quot;</span>, <span class=\"stringliteral\">&quot;index out of range&quot;</span>);</div>\n\
<div class=\"line\"><a name=\"l00316\"></a><span class=\"lineno\">  316</span>&#160;  erase(begin() + i, begin() + i + n); }</div>\n\
<div class=\"line\"><a name=\"l00317\"></a><span class=\"lineno\">  317</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00318\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a06f887a6ec25372a9d534273501af0a5\">  318</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a06f887a6ec25372a9d534273501af0a5\">QVarLengthArray&lt;T, Prealloc&gt;::remove</a>(<span class=\"keywordtype\">int</span> i)</div>\n\
<div class=\"line\"><a name=\"l00319\"></a><span class=\"lineno\">  319</span>&#160;{ Q_ASSERT_X(i &gt;= 0 &amp;&amp; i &lt; s, <span class=\"stringliteral\">&quot;QVarLengthArray::remove&quot;</span>, <span class=\"stringliteral\">&quot;index out of range&quot;</span>);</div>\n\
<div class=\"line\"><a name=\"l00320\"></a><span class=\"lineno\">  320</span>&#160;  erase(begin() + i, begin() + i + 1); }</div>\n\
<div class=\"line\"><a name=\"l00321\"></a><span class=\"lineno\">  321</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00322\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a084223dddc94877b14587a6669b0a91d\">  322</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a084223dddc94877b14587a6669b0a91d\">QVarLengthArray&lt;T, Prealloc&gt;::prepend</a>(<span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00323\"></a><span class=\"lineno\">  323</span>&#160;{ insert(begin(), 1, t); }</div>\n\
<div class=\"line\"><a name=\"l00324\"></a><span class=\"lineno\">  324</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00325\"></a><span class=\"lineno\">  325</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00326\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac164a3e13a0bde48a312c47904ea9903\">  326</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac164a3e13a0bde48a312c47904ea9903\">QVarLengthArray&lt;T, Prealloc&gt;::replace</a>(<span class=\"keywordtype\">int</span> i, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00327\"></a><span class=\"lineno\">  327</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00328\"></a><span class=\"lineno\">  328</span>&#160;    Q_ASSERT_X(i &gt;= 0 &amp;&amp; i &lt; s, <span class=\"stringliteral\">&quot;QVarLengthArray::replace&quot;</span>, <span class=\"stringliteral\">&quot;index out of range&quot;</span>);</div>\n\
<div class=\"line\"><a name=\"l00329\"></a><span class=\"lineno\">  329</span>&#160;    <span class=\"keyword\">const</span> T copy(t);</div>\n\
<div class=\"line\"><a name=\"l00330\"></a><span class=\"lineno\">  330</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a2cc7c8468af76cf855e1755c27945693\">data</a>()[i] = copy;</div>\n\
<div class=\"line\"><a name=\"l00331\"></a><span class=\"lineno\">  331</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00332\"></a><span class=\"lineno\">  332</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00333\"></a><span class=\"lineno\">  333</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00334\"></a><span class=\"lineno\">  334</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00335\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a5810f5efeb2248b5bda9d3a4bbf5b841\">  335</a></span>&#160;Q_OUTOFLINE_TEMPLATE <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a35c955cacac6aacaa1e82874b1628865\">QVarLengthArray&lt;T, Prealloc&gt;::iterator</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac603ddba7987dba9dd393422907d30fa\">QVarLengthArray&lt;T, Prealloc&gt;::insert</a>(iterator before, size_type <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>, <span class=\"keyword\">const</span> T &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a>)</div>\n\
<div class=\"line\"><a name=\"l00336\"></a><span class=\"lineno\">  336</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00337\"></a><span class=\"lineno\">  337</span>&#160;    <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a6ed43c61a3fbf165f2eaf5f39282e908\">offset</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(before - ptr);</div>\n\
<div class=\"line\"><a name=\"l00338\"></a><span class=\"lineno\">  338</span>&#160;    <span class=\"keywordflow\">if</span> (n != 0) {</div>\n\
<div class=\"line\"><a name=\"l00339\"></a><span class=\"lineno\">  339</span>&#160;        resize(s + n);</div>\n\
<div class=\"line\"><a name=\"l00340\"></a><span class=\"lineno\">  340</span>&#160;        <span class=\"keyword\">const</span> T copy(t);</div>\n\
<div class=\"line\"><a name=\"l00341\"></a><span class=\"lineno\">  341</span>&#160;        <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isStatic) {</div>\n\
<div class=\"line\"><a name=\"l00342\"></a><span class=\"lineno\">  342</span>&#160;            T *<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a> = ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a6ed43c61a3fbf165f2eaf5f39282e908\">offset</a>;</div>\n\
<div class=\"line\"><a name=\"l00343\"></a><span class=\"lineno\">  343</span>&#160;            T *j = ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"><a name=\"l00344\"></a><span class=\"lineno\">  344</span>&#160;            T *i = j - <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>;</div>\n\
<div class=\"line\"><a name=\"l00345\"></a><span class=\"lineno\">  345</span>&#160;            <span class=\"keywordflow\">while</span> (i != b)</div>\n\
<div class=\"line\"><a name=\"l00346\"></a><span class=\"lineno\">  346</span>&#160;                *--j = *--i;</div>\n\
<div class=\"line\"><a name=\"l00347\"></a><span class=\"lineno\">  347</span>&#160;            i = b + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>;</div>\n\
<div class=\"line\"><a name=\"l00348\"></a><span class=\"lineno\">  348</span>&#160;            <span class=\"keywordflow\">while</span> (i != b)</div>\n\
<div class=\"line\"><a name=\"l00349\"></a><span class=\"lineno\">  349</span>&#160;                *--i = copy;</div>\n\
<div class=\"line\"><a name=\"l00350\"></a><span class=\"lineno\">  350</span>&#160;        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00351\"></a><span class=\"lineno\">  351</span>&#160;            T *<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a> = ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a6ed43c61a3fbf165f2eaf5f39282e908\">offset</a>;</div>\n\
<div class=\"line\"><a name=\"l00352\"></a><span class=\"lineno\">  352</span>&#160;            T *i = b + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>;</div>\n\
<div class=\"line\"><a name=\"l00353\"></a><span class=\"lineno\">  353</span>&#160;            memmove(i, b, (s - offset - n) * <span class=\"keyword\">sizeof</span>(T));</div>\n\
<div class=\"line\"><a name=\"l00354\"></a><span class=\"lineno\">  354</span>&#160;            <span class=\"keywordflow\">while</span> (i != b)</div>\n\
<div class=\"line\"><a name=\"l00355\"></a><span class=\"lineno\">  355</span>&#160;                <span class=\"keyword\">new</span> (--i) T(copy);</div>\n\
<div class=\"line\"><a name=\"l00356\"></a><span class=\"lineno\">  356</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00357\"></a><span class=\"lineno\">  357</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00358\"></a><span class=\"lineno\">  358</span>&#160;    <span class=\"keywordflow\">return</span> ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a6ed43c61a3fbf165f2eaf5f39282e908\">offset</a>;</div>\n\
<div class=\"line\"><a name=\"l00359\"></a><span class=\"lineno\">  359</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00360\"></a><span class=\"lineno\">  360</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00361\"></a><span class=\"lineno\">  361</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, <span class=\"keywordtype\">int</span> Prealloc&gt;</div>\n\
<div class=\"line\"><a name=\"l00362\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#acbef91e3b4594fc14f7b5b5696ed4391\">  362</a></span>&#160;Q_OUTOFLINE_TEMPLATE <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a35c955cacac6aacaa1e82874b1628865\">QVarLengthArray&lt;T, Prealloc&gt;::iterator</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#acbef91e3b4594fc14f7b5b5696ed4391\">QVarLengthArray&lt;T, Prealloc&gt;::erase</a>(iterator abegin, iterator aend)</div>\n\
<div class=\"line\"><a name=\"l00363\"></a><span class=\"lineno\">  363</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00364\"></a><span class=\"lineno\">  364</span>&#160;    <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(abegin - ptr);</div>\n\
<div class=\"line\"><a name=\"l00365\"></a><span class=\"lineno\">  365</span>&#160;    <span class=\"keywordtype\">int</span> l = <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a>(aend - ptr);</div>\n\
<div class=\"line\"><a name=\"l00366\"></a><span class=\"lineno\">  366</span>&#160;    <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a> = l - <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>;</div>\n\
<div class=\"line\"><a name=\"l00367\"></a><span class=\"lineno\">  367</span>&#160;    <span class=\"keywordflow\">if</span> (QTypeInfo&lt;T&gt;::isComplex) {</div>\n\
<div class=\"line\"><a name=\"l00368\"></a><span class=\"lineno\">  368</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/qalgorithms_8h.html#a30ea391f0ca5da1e0cba34353109cd47\">qCopy</a>(ptr + l, ptr + s, ptr + f);</div>\n\
<div class=\"line\"><a name=\"l00369\"></a><span class=\"lineno\">  369</span>&#160;        T *i = ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\"><a name=\"l00370\"></a><span class=\"lineno\">  370</span>&#160;        T *<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a> = ptr + s - <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>;</div>\n\
<div class=\"line\"><a name=\"l00371\"></a><span class=\"lineno\">  371</span>&#160;        <span class=\"keywordflow\">while</span> (i != b) {</div>\n\
<div class=\"line\"><a name=\"l00372\"></a><span class=\"lineno\">  372</span>&#160;            --i;</div>\n\
<div class=\"line\"><a name=\"l00373\"></a><span class=\"lineno\">  373</span>&#160;            i-&gt;~T();</div>\n\
<div class=\"line\"><a name=\"l00374\"></a><span class=\"lineno\">  374</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00375\"></a><span class=\"lineno\">  375</span>&#160;    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"><a name=\"l00376\"></a><span class=\"lineno\">  376</span>&#160;        memmove(ptr + f, ptr + l, (s - l) * <span class=\"keyword\">sizeof</span>(T));</div>\n\
<div class=\"line\"><a name=\"l00377\"></a><span class=\"lineno\">  377</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00378\"></a><span class=\"lineno\">  378</span>&#160;    s -= <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a>;</div>\n\
<div class=\"line\"><a name=\"l00379\"></a><span class=\"lineno\">  379</span>&#160;    <span class=\"keywordflow\">return</span> ptr + <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a>;</div>\n\
<div class=\"line\"><a name=\"l00380\"></a><span class=\"lineno\">  380</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00381\"></a><span class=\"lineno\">  381</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00382\"></a><span class=\"lineno\">  382</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keywordtype\">int</span> Prealloc1, <span class=\"keywordtype\">int</span> Prealloc2&gt;</div>\n\
<div class=\"line\"><a name=\"l00383\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html#a74bd102391362ae362a9da623ab3c4af\">  383</a></span>&#160;<span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html#a74bd102391362ae362a9da623ab3c4af\">operator==</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc1&gt;</a> &amp;l, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc2&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a28666c5860e73f899079b4ee29200aec\">r</a>)</div>\n\
<div class=\"line\"><a name=\"l00384\"></a><span class=\"lineno\">  384</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00385\"></a><span class=\"lineno\">  385</span>&#160;    <span class=\"keywordflow\">if</span> (l.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>() != r.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>())</div>\n\
<div class=\"line\"><a name=\"l00386\"></a><span class=\"lineno\">  386</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"><a name=\"l00387\"></a><span class=\"lineno\">  387</span>&#160;    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; l.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">size</a>(); i++) {</div>\n\
<div class=\"line\"><a name=\"l00388\"></a><span class=\"lineno\">  388</span>&#160;        <span class=\"keywordflow\">if</span> (l.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a496f65637ef0f79ab8ca294b71cc2365\">at</a>(i) != r.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a496f65637ef0f79ab8ca294b71cc2365\">at</a>(i))</div>\n\
<div class=\"line\"><a name=\"l00389\"></a><span class=\"lineno\">  389</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"><a name=\"l00390\"></a><span class=\"lineno\">  390</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00391\"></a><span class=\"lineno\">  391</span>&#160;    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"><a name=\"l00392\"></a><span class=\"lineno\">  392</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00393\"></a><span class=\"lineno\">  393</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00394\"></a><span class=\"lineno\">  394</span>&#160;<span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keywordtype\">int</span> Prealloc1, <span class=\"keywordtype\">int</span> Prealloc2&gt;</div>\n\
<div class=\"line\"><a name=\"l00395\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html#a2401c0ba7887478d8177c8df89e35fe1\">  395</a></span>&#160;<span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html#a2401c0ba7887478d8177c8df89e35fe1\">operator!=</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc1&gt;</a> &amp;l, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray&lt;T, Prealloc2&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a28666c5860e73f899079b4ee29200aec\">r</a>)</div>\n\
<div class=\"line\"><a name=\"l00396\"></a><span class=\"lineno\">  396</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00397\"></a><span class=\"lineno\">  397</span>&#160;    <span class=\"keywordflow\">return</span> !(l == <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a28666c5860e73f899079b4ee29200aec\">r</a>);</div>\n\
<div class=\"line\"><a name=\"l00398\"></a><span class=\"lineno\">  398</span>&#160;}</div>\n\
<div class=\"line\"><a name=\"l00399\"></a><span class=\"lineno\">  399</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00400\"></a><span class=\"lineno\">  400</span>&#160;<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#af0211888b9fea89f8a616cd6566c521e\">QT_END_NAMESPACE</a></div>\n\
<div class=\"line\"><a name=\"l00401\"></a><span class=\"lineno\">  401</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00402\"></a><span class=\"lineno\">  402</span>&#160;<a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#ac10725c642e865540e4faaf733ff95ff\">QT_END_HEADER</a></div>\n\
<div class=\"line\"><a name=\"l00403\"></a><span class=\"lineno\">  403</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00404\"></a><span class=\"lineno\">  404</span>&#160;<span class=\"preprocessor\">#endif // QVARLENGTHARRAY_H</span></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a104736719cd4e5f21c25705c77064dde\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a104736719cd4e5f21c25705c77064dde\">QVarLengthArray::capacity</a></div><div class=\"ttdeci\">int capacity() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00102\">qvarlengtharray.h:102</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a28666c5860e73f899079b4ee29200aec\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a28666c5860e73f899079b4ee29200aec\">r</a></div><div class=\"ttdeci\">GLdouble GLdouble GLdouble r</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01189\">GLee.h:1189</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_abe8933d436779a43cb5c1896ff5f2918\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#abe8933d436779a43cb5c1896ff5f2918\">QVarLengthArray::reference</a></div><div class=\"ttdeci\">value_type &amp; reference</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00149\">qvarlengtharray.h:149</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_afa93d9ec919f6da31a4908f63fc57e39\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afa93d9ec919f6da31a4908f63fc57e39\">QVarLengthArray::QVarLengthArray</a></div><div class=\"ttdeci\">QVarLengthArray(const QVarLengthArray&lt; T, Prealloc &gt; &amp;other)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00068\">qvarlengtharray.h:68</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_aa813ad7a4a00cda401ffd0c336154620\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa813ad7a4a00cda401ffd0c336154620\">int</a></div><div class=\"ttdeci\">unsigned int(APIENTRYP PFNGLXGETAGPOFFSETMESAPROC)(const void *pointer)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l10762\">GLee.h:10762</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a1699472936b80a88d3fc8096975d21b2\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a1699472936b80a88d3fc8096975d21b2\">QVarLengthArray::data</a></div><div class=\"ttdeci\">T * data()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00142\">qvarlengtharray.h:142</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a3bd3979af07c12a7df5841f3b7ec0025\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a3bd3979af07c12a7df5841f3b7ec0025\">QVarLengthArray::constEnd</a></div><div class=\"ttdeci\">const_iterator constEnd() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00162\">qvarlengtharray.h:162</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a479432127ee77145cc19d6a2d1590821\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a479432127ee77145cc19d6a2d1590821\">QVarLengthArray::isEmpty</a></div><div class=\"ttdeci\">bool isEmpty() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00098\">qvarlengtharray.h:98</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html_af0211888b9fea89f8a616cd6566c521e\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html#af0211888b9fea89f8a616cd6566c521e\">QT_END_NAMESPACE</a></div><div class=\"ttdeci\">#define QT_END_NAMESPACE</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qglobal_8h_source.html#l00128\">qglobal.h:128</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a6ed43c61a3fbf165f2eaf5f39282e908\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a6ed43c61a3fbf165f2eaf5f39282e908\">offset</a></div><div class=\"ttdeci\">GLintptr offset</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01562\">GLee.h:1562</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ac603ddba7987dba9dd393422907d30fa\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac603ddba7987dba9dd393422907d30fa\">QVarLengthArray::insert</a></div><div class=\"ttdeci\">void insert(int i, const T &amp;t)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00306\">qvarlengtharray.h:306</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ad69bd11391be1a1dba5c8202259664f8\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ad69bd11391be1a1dba5c8202259664f8\">QVarLengthArray::begin</a></div><div class=\"ttdeci\">iterator begin()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00157\">qvarlengtharray.h:157</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html_a22466069bc24124bf4d749ca253f5e2b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html#a22466069bc24124bf4d749ca253f5e2b\">QT_BEGIN_HEADER</a></div><div class=\"ttdeci\">#define QT_BEGIN_HEADER</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qglobal_8h_source.html#l00141\">qglobal.h:141</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ac2b6dbd71d445929568c1e24e141fba0\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac2b6dbd71d445929568c1e24e141fba0\">QVarLengthArray::reserve</a></div><div class=\"ttdeci\">void reserve(int size)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00206\">qvarlengtharray.h:206</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ac164a3e13a0bde48a312c47904ea9903\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac164a3e13a0bde48a312c47904ea9903\">QVarLengthArray::replace</a></div><div class=\"ttdeci\">void replace(int i, const T &amp;t)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00326\">qvarlengtharray.h:326</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_af7659d9799f06df763bf397101941dd7\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#af7659d9799f06df763bf397101941dd7\">QVarLengthArray::erase</a></div><div class=\"ttdeci\">iterator erase(iterator pos)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00166\">qvarlengtharray.h:166</a></div></div>\n\
<div class=\"ttc\" id=\"_s_s_e_8h_html_a48d936d9a8d7c3911d7a6978264d36ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_s_s_e_8h.html#a48d936d9a8d7c3911d7a6978264d36ba\">operator&lt;&lt;</a></div><div class=\"ttdeci\">mudbox::Vector &amp; operator&lt;&lt;(mudbox::Vector &amp;v, const HWVector &amp;r)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_s_s_e_8h_source.html#l00245\">SSE.h:245</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html_aacec69bbe5cd009ccdcaf50f9a0289aa\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a></div><div class=\"ttdeci\">long long qint64</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qglobal_8h_source.html#l00947\">qglobal.h:947</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a2c3394cb8fe8c93286812a52f8f545e5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2c3394cb8fe8c93286812a52f8f545e5\">QVarLengthArray::q_for_alignment_2</a></div><div class=\"ttdeci\">double q_for_alignment_2</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00179\">qvarlengtharray.h:179</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a35c955cacac6aacaa1e82874b1628865\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a35c955cacac6aacaa1e82874b1628865\">QVarLengthArray::iterator</a></div><div class=\"ttdeci\">T * iterator</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00154\">qvarlengtharray.h:154</a></div></div>\n\
<div class=\"ttc\" id=\"qcontainerfwd_8h_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qcontainerfwd_8h.html\">qcontainerfwd.h</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ad25b518036b886d8f35a3c059301d007\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ad25b518036b886d8f35a3c059301d007\">QVarLengthArray::pointer</a></div><div class=\"ttdeci\">value_type * pointer</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00147\">qvarlengtharray.h:147</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a265a253612b46abed17c61b0a5e5ce30\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a265a253612b46abed17c61b0a5e5ce30\">QVarLengthArray::value_type</a></div><div class=\"ttdeci\">T value_type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00146\">qvarlengtharray.h:146</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_aa758555ca4ed2d808fc8ff804cdc1465\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aa758555ca4ed2d808fc8ff804cdc1465\">QVarLengthArray::q_for_alignment_1</a></div><div class=\"ttdeci\">qint64 q_for_alignment_1</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00178\">qvarlengtharray.h:178</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a2fc97dce62b7053449cc868607540dba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2fc97dce62b7053449cc868607540dba\">QVarLengthArray::const_iterator</a></div><div class=\"ttdeci\">const T * const_iterator</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00155\">qvarlengtharray.h:155</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html_ae7344b820974b9f9f7cfedd5808bd3a0\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html#ae7344b820974b9f9f7cfedd5808bd3a0\">QT_BEGIN_NAMESPACE</a></div><div class=\"ttdeci\">#define QT_BEGIN_NAMESPACE</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qglobal_8h_source.html#l00127\">qglobal.h:127</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_aafd1e3ba4133ad908bdbc99c4b356e5f\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aafd1e3ba4133ad908bdbc99c4b356e5f\">QVarLengthArray::size_type</a></div><div class=\"ttdeci\">int size_type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00145\">qvarlengtharray.h:145</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a2a322a02b87eab70bf5d7d1f6e1b8842\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a2a322a02b87eab70bf5d7d1f6e1b8842\">QVarLengthArray::operator[]</a></div><div class=\"ttdeci\">T &amp; operator[](int idx)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00105\">qvarlengtharray.h:105</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a084223dddc94877b14587a6669b0a91d\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a084223dddc94877b14587a6669b0a91d\">QVarLengthArray::prepend</a></div><div class=\"ttdeci\">void prepend(const T &amp;t)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00322\">qvarlengtharray.h:322</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a2cc7c8468af76cf855e1755c27945693\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a2cc7c8468af76cf855e1755c27945693\">data</a></div><div class=\"ttdeci\">GLsizei GLsizei GLenum GLenum const GLvoid * data</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00880\">GLee.h:880</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html\">qglobal.h</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ac28f1209e890e8106de168a2a3b07033\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac28f1209e890e8106de168a2a3b07033\">QVarLengthArray::array</a></div><div class=\"ttdeci\">char array[sizeof(qint64)*(((Prealloc *sizeof(T))/sizeof(qint64))+1)]</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00177\">qvarlengtharray.h:177</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a06f887a6ec25372a9d534273501af0a5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a06f887a6ec25372a9d534273501af0a5\">QVarLengthArray::remove</a></div><div class=\"ttdeci\">void remove(int i)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00318\">qvarlengtharray.h:318</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ac3da3864dc18a39794b18763448eac3a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac3da3864dc18a39794b18763448eac3a\">QVarLengthArray::append</a></div><div class=\"ttdeci\">void append(const T &amp;t)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00118\">qvarlengtharray.h:118</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ac8bb3912a3ce86b15842e79d0b421204\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ac8bb3912a3ce86b15842e79d0b421204\">QVarLengthArray::clear</a></div><div class=\"ttdeci\">void clear()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00100\">qvarlengtharray.h:100</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a4341d2f827b5e261162a4fa79f728271\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a4341d2f827b5e261162a4fa79f728271\">QVarLengthArray::constData</a></div><div class=\"ttdeci\">const T * constData() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00144\">qvarlengtharray.h:144</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a09b61c9254503800358fe9680a997626\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a09b61c9254503800358fe9680a997626\">x</a></div><div class=\"ttdeci\">GLenum GLint x</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00876\">GLee.h:876</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a192c6737a23777254fa4cfbd73e766eb\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a192c6737a23777254fa4cfbd73e766eb\">QVarLengthArray::operator=</a></div><div class=\"ttdeci\">QVarLengthArray&lt; T, Prealloc &gt; &amp; operator=(const QVarLengthArray&lt; T, Prealloc &gt; &amp;other)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00083\">qvarlengtharray.h:83</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a0745638c9967e2ed90bc96c012288c55\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a0745638c9967e2ed90bc96c012288c55\">QVarLengthArray::count</a></div><div class=\"ttdeci\">int count() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00097\">qvarlengtharray.h:97</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a830e6eb5d1b77f7226a78592ba9d2613\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a830e6eb5d1b77f7226a78592ba9d2613\">n</a></div><div class=\"ttdeci\">GLenum GLsizei n</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l03432\">GLee.h:3432</a></div></div>\n\
<div class=\"ttc\" id=\"qvarlengtharray_8h_html_a74bd102391362ae362a9da623ab3c4af\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html#a74bd102391362ae362a9da623ab3c4af\">operator==</a></div><div class=\"ttdeci\">bool operator==(const QVarLengthArray&lt; T, Prealloc1 &gt; &amp;l, const QVarLengthArray&lt; T, Prealloc2 &gt; &amp;r)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00383\">qvarlengtharray.h:383</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_aad6c6f2f346db1420c02f21e588e32cc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aad6c6f2f346db1420c02f21e588e32cc\">QVarLengthArray::operator+=</a></div><div class=\"ttdeci\">QVarLengthArray&lt; T, Prealloc &gt; &amp; operator+=(const T &amp;t)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00131\">qvarlengtharray.h:131</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_aaa25233c49419c7ed8e29dca0a094e26\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aaa25233c49419c7ed8e29dca0a094e26\">QVarLengthArray::constBegin</a></div><div class=\"ttdeci\">const_iterator constBegin() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00159\">qvarlengtharray.h:159</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_afb97c3b96c74eb1f38e4266c8b587db6\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afb97c3b96c74eb1f38e4266c8b587db6\">QVarLengthArray::removeLast</a></div><div class=\"ttdeci\">void removeLast()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00092\">qvarlengtharray.h:92</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a08f98740667f706cd68d5e873088ffa6\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a08f98740667f706cd68d5e873088ffa6\">b</a></div><div class=\"ttdeci\">GLubyte GLubyte b</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05404\">GLee.h:5404</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a92597b6ad54c8cebd6a987b7762eecfc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a92597b6ad54c8cebd6a987b7762eecfc\">QVarLengthArray::data</a></div><div class=\"ttdeci\">const T * data() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00143\">qvarlengtharray.h:143</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a496f65637ef0f79ab8ca294b71cc2365\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a496f65637ef0f79ab8ca294b71cc2365\">QVarLengthArray::at</a></div><div class=\"ttdeci\">const T &amp; at(int idx) const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00113\">qvarlengtharray.h:113</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_aed27f17ebdc1fd207871bc2ed5da0d0f\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#aed27f17ebdc1fd207871bc2ed5da0d0f\">value</a></div><div class=\"ttdeci\">GLsizei const GLfloat * value</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01742\">GLee.h:1742</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a432111147038972f06e049e18a837002\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a432111147038972f06e049e18a837002\">end</a></div><div class=\"ttdeci\">GLuint GLuint end</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a29fbe4c275136b753acfcf1baa7a94f9\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a29fbe4c275136b753acfcf1baa7a94f9\">QVarLengthArray::resize</a></div><div class=\"ttdeci\">void resize(int size)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00202\">qvarlengtharray.h:202</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a13c57dab17e2c903cadfa5e35ba84064\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13c57dab17e2c903cadfa5e35ba84064\">QVarLengthArray::const_pointer</a></div><div class=\"ttdeci\">const value_type * const_pointer</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00148\">qvarlengtharray.h:148</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ac8729153468b5dcf13f971b21d84d4e5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a></div><div class=\"ttdeci\">GLubyte GLubyte GLubyte a</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05404\">GLee.h:5404</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_afdb67657e63a66ed3fae7b0c9fd81b48\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#afdb67657e63a66ed3fae7b0c9fd81b48\">QVarLengthArray::const_reference</a></div><div class=\"ttdeci\">const value_type &amp; const_reference</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00150\">qvarlengtharray.h:150</a></div></div>\n\
<div class=\"ttc\" id=\"qalgorithms_8h_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qalgorithms_8h.html\">qalgorithms.h</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a33f1b2115de3ba2901ce3ecab6d0aa23\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a33f1b2115de3ba2901ce3ecab6d0aa23\">QVarLengthArray::~QVarLengthArray</a></div><div class=\"ttdeci\">~QVarLengthArray()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00074\">qvarlengtharray.h:74</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html\">QVarLengthArray</a></div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qcontainerfwd_8h_source.html#l00064\">qcontainerfwd.h:64</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_acad38d52497a975bfb6f2f6acd76631f\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#acad38d52497a975bfb6f2f6acd76631f\">QVarLengthArray::end</a></div><div class=\"ttdeci\">iterator end()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00160\">qvarlengtharray.h:160</a></div></div>\n\
<div class=\"ttc\" id=\"qalgorithms_8h_html_a30ea391f0ca5da1e0cba34353109cd47\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qalgorithms_8h.html#a30ea391f0ca5da1e0cba34353109cd47\">qCopy</a></div><div class=\"ttdeci\">OutputIterator qCopy(InputIterator begin, InputIterator end, OutputIterator dest)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qalgorithms_8h_source.html#l00079\">qalgorithms.h:79</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_acbef91e3b4594fc14f7b5b5696ed4391\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#acbef91e3b4594fc14f7b5b5696ed4391\">QVarLengthArray::erase</a></div><div class=\"ttdeci\">iterator erase(iterator begin, iterator end)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00362\">qvarlengtharray.h:362</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a130913fe7d3b5920f6f663a636f79d32\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a130913fe7d3b5920f6f663a636f79d32\">QVarLengthArray::QVarLengthArray</a></div><div class=\"ttdeci\">QVarLengthArray(int size=0)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00184\">qvarlengtharray.h:184</a></div></div>\n\
<div class=\"ttc\" id=\"qvarlengtharray_8h_html_a2401c0ba7887478d8177c8df89e35fe1\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qvarlengtharray_8h.html#a2401c0ba7887478d8177c8df89e35fe1\">operator!=</a></div><div class=\"ttdeci\">bool operator!=(const QVarLengthArray&lt; T, Prealloc1 &gt; &amp;l, const QVarLengthArray&lt; T, Prealloc2 &gt; &amp;r)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00395\">qvarlengtharray.h:395</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_ab8e4e3e2a7bf18888b71bdf9dda0770b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#ab8e4e3e2a7bf18888b71bdf9dda0770b\">QVarLengthArray::size</a></div><div class=\"ttdeci\">int size() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00096\">qvarlengtharray.h:96</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_aa4b02d4f1a8500fb07a551069060709f\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#aa4b02d4f1a8500fb07a551069060709f\">QVarLengthArray::begin</a></div><div class=\"ttdeci\">const_iterator begin() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00158\">qvarlengtharray.h:158</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a653819996e713edf9c01a5b564199189\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a653819996e713edf9c01a5b564199189\">t</a></div><div class=\"ttdeci\">GLdouble GLdouble t</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01181\">GLee.h:1181</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html_ac10725c642e865540e4faaf733ff95ff\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html#ac10725c642e865540e4faaf733ff95ff\">QT_END_HEADER</a></div><div class=\"ttdeci\">#define QT_END_HEADER</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qglobal_8h_source.html#l00142\">qglobal.h:142</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a13aab4c3c59bee655d8a08d41200a7ab\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a13aab4c3c59bee655d8a08d41200a7ab\">QVarLengthArray::insert</a></div><div class=\"ttdeci\">iterator insert(iterator before, const T &amp;x)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00164\">qvarlengtharray.h:164</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a691492ec0bd6383f91200e49f6ae40ed\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a691492ec0bd6383f91200e49f6ae40ed\">f</a></div><div class=\"ttdeci\">GLclampf f</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l09303\">GLee.h:9303</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a350132543d80a1c1e5be844e6d2878ea\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a350132543d80a1c1e5be844e6d2878ea\">QVarLengthArray::end</a></div><div class=\"ttdeci\">const_iterator end() const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00161\">qvarlengtharray.h:161</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a8f853268a6a93ade1ff556b79420cda3\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a8f853268a6a93ade1ff556b79420cda3\">size</a></div><div class=\"ttdeci\">GLsizeiptr size</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01561\">GLee.h:1561</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a21e58a4115e3fe476f7a6677c14c54fa\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a21e58a4115e3fe476f7a6677c14c54fa\">QVarLengthArray::operator[]</a></div><div class=\"ttdeci\">const T &amp; operator[](int idx) const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00109\">qvarlengtharray.h:109</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a6c576dd91551fb5ab1a6f927224894b5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a6c576dd91551fb5ab1a6f927224894b5\">QVarLengthArray::value</a></div><div class=\"ttdeci\">T value(int i) const </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00292\">qvarlengtharray.h:292</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_var_length_array_html_a3e4e2cc8c6f17ec0affa4c223cea4e20\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_var_length_array.html#a3e4e2cc8c6f17ec0affa4c223cea4e20\">QVarLengthArray::difference_type</a></div><div class=\"ttdeci\">qptrdiff difference_type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00151\">qvarlengtharray.h:151</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_pod_list_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_pod_list.html\">QPodList</a></div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvarlengtharray_8h_source.html#l00059\">qvarlengtharray.h:59</a></div></div>\n\
</div><!-- fragment --></div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";