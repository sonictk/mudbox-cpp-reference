var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>PtexExtractor/ptex/zlib/zconf.h</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_ptex_extractor_2ptex_2zlib_2zconf_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>PtexExtractor/ptex/zlib/zconf.h</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">PtexExtractor/ptex/zlib/zconf.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">/* zconf.h -- configuration of the zlib compression library</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * Copyright (C) 1995-2010 Jean-loup Gailly.</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * For conditions of distribution and use, see copyright notice in zlib.h</span></div>\n\
<div class=\"line\"><span class=\"comment\"> */</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* @(#) $Id$ */</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef ZCONF_H</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define ZCONF_H</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * If you *really* need a unique prefix for all types and library functions,</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * compile with -DZ_PREFIX. The &quot;standard&quot; zlib should be compiled without it.</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * Even better than compiling with -DZ_PREFIX would be to use configure to set</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * this permanently in zconf.h using &quot;./configure --zprefix&quot;.</span></div>\n\
<div class=\"line\"><span class=\"comment\"> */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef Z_PREFIX     </span><span class=\"comment\">/* may be set to #if 1 by ./configure */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* all linked symbols */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _dist_code            z__dist_code</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _length_code          z__length_code</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _tr_align             z__tr_align</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _tr_flush_block       z__tr_flush_block</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _tr_init              z__tr_init</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _tr_stored_block      z__tr_stored_block</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define _tr_tally             z__tr_tally</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define adler32               z_adler32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define adler32_combine       z_adler32_combine</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define adler32_combine64     z_adler32_combine64</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define compress              z_compress</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define compress2             z_compress2</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define compressBound         z_compressBound</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define crc32                 z_crc32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define crc32_combine         z_crc32_combine</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define crc32_combine64       z_crc32_combine64</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflate               z_deflate</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateBound          z_deflateBound</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateCopy           z_deflateCopy</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateEnd            z_deflateEnd</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateInit2_         z_deflateInit2_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateInit_          z_deflateInit_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateParams         z_deflateParams</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflatePrime          z_deflatePrime</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateReset          z_deflateReset</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateSetDictionary  z_deflateSetDictionary</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateSetHeader      z_deflateSetHeader</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflateTune           z_deflateTune</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define deflate_copyright     z_deflate_copyright</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define get_crc_table         z_get_crc_table</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gz_error              z_gz_error</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gz_intmax             z_gz_intmax</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gz_strwinerror        z_gz_strwinerror</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzbuffer              z_gzbuffer</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzclearerr            z_gzclearerr</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzclose               z_gzclose</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzclose_r             z_gzclose_r</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzclose_w             z_gzclose_w</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzdirect              z_gzdirect</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzdopen               z_gzdopen</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzeof                 z_gzeof</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzerror               z_gzerror</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzflush               z_gzflush</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzgetc                z_gzgetc</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzgets                z_gzgets</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzoffset              z_gzoffset</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzoffset64            z_gzoffset64</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzopen                z_gzopen</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzopen64              z_gzopen64</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzprintf              z_gzprintf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzputc                z_gzputc</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzputs                z_gzputs</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzread                z_gzread</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzrewind              z_gzrewind</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzseek                z_gzseek</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzseek64              z_gzseek64</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzsetparams           z_gzsetparams</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gztell                z_gztell</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gztell64              z_gztell64</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzungetc              z_gzungetc</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzwrite               z_gzwrite</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflate               z_inflate</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateBack           z_inflateBack</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateBackEnd        z_inflateBackEnd</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateBackInit_      z_inflateBackInit_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateCopy           z_inflateCopy</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateEnd            z_inflateEnd</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateGetHeader      z_inflateGetHeader</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateInit2_         z_inflateInit2_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateInit_          z_inflateInit_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateMark           z_inflateMark</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflatePrime          z_inflatePrime</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateReset          z_inflateReset</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateReset2         z_inflateReset2</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateSetDictionary  z_inflateSetDictionary</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateSync           z_inflateSync</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateSyncPoint      z_inflateSyncPoint</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflateUndermine      z_inflateUndermine</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflate_copyright     z_inflate_copyright</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflate_fast          z_inflate_fast</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define inflate_table         z_inflate_table</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define uncompress            z_uncompress</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define zError                z_zError</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define zcalloc               z_zcalloc</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define zcfree                z_zcfree</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define zlibCompileFlags      z_zlibCompileFlags</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define zlibVersion           z_zlibVersion</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* all zlib typedefs in zlib.h and zconf.h */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define Byte                  z_Byte</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define Bytef                 z_Bytef</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define alloc_func            z_alloc_func</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define charf                 z_charf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define free_func             z_free_func</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gzFile                z_gzFile</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gz_header             z_gz_header</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gz_headerp            z_gz_headerp</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define in_func               z_in_func</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define intf                  z_intf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define out_func              z_out_func</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define uInt                  z_uInt</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define uIntf                 z_uIntf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define uLong                 z_uLong</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define uLongf                z_uLongf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define voidp                 z_voidp</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define voidpc                z_voidpc</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define voidpf                z_voidpf</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* all zlib structs in zlib.h and zconf.h */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define gz_header_s           z_gz_header_s</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define internal_state        z_internal_state</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__MSDOS__) &amp;&amp; !defined(MSDOS)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define MSDOS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if (defined(OS_2) || defined(__OS2__)) &amp;&amp; !defined(OS2)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define OS2</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_WINDOWS) &amp;&amp; !defined(WINDOWS)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define WINDOWS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_WIN32) || defined(_WIN32_WCE) || defined(__WIN32__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifndef WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if (defined(MSDOS) || defined(OS2) || defined(WINDOWS)) &amp;&amp; !defined(WIN32)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  if !defined(__GNUC__) &amp;&amp; !defined(__FLAT__) &amp;&amp; !defined(__386__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifndef SYS16BIT</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define SYS16BIT</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * Compile with -DMAXSEG_64K if the alloc function cannot allocate more</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * than 64k bytes at a time (needed on systems with 16-bit int).</span></div>\n\
<div class=\"line\"><span class=\"comment\"> */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef SYS16BIT</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define MAXSEG_64K</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef MSDOS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define UNALIGNED_OK</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef __STDC_VERSION__</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifndef STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  if __STDC_VERSION__ &gt;= 199901L</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifndef STDC99</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define STDC99</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined(STDC) &amp;&amp; (defined(__STDC__) || defined(__cplusplus))</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined(STDC) &amp;&amp; (defined(__GNUC__) || defined(__BORLANDC__))</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined(STDC) &amp;&amp; (defined(MSDOS) || defined(WINDOWS) || defined(WIN32))</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined(STDC) &amp;&amp; (defined(OS2) || defined(__HOS_AIX__))</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__OS400__) &amp;&amp; !defined(STDC)    </span><span class=\"comment\">/* iSeries (formerly AS/400). */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifndef const </span><span class=\"comment\">/* cannot use !defined(STDC) &amp;&amp; !defined(const) on Mac */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define const       </span><span class=\"comment\">/* note: need a more gentle solution here */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* Some Mac compilers merge all .h files incorrectly: */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define NO_DUMMY_DECL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* Maximum value for memLevel in deflateInit2 */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef MAX_MEM_LEVEL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifdef MAXSEG_64K</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define MAX_MEM_LEVEL 8</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define MAX_MEM_LEVEL 9</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* Maximum value for windowBits in deflateInit2 and inflateInit2.</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * WARNING: reducing MAX_WBITS makes minigzip unable to extract .gz files</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * created by gzip. (Files created by minigzip can still be extracted by</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * gzip.)</span></div>\n\
<div class=\"line\"><span class=\"comment\"> */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef MAX_WBITS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define MAX_WBITS   15 </span><span class=\"comment\">/* 32K LZ77 window */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* The memory requirements for deflate are (in bytes):</span></div>\n\
<div class=\"line\"><span class=\"comment\">            (1 &lt;&lt; (windowBits+2)) +  (1 &lt;&lt; (memLevel+9))</span></div>\n\
<div class=\"line\"><span class=\"comment\"> that is: 128K for windowBits=15  +  128K for memLevel = 8  (default values)</span></div>\n\
<div class=\"line\"><span class=\"comment\"> plus a few kilobytes for small objects. For example, if you want to reduce</span></div>\n\
<div class=\"line\"><span class=\"comment\"> the default memory requirements from 256K to 128K, compile with</span></div>\n\
<div class=\"line\"><span class=\"comment\">     make CFLAGS=&quot;-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7&quot;</span></div>\n\
<div class=\"line\"><span class=\"comment\"> Of course this will generally degrade compression (there&#39;s no free lunch).</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">   The memory requirements for inflate are (in bytes) 1 &lt;&lt; windowBits</span></div>\n\
<div class=\"line\"><span class=\"comment\"> that is, 32K for windowBits=15 (default value) plus a few kilobytes</span></div>\n\
<div class=\"line\"><span class=\"comment\"> for small objects.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"comment\">/* Type declarations */</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef OF </span><span class=\"comment\">/* function prototypes */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifdef STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define OF(args)  args</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define OF(args)  ()</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* The following definitions for FAR are needed only for MSDOS mixed</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * model programming (small or medium model with some far allocations).</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * This was tested only with MSC; for other MSDOS compilers you may have</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * to define NO_MEMCPY in zutil.h.  If you don&#39;t need the mixed model,</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * just define FAR to be empty.</span></div>\n\
<div class=\"line\"><span class=\"comment\"> */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef SYS16BIT</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  if defined(M_I86SM) || defined(M_I86MM)</span></div>\n\
<div class=\"line\">     <span class=\"comment\">/* MSC small or medium model */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define SMALL_MEDIUM</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifdef _MSC_VER</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define FAR _far</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define FAR far</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  if (defined(__SMALL__) || defined(__MEDIUM__))</span></div>\n\
<div class=\"line\">     <span class=\"comment\">/* Turbo C small or medium model */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define SMALL_MEDIUM</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifdef __BORLANDC__</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define FAR _far</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define FAR far</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(WINDOWS) || defined(WIN32)</span></div>\n\
<div class=\"line\">   <span class=\"comment\">/* If building or using zlib as a DLL, define ZLIB_DLL.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    * This is not mandatory, but it offers a little performance increase.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifdef ZLIB_DLL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    if defined(WIN32) &amp;&amp; (!defined(__BORLANDC__) || (__BORLANDC__ &gt;= 0x500))</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      ifdef ZLIB_INTERNAL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#        define ZEXTERN extern __declspec(dllexport)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#        define ZEXTERN extern __declspec(dllimport)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif  </span><span class=\"comment\">/* ZLIB_DLL */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\">   <span class=\"comment\">/* If building or using zlib with the WINAPI/WINAPIV calling convention,</span></div>\n\
<div class=\"line\"><span class=\"comment\">    * define ZLIB_WINAPI.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    * Caution: the standard ZLIB1.DLL is NOT compiled using ZLIB_WINAPI.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifdef ZLIB_WINAPI</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifdef FAR</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      undef FAR</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    include &lt;windows.h&gt;</span></div>\n\
<div class=\"line\">     <span class=\"comment\">/* No need for _export, use ZLIB.DEF instead. */</span></div>\n\
<div class=\"line\">     <span class=\"comment\">/* For complete Windows compatibility, use WINAPI, not __stdcall. */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define ZEXPORT WINAPI</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifdef WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define ZEXPORTVA WINAPIV</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define ZEXPORTVA FAR CDECL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined (__BEOS__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifdef ZLIB_DLL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    ifdef ZLIB_INTERNAL</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define ZEXPORT   __declspec(dllexport)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define ZEXPORTVA __declspec(dllexport)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define ZEXPORT   __declspec(dllimport)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#      define ZEXPORTVA __declspec(dllimport)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef ZEXTERN</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define ZEXTERN extern</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef ZEXPORT</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define ZEXPORT</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef ZEXPORTVA</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define ZEXPORTVA</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef FAR</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define FAR</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined(__MACTYPES__)</span></div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">char</span>  Byte;  <span class=\"comment\">/* 8 bits */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>   uInt;  <span class=\"comment\">/* 16 bits or more */</span></div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">long</span>  uLong; <span class=\"comment\">/* 32 bits or more */</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef SMALL_MEDIUM</span></div>\n\
<div class=\"line\">   <span class=\"comment\">/* Borland C/C++ and some old MSC versions ignore FAR inside typedef */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define Bytef Byte FAR</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> Byte  FAR Bytef;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keywordtype\">char</span>  FAR charf;</div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keywordtype\">int</span>   FAR intf;</div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> uInt  FAR uIntf;</div>\n\
<div class=\"line\"><span class=\"keyword\">typedef</span> uLong FAR uLongf;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef STDC</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> <span class=\"keywordtype\">void</span> <span class=\"keyword\">const</span> *voidpc;</div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> <span class=\"keywordtype\">void</span> FAR   *voidpf;</div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> <span class=\"keywordtype\">void</span>       *voidp;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> Byte <span class=\"keyword\">const</span> *voidpc;</div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> Byte FAR   *voidpf;</div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> Byte       *voidp;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef HAVE_UNISTD_H    </span><span class=\"comment\">/* may be set to #if 1 by ./configure */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define Z_HAVE_UNISTD_H</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef STDC</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  include &lt;sys/types.h&gt;</span>    <span class=\"comment\">/* for off_t */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* a little trick to accommodate both &quot;#define _LARGEFILE64_SOURCE&quot; and</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * &quot;#define _LARGEFILE64_SOURCE 1&quot; as requesting 64-bit operations, (even</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * though the former does not conform to the LFS document), but considering</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * both &quot;#undef _LARGEFILE64_SOURCE&quot; and &quot;#define _LARGEFILE64_SOURCE 0&quot; as</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * equivalently requesting no 64-bit operations</span></div>\n\
<div class=\"line\"><span class=\"comment\"> */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if -_LARGEFILE64_SOURCE - -1 == 1</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  undef _LARGEFILE64_SOURCE</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(Z_HAVE_UNISTD_H) || defined(_LARGEFILE64_SOURCE)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  include &lt;unistd.h&gt;</span>       <span class=\"comment\">/* for SEEK_* and off_t */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifdef VMS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    include &lt;unixio.h&gt;</span>     <span class=\"comment\">/* for off_t */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  ifndef z_off_t</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#    define z_off_t off_t</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef SEEK_SET</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define SEEK_SET        0       </span><span class=\"comment\">/* Seek from beginning of file.  */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define SEEK_CUR        1       </span><span class=\"comment\">/* Seek from current position.  */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define SEEK_END        2       </span><span class=\"comment\">/* Set file pointer to EOF plus &quot;offset&quot; */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef z_off_t</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define z_off_t long</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_LARGEFILE64_SOURCE) &amp;&amp; _LFS64_LARGEFILE-0</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define z_off64_t off64_t</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define z_off64_t z_off_t</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__OS400__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define NO_vsnprintf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__MVS__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#  define NO_vsnprintf</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* MVS linker does not support external names larger than 8 bytes */</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__MVS__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(deflateInit_,&quot;DEIN&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(deflateInit2_,&quot;DEIN2&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(deflateEnd,&quot;DEEND&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(deflateBound,&quot;DEBND&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflateInit_,&quot;ININ&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflateInit2_,&quot;ININ2&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflateEnd,&quot;INEND&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflateSync,&quot;INSY&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflateSetDictionary,&quot;INSEDI&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(compressBound,&quot;CMBND&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflate_table,&quot;INTABL&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflate_fast,&quot;INFA&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">  #pragma map(inflate_copyright,&quot;INCOPY&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif </span><span class=\"comment\">/* ZCONF_H */</span><span class=\"preprocessor\"></span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";