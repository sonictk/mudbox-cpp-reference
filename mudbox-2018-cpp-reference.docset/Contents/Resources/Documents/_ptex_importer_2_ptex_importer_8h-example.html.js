var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>PtexImporter/PtexImporter.h</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_ptex_importer_2_ptex_importer_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>PtexImporter/PtexImporter.h</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">PtexImporter/PtexImporter.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#if !defined PTEX_IMPORTER</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define PTEX_IMPORTER</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2011, 2012 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: PTEX texture importer</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CREATED: January 2011</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(JAMBUILD) || defined(__APPLE__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html\">Mudbox/mudbox.h</a>&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/_u_v_mesh_grid_8h.html\">UVlessPainting/UVMeshGrid.h</a>&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/_u_v_generator_interface_8h.html\">UVlessPainting/UVGeneratorInterface.h</a>&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;<a class=\"code\" href=\"#!/url=./cpp_ref/_edge_bleeding_8h.html\">EdgeBleeding/EdgeBleeding.h</a>&gt;</span>                                      </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/Mudbox/mudbox.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/UVlessPainting/UVGeneratorInterface.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;../../include/EdgeBleeding/EdgeBleeding.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;ptex/Ptexture.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html\">mudbox</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// We will refuse to import ptex files with polys larger than MAX_EDGE_COUNT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Don&#39;t make this too large -- staticly sized arrays on the stack will</span></div>\n\
<div class=\"line\"><span class=\"comment\">// be sized based on this. It should be more than 5, definitely less than 500.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It is very possible that other parts of Mudbox will break when presented with </span></div>\n\
<div class=\"line\"><span class=\"comment\">// a 100 edge poly -- I&#39;ve never tried it....</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MAX_EDGE_COUNT 100</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Cross reference our face ids with the ptex face ids.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Each ptex face will create 1 or more Mudbox faces.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The map is indexed by PTex parent Face ID, and for each of those, will give the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// start MudboxFaceID and the number of triangles the PTexFace</span></div>\n\
<div class=\"line\"><span class=\"comment\">// has been tessellated into. It also gives the Ptex subface index for the first</span></div>\n\
<div class=\"line\"><span class=\"comment\">// subface.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The Mudbox FaceIDs for those faces will </span></div>\n\
<div class=\"line\"><span class=\"comment\">// be m_MBFaceID, m_MBFaceID+1, ... m_MBFaceID+m_NumTessellatedFaces-1</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>FaceMapEntry {              <span class=\"comment\">// there is one of these for each PTex Face / n-gon poly.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>    m_NumTessellatedFaces; <span class=\"comment\">// How many Mudbox triangles has this been tessellated into.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>    m_NumEdges;            <span class=\"comment\">// how many edges in the poly.                  </span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>    m_MBFaceID;            <span class=\"comment\">// Index of the first triangle in the Mudbox Mesh (or of the quad if its an all quad mesh).</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>    m_PTexSubfaceID;       <span class=\"comment\">// indes of the first ptex subface where the texture data can be read from the ptex file</span></div>\n\
<div class=\"line\">    FaceMapEntry() : m_NumTessellatedFaces(0), m_NumEdges(0), m_MBFaceID(0), m_PTexSubfaceID(0) {};</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>PtexImporter : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_importer.html\">Importer</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/qcoreapplication_8h.html#af36246d0c49dc6f1d54e495dd2c0a4ef\">Q_DECLARE_TR_FUNCTIONS</a>(PtexImporter);</div>\n\
<div class=\"line\">    <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a431009564592a24e5f46f5df421131a1\">DECLARE_CLASS</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Make sure everything is initialized, if only to ensure determinism.</span></div>\n\
<div class=\"line\">    PtexImporter() : m_allQuads(false),</div>\n\
<div class=\"line\">                     m_iFaceCount(0),               </div>\n\
<div class=\"line\">                     m_iSubFaceCount(0),            </div>\n\
<div class=\"line\">                     m_maxFaceSize(0),              </div>\n\
<div class=\"line\">                     m_minFaceSize(0),              </div>\n\
<div class=\"line\">                     m_iTotalTesselatedFaceCount(0),</div>\n\
<div class=\"line\">                     m_FaceMap(0),       </div>\n\
<div class=\"line\">                     m_ReverseFaceMap(0) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        memset(m_hist, 0, MAX_EDGE_COUNT * <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">int</span>));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Returns the file extension and description of the supported file by the plugin.</span></div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;FileExtension&gt;</a> SupportedExtensions( <span class=\"keywordtype\">void</span> )<span class=\"keyword\"> const </span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{ </div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;FileExtension&gt;</a> ret; </div>\n\
<div class=\"line\">        ret.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ab32da790af34509a87008eacf308e3f6\">push_back</a>(<a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_file_extension.html\">FileExtension</a>(<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;ptx&quot;</span>), tr(<span class=\"stringliteral\">&quot;Ptex File&quot;</span>), <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_file_extension.html#aa705cf7e79a21c2352b00ffe20cd295faa8ff69e8d2d1f72500fc510fc90312ad\">FileExtension::flagNoTextureCoordinates</a>)); </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> ret; </div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Import a file, main function of the class.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> Import( <span class=\"keyword\">const</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName, <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/structmudbox_1_1_scene_1_1_load_data.html\">Scene::LoadData</a> &amp;cData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This function creates a mesh from the metadata in a ptex file. If there is no mesh </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// metadata in the ptex file, it will return NULL.</span></div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html\">Mesh</a> *CreateMeshFromPtex( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName, <span class=\"keywordtype\">bool</span> makeMesh = <span class=\"keyword\">true</span>, <span class=\"keywordtype\">bool</span> silent = <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If there is no mesh data in the ptex file, you can call this to build the cross reference</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// tables to go from ptex ids to mudbox and back.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>          BuildMapsFromBaseMesh(<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html\">Mesh</a> *pMesh);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>          m_allQuads;                  <span class=\"comment\">// true if the ptex file is all quads</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           m_iFaceCount;                <span class=\"comment\">// count of ptex polys (quads, tris and ngons each count as 1)</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           m_iSubFaceCount;             <span class=\"comment\">// in this many quad faces (tris and ngons subdivided into quad subfaces)</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           m_maxFaceSize;               <span class=\"comment\">// min and max edge count for the ptex faces</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           m_minFaceSize;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           m_iTotalTesselatedFaceCount; <span class=\"comment\">// how many triangles are we making in total for the mudbox mesh</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    FaceMapEntry *m_FaceMap;                   <span class=\"comment\">// map of ptex faces to mudbox faces and ptex subfaces</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>          *m_ReverseFaceMap;            <span class=\"comment\">// map from Mudbox faceID to ptex face (not subface) id </span></div>\n\
<div class=\"line\">                                               <span class=\"comment\">// to get the subface, take the result of this map and index into the FaceMap</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           m_hist[MAX_EDGE_COUNT];      <span class=\"comment\">// a histogram of PTex poly edge counts</span></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";