var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>VertexAdjacency Struct Reference</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'structmudbox_1_1_vertex_adjacency.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>VertexAdjacency Struct Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">VertexAdjacency Struct Reference</div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"structmudbox_1_1_vertex_adjacency.html#pub-methods\">Public Member Functions</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><p>Represents face adjacency data for a vertex. </p>\n\
<p>This class contains an index to a face, and a corner of that face. There is one <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html\" title=\"Represents face adjacency data for a vertex. \">VertexAdjacency</a> structure for each vertex. You can easily determine which faces are touching a vertex with this data. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00183\">183</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>.</p>\n\
</div><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a329f9e5e247ef4898e9c0cab08a21a86\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#a329f9e5e247ef4898e9c0cab08a21a86\">VertexAdjacency</a> ()</td></tr>\n\
<tr class=\"memdesc:a329f9e5e247ef4898e9c0cab08a21a86\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Constructs a invalid adjacency structure.  <a href=\"structmudbox_1_1_vertex_adjacency.html#a329f9e5e247ef4898e9c0cab08a21a86\">More...</a><br></td></tr>\n\
<tr class=\"separator:a329f9e5e247ef4898e9c0cab08a21a86\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a67eec562b002b7c888920c0940947064\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#a67eec562b002b7c888920c0940947064\">VertexAdjacency</a> (unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> iFaceIndex, unsigned char iCornerIndex)</td></tr>\n\
<tr class=\"memdesc:a67eec562b002b7c888920c0940947064\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Constructs an adjacency struture with the specified face and corner indices.  <a href=\"structmudbox_1_1_vertex_adjacency.html#a67eec562b002b7c888920c0940947064\">More...</a><br></td></tr>\n\
<tr class=\"separator:a67eec562b002b7c888920c0940947064\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afa8720abaf6972d6dac22a8cd1a67225\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#afa8720abaf6972d6dac22a8cd1a67225\">IsValid</a> () const </td></tr>\n\
<tr class=\"memdesc:afa8720abaf6972d6dac22a8cd1a67225\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns true if this structure is valid, false otherwise.  <a href=\"structmudbox_1_1_vertex_adjacency.html#afa8720abaf6972d6dac22a8cd1a67225\">More...</a><br></td></tr>\n\
<tr class=\"separator:afa8720abaf6972d6dac22a8cd1a67225\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa41574af79b2c541909a64572117ed3a\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#aa41574af79b2c541909a64572117ed3a\">FaceIndex</a> () const </td></tr>\n\
<tr class=\"memdesc:aa41574af79b2c541909a64572117ed3a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the face index of a face which is touching the vertex that corresponds to this structure If <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#afa8720abaf6972d6dac22a8cd1a67225\" title=\"Returns true if this structure is valid, false otherwise. \">VertexAdjacency::IsValid()</a> returns false, the return value of this method is undefined.  <a href=\"structmudbox_1_1_vertex_adjacency.html#aa41574af79b2c541909a64572117ed3a\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa41574af79b2c541909a64572117ed3a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a526716841c15de683553c333d2770fcd\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned char&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#a526716841c15de683553c333d2770fcd\">CornerIndex</a> () const </td></tr>\n\
<tr class=\"memdesc:a526716841c15de683553c333d2770fcd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the corner index of a face which is touching the vertex that corresponds to this structure If <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#afa8720abaf6972d6dac22a8cd1a67225\" title=\"Returns true if this structure is valid, false otherwise. \">VertexAdjacency::IsValid()</a> returns false, the return value of this method is undefined.  <a href=\"structmudbox_1_1_vertex_adjacency.html#a526716841c15de683553c333d2770fcd\">More...</a><br></td></tr>\n\
<tr class=\"separator:a526716841c15de683553c333d2770fcd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a329f9e5e247ef4898e9c0cab08a21a86\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html\">VertexAdjacency</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Constructs a invalid adjacency structure. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00188\">188</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00188\"></a><span class=\"lineno\">  188</span>&#160;: m_iFaceIndex(<a class=\"code\" href=\"#!/url=./cpp_ref/mesh_8h.html#a483b0a38edf0c10ef4a7cb633dc8a9fc\">INVALID_ID</a>), m_iCornerIndex(0xff) {};</div>\n\
<div class=\"ttc\" id=\"mesh_8h_html_a483b0a38edf0c10ef4a7cb633dc8a9fc\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/mesh_8h.html#a483b0a38edf0c10ef4a7cb633dc8a9fc\">INVALID_ID</a></div><div class=\"ttdeci\">#define INVALID_ID</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00047\">mesh.h:47</a></div></div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a67eec562b002b7c888920c0940947064\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html\">VertexAdjacency</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a>&#160;</td>\n\
          <td class=\"paramname\"><em>iFaceIndex</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned char&#160;</td>\n\
          <td class=\"paramname\"><em>iCornerIndex</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Constructs an adjacency struture with the specified face and corner indices. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00191\">191</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;                                                                                  :</div>\n\
<div class=\"line\"><a name=\"l00192\"></a><span class=\"lineno\">  192</span>&#160;        m_iFaceIndex(iFaceIndex), m_iCornerIndex(iCornerIndex) {};</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"afa8720abaf6972d6dac22a8cd1a67225\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsValid </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a3db05964a3cc4410f35b7ea2b7eb850d\">void</a>&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns true if this structure is valid, false otherwise. </p>\n\
<p>Use this method to determine if a vertex is adjacent to any faces. If this method returns false, it means that the vertex is not used by any face. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00197\">197</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00197\"></a><span class=\"lineno\">  197</span>&#160;{ <span class=\"keywordflow\">return</span> m_iCornerIndex &lt; 0xff; }</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa41574af79b2c541909a64572117ed3a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a0067a505d12f13572b26d9535c23b671\">int</a> FaceIndex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the face index of a face which is touching the vertex that corresponds to this structure If <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#afa8720abaf6972d6dac22a8cd1a67225\" title=\"Returns true if this structure is valid, false otherwise. \">VertexAdjacency::IsValid()</a> returns false, the return value of this method is undefined. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00201\">201</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00201\"></a><span class=\"lineno\">  201</span>&#160;{ <span class=\"keywordflow\">return</span> m_iFaceIndex; }</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a526716841c15de683553c333d2770fcd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned char CornerIndex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the corner index of a face which is touching the vertex that corresponds to this structure If <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/structmudbox_1_1_vertex_adjacency.html#afa8720abaf6972d6dac22a8cd1a67225\" title=\"Returns true if this structure is valid, false otherwise. \">VertexAdjacency::IsValid()</a> returns false, the return value of this method is undefined. </p>\n\
\n\
<p>Definition at line <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html#l00205\">205</a> of file <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a>.</p>\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00205\"></a><span class=\"lineno\">  205</span>&#160;{ <span class=\"keywordflow\">return</span> m_iCornerIndex; }</div>\n\
</div><!-- fragment -->\n\
</div>\n\
</div>\n\
<hr>The documentation for this struct was generated from the following file:<ul>\n\
<li>Mudbox/<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mesh_8h_source.html\">mesh.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";