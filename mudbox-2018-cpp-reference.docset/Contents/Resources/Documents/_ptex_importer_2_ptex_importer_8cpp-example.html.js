var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>PtexImporter/PtexImporter.cpp</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_ptex_importer_2_ptex_importer_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>PtexImporter/PtexImporter.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">PtexImporter/PtexImporter.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2011, 2012 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: PTEX texture importer</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CREATED: January 2011</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PtexImporter.h&quot;</span>      </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PtexPaintLayerImporter.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a1d51ad935ab5d26fe95dff62601b602c\">IMPLEMENT_CLASS</a>( PtexImporter, Importer, <span class=\"stringliteral\">&quot;pteximporter&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> PtexImporter::Import( <span class=\"keyword\">const</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName, Scene::LoadData &amp; )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html\">mudbox::Mesh</a> *pMesh = CreateMeshFromPtex( sFileName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!pMesh)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    PtexPaintLayerImporter *pI = CreateInstance&lt;PtexPaintLayerImporter&gt;();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pI) {</div>\n\
<div class=\"line\">        pI-&gt;SetPtexImporter(<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">        pI-&gt;Prepare( sFileName, pMesh, <span class=\"keyword\">false</span>, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">        pI-&gt;Import( sFileName, 0, pMesh, 0 );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_FaceMap != 0) {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] m_FaceMap;</div>\n\
<div class=\"line\">        m_FaceMap = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_ReverseFaceMap != 0) {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] m_ReverseFaceMap;</div>\n\
<div class=\"line\">        m_ReverseFaceMap = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\">Mesh *PtexImporter::CreateMeshFromPtex( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName, </div>\n\
<div class=\"line\">                                        <span class=\"keywordtype\">bool</span> makeMesh, <span class=\"keywordtype\">bool</span> silent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_FaceMap != 0) {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] m_FaceMap;</div>\n\
<div class=\"line\">        m_FaceMap = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_ReverseFaceMap != 0) {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] m_ReverseFaceMap;</div>\n\
<div class=\"line\">        m_ReverseFaceMap = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Ptex::String   <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>;</div>\n\
<div class=\"line\">    <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_byte_array.html\">QByteArray</a>     <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ac8729153468b5dcf13f971b21d84d4e5\">a</a> = <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file.html#a548ef3f34e5265ca50980914ccabbfde\">QFile::encodeName</a>( sFileName );</div>\n\
<div class=\"line\">    PtexTexture  *pT = PtexTexture::open( a.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_byte_array.html#acd2173722996016205933aa3053f895f\">constData</a>(), <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!pT) {</div>\n\
<div class=\"line\">        <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;HUDMessageShow( tr(<span class=\"stringliteral\">&quot;Unable to open PTEX file. Mudbox cannot import it.&quot;</span>),  </div>\n\
<div class=\"line\">                                               <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#a26e31204f799b1a1db85565fc5a98b99a6d1628d017e93eb59b9a74b0cdc9d904\">mudbox::Interface::HUDmsgFade</a> );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>( <span class=\"stringliteral\">&quot;Unable to open PTEX file. Mudbox cannot import it.\\n&quot;</span> ));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pT-&gt;meshType() != Ptex::mt_quad) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;HUDMessageShow( tr(<span class=\"stringliteral\">&quot;This PTEX file is not quadrangular. &quot;</span></div>\n\
<div class=\"line\">                                                  <span class=\"stringliteral\">&quot;Mudbox cannot import it.&quot;</span>),  </div>\n\
<div class=\"line\">                                               <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#a26e31204f799b1a1db85565fc5a98b99a6d1628d017e93eb59b9a74b0cdc9d904\">mudbox::Interface::HUDmsgFade</a> );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>( <span class=\"stringliteral\">&quot;This PTEX file is not quadrangular. Mudbox cannot import it.\\n&quot;</span> ));</div>\n\
<div class=\"line\">        pT-&gt;release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    PtexMetaData *pM = pT-&gt;getMetaData();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !pM ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(<span class=\"stringliteral\">&quot;This PTEX file does not contain mesh information. Mudbox cannot import it.&quot;</span>));  </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!silent) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;HUDMessageShow( tr(<span class=\"stringliteral\">&quot;This PTEX file does not contain mesh information. &quot;</span></div>\n\
<div class=\"line\">                                                      <span class=\"stringliteral\">&quot;Mudbox cannot import it.&quot;</span>),  </div>\n\
<div class=\"line\">                                                   <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#a26e31204f799b1a1db85565fc5a98b99a6d1628d017e93eb59b9a74b0cdc9d904\">mudbox::Interface::HUDmsgFade</a> );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_iFaceCount = 0;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *aFaceSizes = NULL;</div>\n\
<div class=\"line\">    pM-&gt;getValue( <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;PtexFaceVertCounts&quot;</span>), aFaceSizes, m_iFaceCount );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( aFaceSizes == NULL )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;This PTEX file does not contain mesh information. &quot;</span></div>\n\
<div class=\"line\">                          <span class=\"stringliteral\">&quot;Mudbox cannot import it. (2)&quot;</span>));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!silent) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;HUDMessageShow( tr(<span class=\"stringliteral\">&quot;This PTEX file does not contain mesh information. &quot;</span></div>\n\
<div class=\"line\">                                                      <span class=\"stringliteral\">&quot;Mudbox cannot import it.&quot;</span>),  </div>\n\
<div class=\"line\">                                                   <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#a26e31204f799b1a1db85565fc5a98b99a6d1628d017e93eb59b9a74b0cdc9d904\">mudbox::Interface::HUDmsgFade</a> );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> pTexSubFaceCount = pT-&gt;numFaces();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    memset(m_hist, 0, <span class=\"keyword\">sizeof</span>(m_hist));                                </div>\n\
<div class=\"line\">    m_allQuads    = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    m_maxFaceSize = 0;</div>\n\
<div class=\"line\">    m_minFaceSize = INT_MAX;</div>\n\
<div class=\"line\">    m_iTotalTesselatedFaceCount = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = 0; i &lt; m_iFaceCount; i++ ) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> faceSize = aFaceSizes[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (faceSize &lt; MAX_EDGE_COUNT) { </div>\n\
<div class=\"line\">            ++m_hist[faceSize];</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log( <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#a1b7f65502ea5b58cca15f85d9e78ca06\">NTRQ</a>(<span class=\"stringliteral\">&quot;Mudbox can only import PTEX files that &quot;</span></div>\n\
<div class=\"line\">                                <span class=\"stringliteral\">&quot;contain faces with less than %1 sides&quot;</span>).arg(MAX_EDGE_COUNT));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!silent) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;HUDMessageShow( tr(<span class=\"stringliteral\">&quot;Mudbox can only import PTEX files &quot;</span></div>\n\
<div class=\"line\">                                                          <span class=\"stringliteral\">&quot;that contain faces with less than %1 sides&quot;</span>)</div>\n\
<div class=\"line\">                                                       .arg(MAX_EDGE_COUNT),  </div>\n\
<div class=\"line\">                                                       <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#a26e31204f799b1a1db85565fc5a98b99a6d1628d017e93eb59b9a74b0cdc9d904\">mudbox::Interface::HUDmsgFade</a> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (faceSize &lt; 3) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;Mudbox can only import PTEX files that contain faces with at least 3 sides&quot;</span>));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!silent) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Interface()-&gt;HUDMessageShow( tr(<span class=\"stringliteral\">&quot;Mudbox can only import PTEX files that &quot;</span></div>\n\
<div class=\"line\">                                                          <span class=\"stringliteral\">&quot;contain faces with at least 3 sides&quot;</span>),  </div>\n\
<div class=\"line\">                                                       <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_interface.html#a26e31204f799b1a1db85565fc5a98b99a6d1628d017e93eb59b9a74b0cdc9d904\">mudbox::Interface::HUDmsgFade</a> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (faceSize != 4)            m_allQuads    = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (faceSize &gt; m_maxFaceSize) m_maxFaceSize = faceSize;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (faceSize &lt; m_minFaceSize) m_minFaceSize = faceSize;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (m_allQuads) {</div>\n\
<div class=\"line\">        m_iTotalTesselatedFaceCount = m_iFaceCount;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 3; i &lt; m_maxFaceSize+1; ++i) {</div>\n\
<div class=\"line\">            m_iTotalTesselatedFaceCount += (m_hist[i] * (i - 2)); </div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<span class=\"stringliteral\">&quot;\\nPTex Import VertexCount Histogram;\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; MAX_EDGE_COUNT; ++i) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (m_hist[i] != 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(<span class=\"stringliteral\">&quot;    Vertex Count %1, number of faces %2\\n&quot;</span>).arg(i).arg(m_hist[i]));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read vertex positions</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> iVertexDataSize = 0;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *aVertexPositions = NULL;</div>\n\
<div class=\"line\">    pM-&gt;getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;PtexVertPositions&quot;</span>), aVertexPositions, iVertexDataSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( iVertexDataSize%3 || aVertexPositions == NULL ) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(<span class=\"stringliteral\">&quot;Ptex: Vertex DataSize %1, \\n&quot;</span>).arg(iVertexDataSize));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>           iFaceDataSize = 0;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span>    *aFaceData     = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html\">mudbox::Mesh</a> *pMesh         = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read face indices</span></div>\n\
<div class=\"line\">    pM-&gt;getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;PtexFaceVertIndices&quot;</span>), aFaceData, iFaceDataSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( aFaceData == NULL )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(<span class=\"stringliteral\">&quot;Ptex: Max Face Size %5, VertexCount %3, FaceCount %1, &quot;</span></div>\n\
<div class=\"line\">                          <span class=\"stringliteral\">&quot;TesselatedFaceCount = %4, FakeTriangleCount %2\\n\\n&quot;</span>).</div>\n\
<div class=\"line\">                          arg(m_iFaceCount).arg(m_iTotalTesselatedFaceCount - m_iFaceCount).</div>\n\
<div class=\"line\">                          arg(iVertexDataSize/3).</div>\n\
<div class=\"line\">                          arg(m_iTotalTesselatedFaceCount).arg(m_maxFaceSize));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                                           </div>\n\
<div class=\"line\">    <span class=\"comment\">// Create the mesh, and fill the vertex position and face index data.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (makeMesh) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (m_allQuads) {</div>\n\
<div class=\"line\">            pMesh = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Scene()-&gt;CreateMesh( Topology::typeQuadric );</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            pMesh = <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Scene()-&gt;CreateMesh( Topology::typeTriangular );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// if the mesh is not all quads, Mudbox wants it tessellated into triangles.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// each n-gon becomes n-2 triangles. The first triangle of an n-gon is &quot;real&quot;</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the rest are &quot;fake&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a24f4fe4a32c8501c3cae26db72954a30\">MB_ASSERT</a>(m_iTotalTesselatedFaceCount &gt;= m_iFaceCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pMesh) {</div>\n\
<div class=\"line\">        pMesh-&gt;<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#ac8eb33fd4176fbcf3a49dd96f94be339\">SetFaceCount</a>( m_iTotalTesselatedFaceCount );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        pMesh-&gt;<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html#acce0c98815a83a951ca634dbe39e2e24\">SetVertexCount</a>( iVertexDataSize/3 );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = 0; i &lt; iVertexDataSize/3; i++ ) {</div>\n\
<div class=\"line\">                pMesh-&gt;<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html#aa0fb4993513e43516770e8a0e7386712\">SetVertexPosition</a>( i, Vector( aVertexPositions[i*3+0], </div>\n\
<div class=\"line\">                                                     aVertexPositions[i*3+1], </div>\n\
<div class=\"line\">                                                     aVertexPositions[i*3+2] ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!m_allQuads) {</div>\n\
<div class=\"line\">            pMesh-&gt;<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#abd05a8feac402aa9e6bb107ccf282736\">SetFakeTriangleCount</a>(m_iTotalTesselatedFaceCount - m_iFaceCount);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_q_file_info.html\">QFileInfo</a> cFileInfo( sFileName );</div>\n\
<div class=\"line\">        pMesh-&gt;<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html#abbcb71bef5b8aa8a2a9fe8997eb04711\">SetName</a>( cFileInfo.baseName().isEmpty() ? <a class=\"code\" href=\"#!/url=./cpp_ref/i18n_8h.html#aa4e0fec95bdcbdcbe9b3140339e17771\">NTR</a>(<span class=\"stringliteral\">&quot;PTEX_Mesh&quot;</span>) : cFileInfo.baseName() );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> curTri       = 0;                                           </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> curVertex    = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> curSubFaceID = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_FaceMap        = <span class=\"keyword\">new</span> FaceMapEntry[m_iFaceCount];</div>\n\
<div class=\"line\">    m_ReverseFaceMap = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[m_iTotalTesselatedFaceCount];</div>\n\
<div class=\"line\">    memset(m_ReverseFaceMap, 0, m_iTotalTesselatedFaceCount * <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">int</span>));</div>\n\
<div class=\"line\">                                                   </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = 0; i &lt; m_iFaceCount; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (m_allQuads) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pMesh) {</div>\n\
<div class=\"line\">                pMesh-&gt;<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a6134366cd9bdad39c85e80a1853189c9\">SetQuadIndex</a>( i, 0, aFaceData[i * 4 + 0] );</div>\n\
<div class=\"line\">                pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a6134366cd9bdad39c85e80a1853189c9\">SetQuadIndex</a>( i, 1, aFaceData[i * 4 + 1] );</div>\n\
<div class=\"line\">                pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a6134366cd9bdad39c85e80a1853189c9\">SetQuadIndex</a>( i, 2, aFaceData[i * 4 + 2] );          </div>\n\
<div class=\"line\">                pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a6134366cd9bdad39c85e80a1853189c9\">SetQuadIndex</a>( i, 3, aFaceData[i * 4 + 3] );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            m_FaceMap[i].m_NumEdges            = 4;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_NumTessellatedFaces = 1;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_MBFaceID            = i;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_PTexSubfaceID       = curSubFaceID;</div>\n\
<div class=\"line\">            m_ReverseFaceMap[i]                = i;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            curSubFaceID                      += 1; <span class=\"comment\">// quads are 1 face.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span>  faceSize      = aFaceSizes[i];</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span>        subTri        = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            m_FaceMap[i].m_NumEdges  = faceSize;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_MBFaceID  = curTri;</div>\n\
<div class=\"line\">            m_ReverseFaceMap[curTri] = i;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pMesh) {</div>\n\
<div class=\"line\">                pMesh-&gt;<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#aef15606384943e298d2f67a04fbf770c\">SetTriangleIndex</a>( curTri, 0, aFaceData[curVertex + 0] );</div>\n\
<div class=\"line\">                pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#aef15606384943e298d2f67a04fbf770c\">SetTriangleIndex</a>( curTri, 1, aFaceData[curVertex + 1] );</div>\n\
<div class=\"line\">                pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#aef15606384943e298d2f67a04fbf770c\">SetTriangleIndex</a>( curTri, 2, aFaceData[curVertex + 2] );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            ++curTri; ++subTri;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> j = 3; j &lt; faceSize; ++j) {</div>\n\
<div class=\"line\">                m_ReverseFaceMap[curTri] = i;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (pMesh) {</div>\n\
<div class=\"line\">                    pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#aef15606384943e298d2f67a04fbf770c\">SetTriangleIndex</a>( curTri, 0, aFaceData[curVertex + 0    ] );</div>\n\
<div class=\"line\">                    pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#aef15606384943e298d2f67a04fbf770c\">SetTriangleIndex</a>( curTri, 1, aFaceData[curVertex + j - 1] );</div>\n\
<div class=\"line\">                    pMesh-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#aef15606384943e298d2f67a04fbf770c\">SetTriangleIndex</a>( curTri, 2, aFaceData[curVertex + j    ] );</div>\n\
<div class=\"line\">                    pMesh-&gt;<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a13daf37a4d363e3880b3a663e3faf6fe\">SetFakeTriangle</a>(curTri, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                ++curTri; ++subTri;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            curVertex += faceSize;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            m_FaceMap[i].m_NumTessellatedFaces = subTri;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_PTexSubfaceID       = curSubFaceID;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// if it&#39;s a quad, it&#39;s one face, if it&#39;s an n-gon, it&#39;s n quadrangular subfaces.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// (of course, we&#39;ve tessellated that into n-2 triangles) </span></div>\n\
<div class=\"line\">            curSubFaceID += (faceSize == 4) ? 1 : faceSize;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_iSubFaceCount = curSubFaceID;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Log(<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a>(<span class=\"stringliteral\">&quot;Ptex: Computed subface count = %1, actual in file = %2\\n&quot;</span>).</div>\n\
<div class=\"line\">                          arg(m_iSubFaceCount).arg(pTexSubFaceCount));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pMesh) {</div>\n\
<div class=\"line\">        pMesh-&gt;<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html#a57ffbe5c13bcfe051e767d418c856225\">RecalculateAdjacency</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        AddMesh( pMesh );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Material *pMat = CreateInstance&lt;Material&gt;();</div>\n\
<div class=\"line\">        pMesh-&gt;<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_mesh.html#a2f4411607821e44bb787f46d6f84775a\">Geometry</a>()-&gt;<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_geometry.html#adb9f684a165c4f8a1c4c4579a211d19b\">SetMaterial</a>( pMat );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#ae9df9ee935ec6744f98a1585d9db01df\">Kernel</a>()-&gt;Scene()-&gt;AddChild( pMat );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    pT-&gt;release();                              </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> pMesh;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>  PtexImporter::BuildMapsFromBaseMesh(Mesh *pMesh)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!pMesh) </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> polyCount = pMesh-&gt;<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_topology.html#a0e35b2c17d86dbf3d35d45e055f1954d\">FaceCount</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((pMesh-&gt;Type() == Topology::typeQuadric)) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// handle the simple 1:1 case of an all quad mesh;</span></div>\n\
<div class=\"line\">        m_allQuads       = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        m_maxFaceSize    = 4;</div>\n\
<div class=\"line\">        m_minFaceSize    = 4;</div>\n\
<div class=\"line\">        m_hist[4]        = polyCount;</div>\n\
<div class=\"line\">        m_iFaceCount     = m_iTotalTesselatedFaceCount = m_iSubFaceCount = polyCount;</div>\n\
<div class=\"line\">        m_FaceMap        = <span class=\"keyword\">new</span> FaceMapEntry[m_iFaceCount];</div>\n\
<div class=\"line\">        m_ReverseFaceMap = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[m_iTotalTesselatedFaceCount];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; polyCount; ++i) {</div>\n\
<div class=\"line\">            m_FaceMap[i].m_NumEdges            = 4;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_MBFaceID            = i;        </div>\n\
<div class=\"line\">            m_FaceMap[i].m_PTexSubfaceID       = i;</div>\n\
<div class=\"line\">            m_FaceMap[i].m_NumTessellatedFaces = 1;</div>\n\
<div class=\"line\">            m_ReverseFaceMap[i]                = i; </div>\n\
<div class=\"line\">        }   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        m_allQuads     = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        m_maxFaceSize  = 3;</div>\n\
<div class=\"line\">        m_minFaceSize  = 3;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// need to allocate the arrays first, so we need 2 passes, one to </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// collect stats and determine how large the maps are, and one to </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// fill in the maps</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> poly = 0, subface = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; polyCount; ++i) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> edgeCount = 3;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span> (pMesh-&gt;IsFakeTriangle(i+1))  <span class=\"comment\">// safe as it returns false if i+1 is &gt; polyCount</span></div>\n\
<div class=\"line\">            {  </div>\n\
<div class=\"line\">                ++i; ++edgeCount;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            ++poly;</div>\n\
<div class=\"line\">            subface  += (edgeCount == 4) ? 1 : edgeCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            ++m_hist[edgeCount];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (m_minFaceSize &gt; edgeCount) m_minFaceSize = edgeCount;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (m_maxFaceSize &lt; edgeCount) m_maxFaceSize = edgeCount;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        m_iFaceCount                = poly;</div>\n\
<div class=\"line\">        m_iTotalTesselatedFaceCount = polyCount;</div>\n\
<div class=\"line\">        m_iSubFaceCount             = subface;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        m_FaceMap         = <span class=\"keyword\">new</span> FaceMapEntry[m_iFaceCount];</div>\n\
<div class=\"line\">        m_ReverseFaceMap  = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[m_iTotalTesselatedFaceCount];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// walk through the triangles looking at the real/fake ones and construct</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the mappings from poly id to face id and subface id. And back from </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// subface to poly id. </span></div>\n\
<div class=\"line\">        poly = 0, subface = 0;                          </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; polyCount; ++i) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> ff = i;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            m_ReverseFaceMap[i]  = poly;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> edgeCount = 3;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span> (pMesh-&gt;IsFakeTriangle(i+1))  <span class=\"comment\">// safe as it returns false if i+1 is &gt; polyCount</span></div>\n\
<div class=\"line\">            {  </div>\n\
<div class=\"line\">                ++i; ++edgeCount;</div>\n\
<div class=\"line\">                m_ReverseFaceMap[i]  = poly;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            m_FaceMap[poly].m_NumEdges            = edgeCount;</div>\n\
<div class=\"line\">            m_FaceMap[poly].m_MBFaceID            = ff;</div>\n\
<div class=\"line\">            m_FaceMap[poly].m_PTexSubfaceID       = subface;</div>\n\
<div class=\"line\">            m_FaceMap[poly].m_NumTessellatedFaces = edgeCount - 2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            ++poly;</div>\n\
<div class=\"line\">            subface  += (edgeCount == 4) ? 1 : edgeCount;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";