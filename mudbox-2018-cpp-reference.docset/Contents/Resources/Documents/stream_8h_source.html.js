var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MOBPRO\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"GeneralUser\"><meta name=\"created\" content=\"2017-09-08\"><meta name=\"topicid\" content=\"GUID-02FA7DD3-6C7A-4C6A-B7BC-824765AE1CB2\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>Mudbox/stream.h Source File</title>\n\
   \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'stream_8h_source.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Mudbox/stream.h Source File</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>File&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/globals.html\"><span>File&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">stream.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<a href=\"#!/url=./cpp_ref/stream_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><div class=\"line\"><a name=\"l00001\"></a><span class=\"lineno\">    1</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00002\"></a><span class=\"lineno\">    2</span>&#160;<span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><a name=\"l00003\"></a><span class=\"lineno\">    3</span>&#160;<span class=\"comment\">// Copyright (c) 2008 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><a name=\"l00004\"></a><span class=\"lineno\">    4</span>&#160;<span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><a name=\"l00005\"></a><span class=\"lineno\">    5</span>&#160;<span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"l00006\"></a><span class=\"lineno\">    6</span>&#160;<span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><a name=\"l00007\"></a><span class=\"lineno\">    7</span>&#160;<span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><a name=\"l00008\"></a><span class=\"lineno\">    8</span>&#160;<span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><a name=\"l00009\"></a><span class=\"lineno\">    9</span>&#160;<span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"l00010\"></a><span class=\"lineno\">   10</span>&#160;<span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><a name=\"l00011\"></a><span class=\"lineno\">   11</span>&#160;<span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><a name=\"l00012\"></a><span class=\"lineno\">   12</span>&#160;<span class=\"comment\">// CREATED: October 2008</span></div>\n\
<div class=\"line\"><a name=\"l00013\"></a><span class=\"lineno\">   13</span>&#160;<span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><a name=\"l00014\"></a><span class=\"lineno\">   14</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00015\"></a><span class=\"lineno\">   15</span>&#160;<span class=\"keyword\">namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html\">mudbox</a> {</div>\n\
<div class=\"line\"><a name=\"l00016\"></a><span class=\"lineno\">   16</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00017\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/namespacemudbox.html#aecc396f4d247f202e161edaa821bf54a\">   17</a></span>&#160;<span class=\"keyword\">typedef</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html\">Node</a> *<a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#aecc396f4d247f202e161edaa821bf54a\">NodePointer</a>;</div>\n\
<div class=\"line\"><a name=\"l00018\"></a><span class=\"lineno\">   18</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00039\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">   39</a></span>&#160;<span class=\"keyword\">class </span><a class=\"code\" href=\"#!/url=./cpp_ref/dllinterface_8h.html#aecc26481a5bdb4445048f4fb0f3bb417\">MBDLL_DECL</a> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html\">Node</a></div>\n\
<div class=\"line\"><a name=\"l00040\"></a><span class=\"lineno\">   40</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00041\"></a><span class=\"lineno\">   41</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/node_8h.html#a431009564592a24e5f46f5df421131a1\">DECLARE_CLASS</a>;</div>\n\
<div class=\"line\"><a name=\"l00042\"></a><span class=\"lineno\">   42</span>&#160;<span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\"><a name=\"l00044\"></a><span class=\"lineno\">   44</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a>( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00045\"></a><span class=\"lineno\">   45</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00046\"></a><span class=\"lineno\">   46</span>&#160;<span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"><a name=\"l00047\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ab48899087cc647f0f791ed0c459adc53ae2b971523c2bd00ec5b559386cd97015\">   47</a></span>&#160;    <span class=\"keyword\">enum</span> { chunk = 0x800000 };</div>\n\
<div class=\"line\"><a name=\"l00048\"></a><span class=\"lineno\">   48</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00050\"></a><span class=\"lineno\">   50</span>&#160;    <span class=\"keyword\">virtual</span> ~<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a>( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00051\"></a><span class=\"lineno\">   51</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00053\"></a><span class=\"lineno\">   53</span>&#160;    <span class=\"keyword\">virtual</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> FileName( <span class=\"keywordtype\">void</span> ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00054\"></a><span class=\"lineno\">   54</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00064\"></a><span class=\"lineno\">   64</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> IsValid( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00065\"></a><span class=\"lineno\">   65</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00071\"></a><span class=\"lineno\">   71</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> IsOlderThan(</div>\n\
<div class=\"line\"><a name=\"l00072\"></a><span class=\"lineno\">   72</span>&#160;        <span class=\"keywordtype\">int</span> iVersion    </div>\n\
<div class=\"line\"><a name=\"l00073\"></a><span class=\"lineno\">   73</span>&#160;        ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00074\"></a><span class=\"lineno\">   74</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00081\"></a><span class=\"lineno\">   81</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> IsNewerThan(</div>\n\
<div class=\"line\"><a name=\"l00082\"></a><span class=\"lineno\">   82</span>&#160;                             <span class=\"keywordtype\">int</span> iVersion   </div>\n\
<div class=\"line\"><a name=\"l00083\"></a><span class=\"lineno\">   83</span>&#160;                             ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00084\"></a><span class=\"lineno\">   84</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00089\"></a><span class=\"lineno\">   89</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">int</span> ClassVersion( <span class=\"keyword\">const</span> <span class=\"keyword\">class</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_class_desc.html\">ClassDesc</a> *pClass ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00090\"></a><span class=\"lineno\">   90</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00102\"></a><span class=\"lineno\">  102</span>&#160;    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> Type&gt;</div>\n\
<div class=\"line\"><a name=\"l00103\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a8bb70fb115ed751a6241d7f87708a45b\">  103</a></span>&#160;    <span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a8bb70fb115ed751a6241d7f87708a45b\">IsOlderThan</a>(</div>\n\
<div class=\"line\"><a name=\"l00104\"></a><span class=\"lineno\">  104</span>&#160;                     <span class=\"keywordtype\">int</span> iVersion,  </div>\n\
<div class=\"line\"><a name=\"l00105\"></a><span class=\"lineno\">  105</span>&#160;                     Type * </div>\n\
<div class=\"line\"><a name=\"l00106\"></a><span class=\"lineno\">  106</span>&#160;                     )<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ClassVersion( Type::StaticClass() ) &lt; iVersion; };</div>\n\
<div class=\"line\"><a name=\"l00107\"></a><span class=\"lineno\">  107</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00120\"></a><span class=\"lineno\">  120</span>&#160;    <span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> Type&gt;</div>\n\
<div class=\"line\"><a name=\"l00121\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ab7eb54f70ce1d999d32a7b83d0edcf10\">  121</a></span>&#160;    <span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ab7eb54f70ce1d999d32a7b83d0edcf10\">IsNewerThan</a>(</div>\n\
<div class=\"line\"><a name=\"l00122\"></a><span class=\"lineno\">  122</span>&#160;                     <span class=\"keywordtype\">int</span> iVersion,  </div>\n\
<div class=\"line\"><a name=\"l00123\"></a><span class=\"lineno\">  123</span>&#160;                     Type * </div>\n\
<div class=\"line\"><a name=\"l00124\"></a><span class=\"lineno\">  124</span>&#160;                     )<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> ClassVersion( Type::StaticClass() ) &gt; iVersion; };</div>\n\
<div class=\"line\"><a name=\"l00125\"></a><span class=\"lineno\">  125</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00128\"></a><span class=\"lineno\">  128</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> IsStoring( <span class=\"keywordtype\">void</span> ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00129\"></a><span class=\"lineno\">  129</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00132\"></a><span class=\"lineno\">  132</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> SetError( <span class=\"keywordtype\">bool</span> bError );</div>\n\
<div class=\"line\"><a name=\"l00133\"></a><span class=\"lineno\">  133</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00135\"></a><span class=\"lineno\">  135</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">int</span> Version( <span class=\"keywordtype\">void</span> ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00136\"></a><span class=\"lineno\">  136</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00138\"></a><span class=\"lineno\">  138</span>&#160;    <span class=\"keyword\">virtual</span> <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a29940ae63ec06c9998bba873e25407ad\">uint64</a> CurrentPosition( <span class=\"keywordtype\">void</span> ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"><a name=\"l00139\"></a><span class=\"lineno\">  139</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00145\"></a><span class=\"lineno\">  145</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> SetCurrentPosition(</div>\n\
<div class=\"line\"><a name=\"l00146\"></a><span class=\"lineno\">  146</span>&#160;        <a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a29940ae63ec06c9998bba873e25407ad\">uint64</a> iPosition        </div>\n\
<div class=\"line\"><a name=\"l00147\"></a><span class=\"lineno\">  147</span>&#160;        );</div>\n\
<div class=\"line\"><a name=\"l00148\"></a><span class=\"lineno\">  148</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00153\"></a><span class=\"lineno\">  153</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> ReportCorruption( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00154\"></a><span class=\"lineno\">  154</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00158\"></a><span class=\"lineno\">  158</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> Open(</div>\n\
<div class=\"line\"><a name=\"l00159\"></a><span class=\"lineno\">  159</span>&#160;        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFileName,       </div>\n\
<div class=\"line\"><a name=\"l00160\"></a><span class=\"lineno\">  160</span>&#160;        <span class=\"keywordtype\">bool</span> bStoring = <span class=\"keyword\">false</span>,      </div>\n\
<div class=\"line\"><a name=\"l00161\"></a><span class=\"lineno\">  161</span>&#160;        <span class=\"keywordtype\">int</span> iProjectedFileSize = 0,     </div>\n\
<div class=\"line\"><a name=\"l00162\"></a><span class=\"lineno\">  162</span>&#160;        <span class=\"keywordtype\">bool</span> bProgressBar = <span class=\"keyword\">true</span>        </div>\n\
<div class=\"line\"><a name=\"l00163\"></a><span class=\"lineno\">  163</span>&#160;    );</div>\n\
<div class=\"line\"><a name=\"l00164\"></a><span class=\"lineno\">  164</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00166\"></a><span class=\"lineno\">  166</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> Reopen(</div>\n\
<div class=\"line\"><a name=\"l00167\"></a><span class=\"lineno\">  167</span>&#160;        <span class=\"keywordtype\">bool</span> bStoring = <span class=\"keyword\">false</span>   </div>\n\
<div class=\"line\"><a name=\"l00168\"></a><span class=\"lineno\">  168</span>&#160;        );</div>\n\
<div class=\"line\"><a name=\"l00169\"></a><span class=\"lineno\">  169</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00174\"></a><span class=\"lineno\">  174</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> Close( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00175\"></a><span class=\"lineno\">  175</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00177\"></a><span class=\"lineno\">  177</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> Eof( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00178\"></a><span class=\"lineno\">  178</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00183\"></a><span class=\"lineno\">  183</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span> ReadContents( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00184\"></a><span class=\"lineno\">  184</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00190\"></a><span class=\"lineno\">  190</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">size_t</span> Read(</div>\n\
<div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;        <span class=\"keywordtype\">void</span> *pBuffer,  </div>\n\
<div class=\"line\"><a name=\"l00192\"></a><span class=\"lineno\">  192</span>&#160;        <span class=\"keywordtype\">size_t</span> iSize    </div>\n\
<div class=\"line\"><a name=\"l00193\"></a><span class=\"lineno\">  193</span>&#160;        );</div>\n\
<div class=\"line\"><a name=\"l00194\"></a><span class=\"lineno\">  194</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00198\"></a><span class=\"lineno\">  198</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">size_t</span> Write(</div>\n\
<div class=\"line\"><a name=\"l00199\"></a><span class=\"lineno\">  199</span>&#160;        <span class=\"keyword\">const</span> <span class=\"keywordtype\">void</span> *pBuffer,    </div>\n\
<div class=\"line\"><a name=\"l00200\"></a><span class=\"lineno\">  200</span>&#160;        <span class=\"keywordtype\">size_t</span> iSize            </div>\n\
<div class=\"line\"><a name=\"l00201\"></a><span class=\"lineno\">  201</span>&#160;        );</div>\n\
<div class=\"line\"><a name=\"l00202\"></a><span class=\"lineno\">  202</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00204\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#acfc76421d9b8e2d97438672796d3e931\">  204</a></span>&#160;    <span class=\"keyword\">inline</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#acfc76421d9b8e2d97438672796d3e931\">ReadInt</a>( <span class=\"keywordtype\">void</span> ) { <span class=\"keywordtype\">int</span> i=0; <a class=\"code\" href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator &gt;&gt;</a>( i ); <span class=\"keywordflow\">return</span> i; };</div>\n\
<div class=\"line\"><a name=\"l00205\"></a><span class=\"lineno\">  205</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00208\"></a><span class=\"lineno\">  208</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> ReadToFile(</div>\n\
<div class=\"line\"><a name=\"l00209\"></a><span class=\"lineno\">  209</span>&#160;        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFile    </div>\n\
<div class=\"line\"><a name=\"l00210\"></a><span class=\"lineno\">  210</span>&#160;        );</div>\n\
<div class=\"line\"><a name=\"l00211\"></a><span class=\"lineno\">  211</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00213\"></a><span class=\"lineno\">  213</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> WriteFromFile(</div>\n\
<div class=\"line\"><a name=\"l00214\"></a><span class=\"lineno\">  214</span>&#160;        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sFile    </div>\n\
<div class=\"line\"><a name=\"l00215\"></a><span class=\"lineno\">  215</span>&#160;        );</div>\n\
<div class=\"line\"><a name=\"l00216\"></a><span class=\"lineno\">  216</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00218\"></a><span class=\"lineno\">  218</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00219\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a2046a7dea01a756406d96ab2dd27479f\">  219</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> ) { <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a25e5165def787f2fd6c0f93548a981db\">MB_VERIFY_EQ</a>( Read( &amp;v, <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) ), <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00220\"></a><span class=\"lineno\">  220</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00222\"></a><span class=\"lineno\">  222</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00223\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a1390c43eb2da5c7695463605a53ee3a0\">  223</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_s_s_e_8h.html#a48d936d9a8d7c3911d7a6978264d36ba\">operator &lt;&lt;</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> ) { <a class=\"code\" href=\"#!/url=./cpp_ref/mudbox_8h.html#a25e5165def787f2fd6c0f93548a981db\">MB_VERIFY_EQ</a>( Write( &amp;v, <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) ), <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00224\"></a><span class=\"lineno\">  224</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00226\"></a><span class=\"lineno\">  226</span>&#160;    <span class=\"keyword\">virtual</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html\">Node</a> *ReadPointer( <span class=\"keywordtype\">void</span> );</div>\n\
<div class=\"line\"><a name=\"l00227\"></a><span class=\"lineno\">  227</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> WritePointer( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html\">Node</a> *pPointer );</div>\n\
<div class=\"line\"><a name=\"l00228\"></a><span class=\"lineno\">  228</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00232\"></a><span class=\"lineno\">  232</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00233\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a2fb25df21c4f883febd886b8a6b789c6\">  233</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> ) { p = <span class=\"keyword\">dynamic_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *<span class=\"keyword\">&gt;</span>( ReadPointer() ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; }; </div>\n\
<div class=\"line\"><a name=\"l00234\"></a><span class=\"lineno\">  234</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00239\"></a><span class=\"lineno\">  239</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00240\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a8d2ea08c840a72c7cb5f550afcbb4d24\">  240</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_s_s_e_8h.html#a48d936d9a8d7c3911d7a6978264d36ba\">operator &lt;&lt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> *&amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a> ) { WritePointer( p ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00241\"></a><span class=\"lineno\">  241</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00243\"></a><span class=\"lineno\">  243</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00244\"></a><span class=\"lineno\">  244</span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store&lt;type&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"><a name=\"l00245\"></a><span class=\"lineno\">  245</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00247\"></a><span class=\"lineno\">  247</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00248\"></a><span class=\"lineno\">  248</span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;operator &lt;&lt;( const Store&lt;type&gt; &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"><a name=\"l00249\"></a><span class=\"lineno\">  249</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00251\"></a><span class=\"lineno\">  251</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"><a name=\"l00252\"></a><span class=\"lineno\">  252</span>&#160;    <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_s_s_e_8h.html#a48d936d9a8d7c3911d7a6978264d36ba\">operator &lt;&lt;</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"><a name=\"l00253\"></a><span class=\"lineno\">  253</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00257\"></a><span class=\"lineno\">  257</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00258\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a8d9e451e72b53ef89372a27eceec57c4\">  258</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector&lt;type&gt;</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\"><a name=\"l00259\"></a><span class=\"lineno\">  259</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00260\"></a><span class=\"lineno\">  260</span>&#160;        <span class=\"keywordtype\">int</span> iSize = ReadInt();</div>\n\
<div class=\"line\"><a name=\"l00261\"></a><span class=\"lineno\">  261</span>&#160;        s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#ada388d17b93c54a1a0f6edddbe0953ab\">resize</a>( iSize );</div>\n\
<div class=\"line\"><a name=\"l00262\"></a><span class=\"lineno\">  262</span>&#160;        Read( s.<a class=\"code\" href=\"#!/url=./cpp_ref/class_q_vector.html#a1699472936b80a88d3fc8096975d21b2\">data</a>(), iSize*<span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) );</div>\n\
<div class=\"line\"><a name=\"l00263\"></a><span class=\"lineno\">  263</span>&#160;        <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\"><a name=\"l00264\"></a><span class=\"lineno\">  264</span>&#160;    };</div>\n\
<div class=\"line\"><a name=\"l00265\"></a><span class=\"lineno\">  265</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00269\"></a><span class=\"lineno\">  269</span>&#160;    <span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00270\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ae66ab173b16397b456126f684c32720a\">  270</a></span>&#160;    <span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;operator &lt;&lt;( const QVector&lt;type&gt; &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\"><a name=\"l00271\"></a><span class=\"lineno\">  271</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00272\"></a><span class=\"lineno\">  272</span>&#160;        (*this) &lt;&lt; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.size();</div>\n\
<div class=\"line\"><a name=\"l00273\"></a><span class=\"lineno\">  273</span>&#160;        Write( <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.data(), <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>.size()*<span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) );</div>\n\
<div class=\"line\"><a name=\"l00274\"></a><span class=\"lineno\">  274</span>&#160;        <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\"><a name=\"l00275\"></a><span class=\"lineno\">  275</span>&#160;    };</div>\n\
<div class=\"line\"><a name=\"l00276\"></a><span class=\"lineno\">  276</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00277\"></a><span class=\"lineno\">  277</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> WriteIntArray( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store&lt; unsigned int &gt;</a>&amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"><a name=\"l00278\"></a><span class=\"lineno\">  278</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00279\"></a><span class=\"lineno\">  279</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> ReadIntArray( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store&lt; unsigned int &gt;</a>&amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> );</div>\n\
<div class=\"line\"><a name=\"l00280\"></a><span class=\"lineno\">  280</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00281\"></a><span class=\"lineno\">  281</span>&#160;<span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"><a name=\"l00283\"></a><span class=\"lineno\">  283</span>&#160;    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> RegisterBlock( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a> &amp;sName, <a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a> iSize, <a class=\"code\" href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a> iItemSize );</div>\n\
<div class=\"line\"><a name=\"l00284\"></a><span class=\"lineno\">  284</span>&#160;};</div>\n\
<div class=\"line\"><a name=\"l00285\"></a><span class=\"lineno\">  285</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00287\"></a><span class=\"lineno\">  287</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00288\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/namespacemudbox.html#adbf77c97e4d69b42ac267beb634354a4\">  288</a></span>&#160;<span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a637f7084f9654006932237127d7be263\">operator ==</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> ) { <span class=\"keywordflow\">if</span> ( s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a616ad15a93d8d9aa40f7a5abe38dcd13\">IsStoring</a>() ) s &lt;&lt; v; <span class=\"keywordflow\">else</span> s &gt;&gt; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a>; <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; };</div>\n\
<div class=\"line\"><a name=\"l00289\"></a><span class=\"lineno\">  289</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00290\"></a><span class=\"lineno\">  290</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00291\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a7a3d18d2bffea01e984a6d7b78d66fa5\">  291</a></span>&#160;<span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/namespacemudbox.html#a637f7084f9654006932237127d7be263\">operator ==</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a> ) { <span class=\"keywordflow\">if</span> ( s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a616ad15a93d8d9aa40f7a5abe38dcd13\">IsStoring</a>() ) s &lt;&lt; v; <span class=\"keywordflow\">else</span> s &gt;&gt; *((<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>*)&amp;v); <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a>; };</div>\n\
<div class=\"line\"><a name=\"l00292\"></a><span class=\"lineno\">  292</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00293\"></a><span class=\"lineno\">  293</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00294\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2aac302e2dd6ed8044bb2cfb82d6ab5a\">  294</a></span>&#160;<span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2aac302e2dd6ed8044bb2cfb82d6ab5a\">Store&lt;type&gt;::Serialize</a>( <span class=\"keyword\">class</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\"><a name=\"l00295\"></a><span class=\"lineno\">  295</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00296\"></a><span class=\"lineno\">  296</span>&#160;    <span class=\"keywordflow\">if</span> ( !s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a616ad15a93d8d9aa40f7a5abe38dcd13\">IsStoring</a>() )</div>\n\
<div class=\"line\"><a name=\"l00297\"></a><span class=\"lineno\">  297</span>&#160;        SetItemCount( s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#acfc76421d9b8e2d97438672796d3e931\">ReadInt</a>() );</div>\n\
<div class=\"line\"><a name=\"l00298\"></a><span class=\"lineno\">  298</span>&#160;    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\"><a name=\"l00299\"></a><span class=\"lineno\">  299</span>&#160;        s &lt;&lt; m_iSize;</div>\n\
<div class=\"line\"><a name=\"l00300\"></a><span class=\"lineno\">  300</span>&#160;    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_iSize; i++ )</div>\n\
<div class=\"line\"><a name=\"l00301\"></a><span class=\"lineno\">  301</span>&#160;        s == <span class=\"keyword\">operator</span>[]( i );</div>\n\
<div class=\"line\"><a name=\"l00302\"></a><span class=\"lineno\">  302</span>&#160;};</div>\n\
<div class=\"line\"><a name=\"l00303\"></a><span class=\"lineno\">  303</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00304\"></a><span class=\"lineno\">  304</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00305\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a7b0e84603076786fac853a9d82f3c1f7\">  305</a></span>&#160;<span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;Stream::operator &lt;&lt;( const Store&lt;type&gt; &amp;o ) { (*this) &lt;&lt; o.ItemCount(); Write( &amp;(o[0]), <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>)*o.ItemCount() ); RegisterBlock( o.Name(), o.Size(), <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00306\"></a><span class=\"lineno\">  306</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00307\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ac061bedb61c3a771b2f631b938b2c1a2\">  307</a></span>&#160;<span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a2046a7dea01a756406d96ab2dd27479f\">Stream::operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store&lt;type&gt;</a> &amp;o ) { <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iSize; (*this) &gt;&gt; iSize; <span class=\"keywordflow\">if</span> ( o.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">SetItemCount</a>( iSize ) &amp;&amp; iSize ) <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ac302aa8cd1fd7b345aeb7a16d819caa8\">Read</a>( &amp;(o[0]), <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>)*iSize ); RegisterBlock( o.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a3ede701ecddfef4a46f80b81904cade8\">Name</a>(), o.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#aa15afc7948aa4c3dad5dc862ef52369f\">Size</a>(), <span class=\"keyword\">sizeof</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a>) ); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00308\"></a><span class=\"lineno\">  308</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00309\"></a><span class=\"lineno\">  309</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00310\"></a><span class=\"lineno\">  310</span>&#160;<span class=\"keyword\">template</span>&lt;&gt;</div>\n\
<div class=\"line\"><a name=\"l00311\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a796232d2f600c4609600925f7d0386a2\">  311</a></span>&#160;<span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;Stream::operator &lt;&lt;( const Store&lt;unsigned int&gt; &amp;o ) { WriteIntArray(o); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00312\"></a><span class=\"lineno\">  312</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00313\"></a><span class=\"lineno\">  313</span>&#160;<span class=\"keyword\">template</span>&lt;&gt;</div>\n\
<div class=\"line\"><a name=\"l00314\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#aab15647771c9b818bbd78dba5063f9e5\">  314</a></span>&#160;<span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a2046a7dea01a756406d96ab2dd27479f\">Stream::operator &gt;&gt;</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">Store&lt;unsigned int&gt;</a> &amp;o ) { <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a17ce11b2d2857e0a097674a129051e47\">ReadIntArray</a>(o); <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><a name=\"l00315\"></a><span class=\"lineno\">  315</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00316\"></a><span class=\"lineno\">  316</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00317\"></a><span class=\"lineno\">  317</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00318\"></a><span class=\"lineno\">  318</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00319\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/structmudbox_1_1_attribute_instance.html#a2498295173eb5e339945b7be1297ed9b\">  319</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/structmudbox_1_1_attribute_instance.html#a2498295173eb5e339945b7be1297ed9b\">AttributeInstance&lt;type&gt;::Serialize</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> ) { s == m_cValue; };</div>\n\
<div class=\"line\"><a name=\"l00320\"></a><span class=\"lineno\">  320</span>&#160;<span class=\"keyword\">template</span> &lt; <span class=\"keyword\">typename</span> type &gt;</div>\n\
<div class=\"line\"><a name=\"l00321\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_attribute_pointer.html#a2498295173eb5e339945b7be1297ed9b\">  321</a></span>&#160;<span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_attribute_pointer.html#a2498295173eb5e339945b7be1297ed9b\">AttributePointer&lt;type&gt;::Serialize</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a> &amp;<a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\"><a name=\"l00322\"></a><span class=\"lineno\">  322</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00323\"></a><span class=\"lineno\">  323</span>&#160;    <span class=\"keywordflow\">if</span> ( s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a616ad15a93d8d9aa40f7a5abe38dcd13\">IsStoring</a>() )</div>\n\
<div class=\"line\"><a name=\"l00324\"></a><span class=\"lineno\">  324</span>&#160;        s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a72b712df52952868144f5cf4ee1ad3ee\">WritePointer</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/structmudbox_1_1_attribute_instance.html\">AttributeInstance&lt;type *&gt;::Value</a>() );</div>\n\
<div class=\"line\"><a name=\"l00325\"></a><span class=\"lineno\">  325</span>&#160;    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\"><a name=\"l00326\"></a><span class=\"lineno\">  326</span>&#160;        SetValue( dynamic_cast&lt;type *&gt;( s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a18268c866b35524dabd45dafe02cad54\">ReadPointer</a>() ), <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"><a name=\"l00327\"></a><span class=\"lineno\">  327</span>&#160;};</div>\n\
<div class=\"line\"><a name=\"l00328\"></a><span class=\"lineno\">  328</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00329\"></a><span class=\"lineno\">  329</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00330\"></a><span class=\"lineno\">  330</span>&#160;<span class=\"keyword\">template</span>&lt; <span class=\"keyword\">typename</span> T &gt;    </div>\n\
<div class=\"line\"><a name=\"l00331\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a2498295173eb5e339945b7be1297ed9b\">  331</a></span>&#160;<span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a2498295173eb5e339945b7be1297ed9b\">ExtendableStore&lt;T&gt;::Serialize</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">Stream</a>&amp; <a class=\"code\" href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a> )</div>\n\
<div class=\"line\"><a name=\"l00332\"></a><span class=\"lineno\">  332</span>&#160;{</div>\n\
<div class=\"line\"><a name=\"l00333\"></a><span class=\"lineno\">  333</span>&#160;    s == m_iBlockItemCount;</div>\n\
<div class=\"line\"><a name=\"l00334\"></a><span class=\"lineno\">  334</span>&#160;    s == m_iBlockPow;</div>\n\
<div class=\"line\"><a name=\"l00335\"></a><span class=\"lineno\">  335</span>&#160;    s == m_iBlockMask;</div>\n\
<div class=\"line\"><a name=\"l00336\"></a><span class=\"lineno\">  336</span>&#160;    s == m_iLogicalItemCount;</div>\n\
<div class=\"line\"><a name=\"l00337\"></a><span class=\"lineno\">  337</span>&#160;    s == m_iAlignment;</div>\n\
<div class=\"line\"><a name=\"l00338\"></a><span class=\"lineno\">  338</span>&#160;       </div>\n\
<div class=\"line\"><a name=\"l00339\"></a><span class=\"lineno\">  339</span>&#160;    <span class=\"keywordflow\">if</span>( s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a616ad15a93d8d9aa40f7a5abe38dcd13\">IsStoring</a>() )</div>\n\
<div class=\"line\"><a name=\"l00340\"></a><span class=\"lineno\">  340</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00341\"></a><span class=\"lineno\">  341</span>&#160;        s &lt;&lt; m_aBlocks.ItemCount();</div>\n\
<div class=\"line\"><a name=\"l00342\"></a><span class=\"lineno\">  342</span>&#160;        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aBlocks.ItemCount(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00343\"></a><span class=\"lineno\">  343</span>&#160;           s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ad1ac413e21b5f30204ffe75b779e5ec3\">Write</a>( (<span class=\"keywordtype\">void</span>*)m_aBlocks[i], <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount );</div>\n\
<div class=\"line\"><a name=\"l00344\"></a><span class=\"lineno\">  344</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00345\"></a><span class=\"lineno\">  345</span>&#160;    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\"><a name=\"l00346\"></a><span class=\"lineno\">  346</span>&#160;    {</div>\n\
<div class=\"line\"><a name=\"l00347\"></a><span class=\"lineno\">  347</span>&#160;        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> iC = 0;</div>\n\
<div class=\"line\"><a name=\"l00348\"></a><span class=\"lineno\">  348</span>&#160;        s &gt;&gt; iC;</div>\n\
<div class=\"line\"><a name=\"l00349\"></a><span class=\"lineno\">  349</span>&#160;        m_aBlocks.SetItemCount( iC );</div>\n\
<div class=\"line\"><a name=\"l00350\"></a><span class=\"lineno\">  350</span>&#160;        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; m_aBlocks.ItemCount(); ++i )</div>\n\
<div class=\"line\"><a name=\"l00351\"></a><span class=\"lineno\">  351</span>&#160;        {</div>\n\
<div class=\"line\"><a name=\"l00352\"></a><span class=\"lineno\">  352</span>&#160;            m_aBlocks[i] = (T*)<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">Block::AlignedAlloc</a>( <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount, m_iAlignment );</div>\n\
<div class=\"line\"><a name=\"l00353\"></a><span class=\"lineno\">  353</span>&#160;            s.<a class=\"code\" href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ac302aa8cd1fd7b345aeb7a16d819caa8\">Read</a>( (<span class=\"keywordtype\">void</span>*)m_aBlocks[i], <span class=\"keyword\">sizeof</span>(T) * m_iBlockItemCount );</div>\n\
<div class=\"line\"><a name=\"l00354\"></a><span class=\"lineno\">  354</span>&#160;        }</div>\n\
<div class=\"line\"><a name=\"l00355\"></a><span class=\"lineno\">  355</span>&#160;    }</div>\n\
<div class=\"line\"><a name=\"l00356\"></a><span class=\"lineno\">  356</span>&#160;}; </div>\n\
<div class=\"line\"><a name=\"l00357\"></a><span class=\"lineno\">  357</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00358\"></a><span class=\"lineno\">  358</span>&#160;}; <span class=\"comment\">// end of namespace mudbox</span></div>\n\
<div class=\"line\"><a name=\"l00359\"></a><span class=\"lineno\">  359</span>&#160;</div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a63267399cd2a2ee217572c11d2e54f07\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a63267399cd2a2ee217572c11d2e54f07\">type</a></div><div class=\"ttdeci\">GLuint GLuint GLsizei GLenum type</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l00872\">GLee.h:872</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_vector_html_ada388d17b93c54a1a0f6edddbe0953ab\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_vector.html#ada388d17b93c54a1a0f6edddbe0953ab\">QVector::resize</a></div><div class=\"ttdeci\">void resize(int size)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvector_8h_source.html#l00342\">qvector.h:342</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_vector_html_a1699472936b80a88d3fc8096975d21b2\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_vector.html#a1699472936b80a88d3fc8096975d21b2\">QVector::data</a></div><div class=\"ttdeci\">T * data()</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qvector_8h_source.html#l00152\">qvector.h:152</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html\">mudbox::Store</a></div><div class=\"ttdoc\">Simple array class. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00334\">array.h:334</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_ad1ac413e21b5f30204ffe75b779e5ec3\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ad1ac413e21b5f30204ffe75b779e5ec3\">mudbox::Stream::Write</a></div><div class=\"ttdeci\">virtual size_t Write(const void *pBuffer, size_t iSize)</div><div class=\"ttdoc\">Writes data to the stream from a buffer you provide. </div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_a72b712df52952868144f5cf4ee1ad3ee\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a72b712df52952868144f5cf4ee1ad3ee\">mudbox::Stream::WritePointer</a></div><div class=\"ttdeci\">virtual void WritePointer(Node *pPointer)</div></div>\n\
<div class=\"ttc\" id=\"_s_s_e_8h_html_a48d936d9a8d7c3911d7a6978264d36ba\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_s_s_e_8h.html#a48d936d9a8d7c3911d7a6978264d36ba\">operator&lt;&lt;</a></div><div class=\"ttdeci\">mudbox::Vector &amp; operator&lt;&lt;(mudbox::Vector &amp;v, const HWVector &amp;r)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_s_s_e_8h_source.html#l00245\">SSE.h:245</a></div></div>\n\
<div class=\"ttc\" id=\"qglobal_8h_html_aacec69bbe5cd009ccdcaf50f9a0289aa\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qglobal_8h.html#aacec69bbe5cd009ccdcaf50f9a0289aa\">qint64</a></div><div class=\"ttdeci\">long long qint64</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qglobal_8h_source.html#l00947\">qglobal.h:947</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_node_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_node.html\">mudbox::Node</a></div><div class=\"ttdoc\">This is the base class for most classes in the Mudbox SDK. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/node_8h_source.html#l00740\">node.h:740</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_a29940ae63ec06c9998bba873e25407ad\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#a29940ae63ec06c9998bba873e25407ad\">mudbox::uint64</a></div><div class=\"ttdeci\">unsigned long long uint64</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00177\">mudbox.h:177</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a2aac302e2dd6ed8044bb2cfb82d6ab5a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a2aac302e2dd6ed8044bb2cfb82d6ab5a\">mudbox::Store::Serialize</a></div><div class=\"ttdeci\">void Serialize(class Stream &amp;s)</div><div class=\"ttdoc\">Serializes the the array and its contents from/to a stream. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00294\">stream.h:294</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_a8bb70fb115ed751a6241d7f87708a45b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a8bb70fb115ed751a6241d7f87708a45b\">mudbox::Stream::IsOlderThan</a></div><div class=\"ttdeci\">bool IsOlderThan(int iVersion, Type *) const </div><div class=\"ttdoc\">Checks if the file is older than a specified version for the given class. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00103\">stream.h:103</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_a637f7084f9654006932237127d7be263\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#a637f7084f9654006932237127d7be263\">mudbox::operator==</a></div><div class=\"ttdeci\">bool operator==(const Attribute &amp;cA, const AttributeInstance&lt; type &gt; &amp;cB)</div><div class=\"ttdoc\">This operator compares the two attributes and NOT their values. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/node_8h_source.html#l00577\">node.h:577</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_a18268c866b35524dabd45dafe02cad54\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a18268c866b35524dabd45dafe02cad54\">mudbox::Stream::ReadPointer</a></div><div class=\"ttdeci\">virtual Node * ReadPointer(void)</div><div class=\"ttdoc\">Read/Writes node pointers. </div></div>\n\
<div class=\"ttc\" id=\"mudbox_8h_html_a25e5165def787f2fd6c0f93548a981db\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/mudbox_8h.html#a25e5165def787f2fd6c0f93548a981db\">MB_VERIFY_EQ</a></div><div class=\"ttdeci\">#define MB_VERIFY_EQ(condition_, value_)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/mudbox_8h_source.html#l00089\">mudbox.h:89</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_extendable_store_html_a2498295173eb5e339945b7be1297ed9b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_extendable_store.html#a2498295173eb5e339945b7be1297ed9b\">mudbox::ExtendableStore::Serialize</a></div><div class=\"ttdeci\">void Serialize(Stream &amp;s)</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00331\">stream.h:331</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_block_html_a3ede701ecddfef4a46f80b81904cade8\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#a3ede701ecddfef4a46f80b81904cade8\">mudbox::Block::Name</a></div><div class=\"ttdeci\">const char * Name(void) const </div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_a2046a7dea01a756406d96ab2dd27479f\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a2046a7dea01a756406d96ab2dd27479f\">mudbox::Stream::operator&gt;&gt;</a></div><div class=\"ttdeci\">Stream &amp; operator&gt;&gt;(type &amp;v)</div><div class=\"ttdoc\">Reads data from the stream to any data type. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00219\">stream.h:219</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_a17ce11b2d2857e0a097674a129051e47\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a17ce11b2d2857e0a097674a129051e47\">mudbox::Stream::ReadIntArray</a></div><div class=\"ttdeci\">virtual void ReadIntArray(Store&lt; unsigned int &gt; &amp;s)</div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_store_html_a478f851a51d23a98795488716e474907\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_store.html#a478f851a51d23a98795488716e474907\">mudbox::Store::SetItemCount</a></div><div class=\"ttdeci\">bool SetItemCount(unsigned int iSize, bool bKeepContent=false)</div><div class=\"ttdoc\">Sets the logical size of the array. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00403\">array.h:403</a></div></div>\n\
<div class=\"ttc\" id=\"structmudbox_1_1_attribute_instance_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/structmudbox_1_1_attribute_instance.html\">mudbox::AttributeInstance</a></div><div class=\"ttdoc\">This is a generic attribute which can be used instead of the standard built in types. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/node_8h_source.html#l00394\">node.h:394</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_class_desc_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_class_desc.html\">mudbox::ClassDesc</a></div><div class=\"ttdoc\">This structure represents and describes a class. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/node_8h_source.html#l00022\">node.h:22</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_attribute_pointer_html_a2498295173eb5e339945b7be1297ed9b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_attribute_pointer.html#a2498295173eb5e339945b7be1297ed9b\">mudbox::AttributePointer::Serialize</a></div><div class=\"ttdeci\">void Serialize(Stream &amp;s)</div><div class=\"ttdoc\">Serializes the pointer value to a stream. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00321\">stream.h:321</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_acfc76421d9b8e2d97438672796d3e931\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#acfc76421d9b8e2d97438672796d3e931\">mudbox::Stream::ReadInt</a></div><div class=\"ttdeci\">int ReadInt(void)</div><div class=\"ttdoc\">Reads a single integer from the stream, and returns it. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00204\">stream.h:204</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_block_html_aa15afc7948aa4c3dad5dc862ef52369f\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#aa15afc7948aa4c3dad5dc862ef52369f\">mudbox::Block::Size</a></div><div class=\"ttdeci\">long long Size(void) const </div></div>\n\
<div class=\"ttc\" id=\"qbitarray_8h_html_ab1b746b5374b778a985b553606a6f5f6\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/qbitarray_8h.html#ab1b746b5374b778a985b553606a6f5f6\">operator&gt;&gt;</a></div><div class=\"ttdeci\">Q_CORE_EXPORT QDataStream &amp; operator&gt;&gt;(QDataStream &amp;, QBitArray &amp;)</div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_a14cfbe2fc2234f5504618905b69d1e06\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#a14cfbe2fc2234f5504618905b69d1e06\">v</a></div><div class=\"ttdeci\">const GLdouble * v</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01174\">GLee.h:1174</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_ac302aa8cd1fd7b345aeb7a16d819caa8\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ac302aa8cd1fd7b345aeb7a16d819caa8\">mudbox::Stream::Read</a></div><div class=\"ttdeci\">virtual size_t Read(void *pBuffer, size_t iSize)</div><div class=\"ttdoc\">Reads data directly from the stream into a buffer you provide. </div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_ab7eb54f70ce1d999d32a7b83d0edcf10\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#ab7eb54f70ce1d999d32a7b83d0edcf10\">mudbox::Stream::IsNewerThan</a></div><div class=\"ttdeci\">bool IsNewerThan(int iVersion, Type *) const </div><div class=\"ttdoc\">Checks if the file is newer than a specified version for the given class. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00121\">stream.h:121</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_aa5367c14d90f462230c2611b81b41d23\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#aa5367c14d90f462230c2611b81b41d23\">p</a></div><div class=\"ttdeci\">GLfloat GLfloat p</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l05416\">GLee.h:5416</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html\">mudbox</a></div><div class=\"ttdoc\">Class: ConvolutionKernel. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/array_8h_source.html#l00015\">array.h:15</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_vector_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_vector.html\">QVector</a></div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/audiodataoutput_8h_source.html#l00033\">audiodataoutput.h:33</a></div></div>\n\
<div class=\"ttc\" id=\"class_q_string_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/class_q_string.html\">QString</a></div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/qstring_8h_source.html#l00083\">qstring.h:83</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html\">mudbox::Stream</a></div><div class=\"ttdoc\">Streams are used to read information from a file, or to write it to a file. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00039\">stream.h:39</a></div></div>\n\
<div class=\"ttc\" id=\"node_8h_html_a431009564592a24e5f46f5df421131a1\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/node_8h.html#a431009564592a24e5f46f5df421131a1\">DECLARE_CLASS</a></div><div class=\"ttdeci\">#define DECLARE_CLASS</div><div class=\"ttdoc\">This macro should be used in declaration of classes which are inherited from the Node class (or any d...</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/node_8h_source.html#l00091\">node.h:91</a></div></div>\n\
<div class=\"ttc\" id=\"_g_lee_8h_html_ad585a1393cfa368fa9dc3d8ebff640d5\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/_g_lee_8h.html#ad585a1393cfa368fa9dc3d8ebff640d5\">s</a></div><div class=\"ttdeci\">GLdouble s</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/_g_lee_8h_source.html#l01173\">GLee.h:1173</a></div></div>\n\
<div class=\"ttc\" id=\"namespacemudbox_html_aecc396f4d247f202e161edaa821bf54a\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/namespacemudbox.html#aecc396f4d247f202e161edaa821bf54a\">mudbox::NodePointer</a></div><div class=\"ttdeci\">Node * NodePointer</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00017\">stream.h:17</a></div></div>\n\
<div class=\"ttc\" id=\"structmudbox_1_1_attribute_instance_html_a2498295173eb5e339945b7be1297ed9b\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/structmudbox_1_1_attribute_instance.html#a2498295173eb5e339945b7be1297ed9b\">mudbox::AttributeInstance::Serialize</a></div><div class=\"ttdeci\">void Serialize(Stream &amp;s)</div><div class=\"ttdoc\">Serialize the value of the attribute into a stream. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/stream_8h_source.html#l00319\">stream.h:319</a></div></div>\n\
<div class=\"ttc\" id=\"dllinterface_8h_html_aecc26481a5bdb4445048f4fb0f3bb417\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/dllinterface_8h.html#aecc26481a5bdb4445048f4fb0f3bb417\">MBDLL_DECL</a></div><div class=\"ttdeci\">#define MBDLL_DECL</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./cpp_ref/dllinterface_8h_source.html#l00035\">dllinterface.h:35</a></div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_stream_html_a616ad15a93d8d9aa40f7a5abe38dcd13\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_stream.html#a616ad15a93d8d9aa40f7a5abe38dcd13\">mudbox::Stream::IsStoring</a></div><div class=\"ttdeci\">virtual bool IsStoring(void) const </div><div class=\"ttdoc\">Returns true if the stream is in storing mode (i.e. </div></div>\n\
<div class=\"ttc\" id=\"classmudbox_1_1_block_html_acfa810281d26ab75bf5dfeff5510d6c1\"><div class=\"ttname\"><a href=\"#!/url=./cpp_ref/classmudbox_1_1_block.html#acfa810281d26ab75bf5dfeff5510d6c1\">mudbox::Block::AlignedAlloc</a></div><div class=\"ttdeci\">static void * AlignedAlloc(size_t iBytes, unsigned int iAlignment)</div></div>\n\
</div><!-- fragment --></div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";